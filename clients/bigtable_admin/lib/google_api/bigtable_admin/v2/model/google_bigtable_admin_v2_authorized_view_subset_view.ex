# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewSubsetView do
  @moduledoc """
  Defines a simple AuthorizedView that is a subset of the underlying Table.

  ## Attributes

  *   `familySubsets` (*type:* `%{optional(String.t) => GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets.t}`, *default:* `nil`) - Map from column family name to the columns in this family to be included in the AuthorizedView.
  *   `rowPrefixes` (*type:* `list(String.t)`, *default:* `nil`) - Row prefixes to be included in the AuthorizedView. To provide access to all rows, include the empty string as a prefix ("").
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :familySubsets =>
            %{
              optional(String.t()) =>
                GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets.t()
            }
            | nil,
          :rowPrefixes => list(String.t()) | nil
        }

  field(:familySubsets,
    as: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets,
    type: :map
  )

  field(:rowPrefixes, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewSubsetView do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewSubsetView.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewSubsetView do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
