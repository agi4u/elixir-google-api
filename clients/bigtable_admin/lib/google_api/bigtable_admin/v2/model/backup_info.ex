# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.BackupInfo do
  @moduledoc """
  Information about a backup.

  ## Attributes

  *   `backup` (*type:* `String.t`, *default:* `nil`) - Output only. Name of the backup.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp.
  *   `sourceBackup` (*type:* `String.t`, *default:* `nil`) - Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects//instances//backups/.
  *   `sourceTable` (*type:* `String.t`, *default:* `nil`) - Output only. Name of the table the backup was created from.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :backup => String.t() | nil,
          :endTime => DateTime.t() | nil,
          :sourceBackup => String.t() | nil,
          :sourceTable => String.t() | nil,
          :startTime => DateTime.t() | nil
        }

  field(:backup)
  field(:endTime, as: DateTime)
  field(:sourceBackup)
  field(:sourceTable)
  field(:startTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.BigtableAdmin.V2.Model.BackupInfo do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.BackupInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigtableAdmin.V2.Model.BackupInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
