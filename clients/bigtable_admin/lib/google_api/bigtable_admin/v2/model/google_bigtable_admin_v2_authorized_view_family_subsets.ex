# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets do
  @moduledoc """
  Subsets of a column family that are included in this AuthorizedView.

  ## Attributes

  *   `qualifierPrefixes` (*type:* `list(String.t)`, *default:* `nil`) - Prefixes for qualifiers to be included in the AuthorizedView. Every qualifier starting with one of these prefixes is included in the AuthorizedView. To provide access to all qualifiers, include the empty string as a prefix ("").
  *   `qualifiers` (*type:* `list(String.t)`, *default:* `nil`) - Individual exact column qualifiers to be included in the AuthorizedView.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :qualifierPrefixes => list(String.t()) | nil,
          :qualifiers => list(String.t()) | nil
        }

  field(:qualifierPrefixes, type: :list)
  field(:qualifiers, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2AuthorizedViewFamilySubsets do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
