# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.CheckConsistencyRequest do
  @moduledoc """
  Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency

  ## Attributes

  *   `consistencyToken` (*type:* `String.t`, *default:* `nil`) - Required. The token created using GenerateConsistencyToken for the Table.
  *   `dataBoostReadLocalWrites` (*type:* `GoogleApi.BigtableAdmin.V2.Model.DataBoostReadLocalWrites.t`, *default:* `nil`) - Checks that reads using an app profile with `DataBoostIsolationReadOnly` can see all writes committed before the token was created, but only if the read and write target the same cluster.
  *   `standardReadRemoteWrites` (*type:* `GoogleApi.BigtableAdmin.V2.Model.StandardReadRemoteWrites.t`, *default:* `nil`) - Checks that reads using an app profile with `StandardIsolation` can see all writes committed before the token was created, even if the read and write target different clusters.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :consistencyToken => String.t() | nil,
          :dataBoostReadLocalWrites =>
            GoogleApi.BigtableAdmin.V2.Model.DataBoostReadLocalWrites.t() | nil,
          :standardReadRemoteWrites =>
            GoogleApi.BigtableAdmin.V2.Model.StandardReadRemoteWrites.t() | nil
        }

  field(:consistencyToken)
  field(:dataBoostReadLocalWrites, as: GoogleApi.BigtableAdmin.V2.Model.DataBoostReadLocalWrites)
  field(:standardReadRemoteWrites, as: GoogleApi.BigtableAdmin.V2.Model.StandardReadRemoteWrites)
end

defimpl Poison.Decoder, for: GoogleApi.BigtableAdmin.V2.Model.CheckConsistencyRequest do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.CheckConsistencyRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigtableAdmin.V2.Model.CheckConsistencyRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
