# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSTablesTrainingOperationMetadata do
  @moduledoc """


  ## Attributes

  *   `createModelStage` (*type:* `String.t`, *default:* `nil`) - Current stage of creating model.
  *   `optimizationObjective` (*type:* `String.t`, *default:* `nil`) - The optimization objective for model.
  *   `topTrials` (*type:* `list(GoogleApi.Language.V2.Model.XPSTuningTrial.t)`, *default:* `nil`) - This field is for training. When the operation is terminated successfully, AutoML Backend post this field to operation metadata in spanner. If the metadata has no trials returned, the training operation is supposed to be a failure.
  *   `trainBudgetMilliNodeHours` (*type:* `String.t`, *default:* `nil`) - Creating model budget.
  *   `trainingObjectivePoints` (*type:* `list(GoogleApi.Language.V2.Model.XPSTrainingObjectivePoint.t)`, *default:* `nil`) - This field records the training objective value with respect to time, giving insight into how the model architecture search is performing as training time elapses.
  *   `trainingStartTime` (*type:* `DateTime.t`, *default:* `nil`) - Timestamp when training process starts.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createModelStage => String.t() | nil,
          :optimizationObjective => String.t() | nil,
          :topTrials => list(GoogleApi.Language.V2.Model.XPSTuningTrial.t()) | nil,
          :trainBudgetMilliNodeHours => String.t() | nil,
          :trainingObjectivePoints =>
            list(GoogleApi.Language.V2.Model.XPSTrainingObjectivePoint.t()) | nil,
          :trainingStartTime => DateTime.t() | nil
        }

  field(:createModelStage)
  field(:optimizationObjective)
  field(:topTrials, as: GoogleApi.Language.V2.Model.XPSTuningTrial, type: :list)
  field(:trainBudgetMilliNodeHours)

  field(:trainingObjectivePoints,
    as: GoogleApi.Language.V2.Model.XPSTrainingObjectivePoint,
    type: :list
  )

  field(:trainingStartTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSTablesTrainingOperationMetadata do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSTablesTrainingOperationMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSTablesTrainingOperationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
