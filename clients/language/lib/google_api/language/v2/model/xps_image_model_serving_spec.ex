# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSImageModelServingSpec do
  @moduledoc """
  Serving specification for image models.

  ## Attributes

  *   `modelThroughputEstimation` (*type:* `list(GoogleApi.Language.V2.Model.XPSImageModelServingSpecModelThroughputEstimation.t)`, *default:* `nil`) - Populate under uCAIP request scope.
  *   `nodeQps` (*type:* `float()`, *default:* `nil`) - An estimated value of how much traffic a node can serve. Populated for AutoMl request only.
  *   `tfRuntimeVersion` (*type:* `String.t`, *default:* `nil`) - ## The fields below are only populated under uCAIP request scope. https://cloud.google.com/ml-engine/docs/runtime-version-list
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :modelThroughputEstimation =>
            list(
              GoogleApi.Language.V2.Model.XPSImageModelServingSpecModelThroughputEstimation.t()
            )
            | nil,
          :nodeQps => float() | nil,
          :tfRuntimeVersion => String.t() | nil
        }

  field(:modelThroughputEstimation,
    as: GoogleApi.Language.V2.Model.XPSImageModelServingSpecModelThroughputEstimation,
    type: :list
  )

  field(:nodeQps)
  field(:tfRuntimeVersion)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSImageModelServingSpec do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSImageModelServingSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSImageModelServingSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
