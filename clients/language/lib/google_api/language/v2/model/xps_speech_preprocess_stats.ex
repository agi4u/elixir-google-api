# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSSpeechPreprocessStats do
  @moduledoc """


  ## Attributes

  *   `dataErrors` (*type:* `list(GoogleApi.Language.V2.Model.XPSDataErrors.t)`, *default:* `nil`) - Different types of data errors and the counts associated with them.
  *   `numHumanLabeledExamples` (*type:* `integer()`, *default:* `nil`) - The number of rows marked HUMAN_LABELLED
  *   `numLogsExamples` (*type:* `integer()`, *default:* `nil`) - The number of samples found in the previously recorded logs data.
  *   `numMachineTranscribedExamples` (*type:* `integer()`, *default:* `nil`) - The number of rows marked as MACHINE_TRANSCRIBED
  *   `testExamplesCount` (*type:* `integer()`, *default:* `nil`) - The number of examples labelled as TEST by Speech xps server.
  *   `testSentencesCount` (*type:* `integer()`, *default:* `nil`) - The number of sentences in the test data set.
  *   `testWordsCount` (*type:* `integer()`, *default:* `nil`) - The number of words in the test data set.
  *   `trainExamplesCount` (*type:* `integer()`, *default:* `nil`) - The number of examples labeled as TRAIN by Speech xps server.
  *   `trainSentencesCount` (*type:* `integer()`, *default:* `nil`) - The number of sentences in the training data set.
  *   `trainWordsCount` (*type:* `integer()`, *default:* `nil`) - The number of words in the training data set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataErrors => list(GoogleApi.Language.V2.Model.XPSDataErrors.t()) | nil,
          :numHumanLabeledExamples => integer() | nil,
          :numLogsExamples => integer() | nil,
          :numMachineTranscribedExamples => integer() | nil,
          :testExamplesCount => integer() | nil,
          :testSentencesCount => integer() | nil,
          :testWordsCount => integer() | nil,
          :trainExamplesCount => integer() | nil,
          :trainSentencesCount => integer() | nil,
          :trainWordsCount => integer() | nil
        }

  field(:dataErrors, as: GoogleApi.Language.V2.Model.XPSDataErrors, type: :list)
  field(:numHumanLabeledExamples)
  field(:numLogsExamples)
  field(:numMachineTranscribedExamples)
  field(:testExamplesCount)
  field(:testSentencesCount)
  field(:testWordsCount)
  field(:trainExamplesCount)
  field(:trainSentencesCount)
  field(:trainWordsCount)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSSpeechPreprocessStats do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSSpeechPreprocessStats.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSSpeechPreprocessStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
