# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSTableSpec do
  @moduledoc """


  ## Attributes

  *   `columnSpecs` (*type:* `%{optional(String.t) => GoogleApi.Language.V2.Model.XPSColumnSpec.t}`, *default:* `nil`) - Mapping from column id to column spec.
  *   `importedDataSizeInBytes` (*type:* `String.t`, *default:* `nil`) - The total size of imported data of the table.
  *   `rowCount` (*type:* `String.t`, *default:* `nil`) - The number of rows in the table.
  *   `timeColumnId` (*type:* `integer()`, *default:* `nil`) - The id of the time column.
  *   `validRowCount` (*type:* `String.t`, *default:* `nil`) - The number of valid rows.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columnSpecs =>
            %{optional(String.t()) => GoogleApi.Language.V2.Model.XPSColumnSpec.t()} | nil,
          :importedDataSizeInBytes => String.t() | nil,
          :rowCount => String.t() | nil,
          :timeColumnId => integer() | nil,
          :validRowCount => String.t() | nil
        }

  field(:columnSpecs, as: GoogleApi.Language.V2.Model.XPSColumnSpec, type: :map)
  field(:importedDataSizeInBytes)
  field(:rowCount)
  field(:timeColumnId)
  field(:validRowCount)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSTableSpec do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSTableSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSTableSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
