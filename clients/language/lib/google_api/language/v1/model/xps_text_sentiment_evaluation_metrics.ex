# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V1.Model.XPSTextSentimentEvaluationMetrics do
  @moduledoc """
  Model evaluation metrics for text sentiment problems.

  ## Attributes

  *   `confusionMatrix` (*type:* `GoogleApi.Language.V1.Model.XPSConfusionMatrix.t`, *default:* `nil`) - Output only. Confusion matrix of the evaluation. Only set for the overall model evaluation, not for evaluation of a single annotation spec.
  *   `f1Score` (*type:* `number()`, *default:* `nil`) - Output only. The harmonic mean of recall and precision.
  *   `linearKappa` (*type:* `number()`, *default:* `nil`) - Output only. Linear weighted kappa. Only set for the overall model evaluation, not for evaluation of a single annotation spec.
  *   `meanAbsoluteError` (*type:* `number()`, *default:* `nil`) - Output only. Mean absolute error. Only set for the overall model evaluation, not for evaluation of a single annotation spec.
  *   `meanSquaredError` (*type:* `number()`, *default:* `nil`) - Output only. Mean squared error. Only set for the overall model evaluation, not for evaluation of a single annotation spec.
  *   `precision` (*type:* `number()`, *default:* `nil`) - Output only. Precision.
  *   `quadraticKappa` (*type:* `number()`, *default:* `nil`) - Output only. Quadratic weighted kappa. Only set for the overall model evaluation, not for evaluation of a single annotation spec.
  *   `recall` (*type:* `number()`, *default:* `nil`) - Output only. Recall.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confusionMatrix => GoogleApi.Language.V1.Model.XPSConfusionMatrix.t() | nil,
          :f1Score => number() | nil,
          :linearKappa => number() | nil,
          :meanAbsoluteError => number() | nil,
          :meanSquaredError => number() | nil,
          :precision => number() | nil,
          :quadraticKappa => number() | nil,
          :recall => number() | nil
        }

  field(:confusionMatrix, as: GoogleApi.Language.V1.Model.XPSConfusionMatrix)
  field(:f1Score)
  field(:linearKappa)
  field(:meanAbsoluteError)
  field(:meanSquaredError)
  field(:precision)
  field(:quadraticKappa)
  field(:recall)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V1.Model.XPSTextSentimentEvaluationMetrics do
  def decode(value, options) do
    GoogleApi.Language.V1.Model.XPSTextSentimentEvaluationMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V1.Model.XPSTextSentimentEvaluationMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
