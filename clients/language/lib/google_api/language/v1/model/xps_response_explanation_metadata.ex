# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V1.Model.XPSResponseExplanationMetadata do
  @moduledoc """


  ## Attributes

  *   `inputs` (*type:* `%{optional(String.t) => GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataInputMetadata.t}`, *default:* `nil`) - Metadata of the input.
  *   `outputs` (*type:* `%{optional(String.t) => GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataOutputMetadata.t}`, *default:* `nil`) - Metadata of the output.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :inputs =>
            %{
              optional(String.t()) =>
                GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataInputMetadata.t()
            }
            | nil,
          :outputs =>
            %{
              optional(String.t()) =>
                GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataOutputMetadata.t()
            }
            | nil
        }

  field(:inputs,
    as: GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataInputMetadata,
    type: :map
  )

  field(:outputs,
    as: GoogleApi.Language.V1.Model.XPSResponseExplanationMetadataOutputMetadata,
    type: :map
  )
end

defimpl Poison.Decoder, for: GoogleApi.Language.V1.Model.XPSResponseExplanationMetadata do
  def decode(value, options) do
    GoogleApi.Language.V1.Model.XPSResponseExplanationMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V1.Model.XPSResponseExplanationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
