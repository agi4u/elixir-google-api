# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V1.Model.XPSVideoActionRecognitionEvaluationMetrics do
  @moduledoc """
  Model evaluation metrics for video action recognition.

  ## Attributes

  *   `evaluatedActionCount` (*type:* `integer()`, *default:* `nil`) - Output only. The number of ground truth actions used to create this evaluation.
  *   `videoActionMetricsEntries` (*type:* `list(GoogleApi.Language.V1.Model.XPSVideoActionMetricsEntry.t)`, *default:* `nil`) - Output only. The metric entries for precision window lengths: 1s,2s,3s,4s, 5s.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :evaluatedActionCount => integer() | nil,
          :videoActionMetricsEntries =>
            list(GoogleApi.Language.V1.Model.XPSVideoActionMetricsEntry.t()) | nil
        }

  field(:evaluatedActionCount)

  field(:videoActionMetricsEntries,
    as: GoogleApi.Language.V1.Model.XPSVideoActionMetricsEntry,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.Language.V1.Model.XPSVideoActionRecognitionEvaluationMetrics do
  def decode(value, options) do
    GoogleApi.Language.V1.Model.XPSVideoActionRecognitionEvaluationMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Language.V1.Model.XPSVideoActionRecognitionEvaluationMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
