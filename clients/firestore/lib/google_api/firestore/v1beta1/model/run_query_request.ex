# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firestore.V1beta1.Model.RunQueryRequest do
  @moduledoc """
  The request for Firestore.RunQuery.

  ## Attributes

  *   `explainOptions` (*type:* `GoogleApi.Firestore.V1beta1.Model.ExplainOptions.t`, *default:* `nil`) - Optional. Explain options for the query. If set, additional query statistics will be returned. If not, only query results will be returned.
  *   `newTransaction` (*type:* `GoogleApi.Firestore.V1beta1.Model.TransactionOptions.t`, *default:* `nil`) - Starts a new transaction and reads the documents. Defaults to a read-only transaction. The new transaction ID will be returned as the first response in the stream.
  *   `readTime` (*type:* `DateTime.t`, *default:* `nil`) - Reads documents as they were at the given time. This must be a microsecond precision timestamp within the past one hour, or if Point-in-Time Recovery is enabled, can additionally be a whole minute timestamp within the past 7 days.
  *   `structuredQuery` (*type:* `GoogleApi.Firestore.V1beta1.Model.StructuredQuery.t`, *default:* `nil`) - A structured query.
  *   `transaction` (*type:* `String.t`, *default:* `nil`) - Run the query within an already active transaction. The value here is the opaque transaction ID to execute the query in.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :explainOptions => GoogleApi.Firestore.V1beta1.Model.ExplainOptions.t() | nil,
          :newTransaction => GoogleApi.Firestore.V1beta1.Model.TransactionOptions.t() | nil,
          :readTime => DateTime.t() | nil,
          :structuredQuery => GoogleApi.Firestore.V1beta1.Model.StructuredQuery.t() | nil,
          :transaction => String.t() | nil
        }

  field(:explainOptions, as: GoogleApi.Firestore.V1beta1.Model.ExplainOptions)
  field(:newTransaction, as: GoogleApi.Firestore.V1beta1.Model.TransactionOptions)
  field(:readTime, as: DateTime)
  field(:structuredQuery, as: GoogleApi.Firestore.V1beta1.Model.StructuredQuery)
  field(:transaction)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1beta1.Model.RunQueryRequest do
  def decode(value, options) do
    GoogleApi.Firestore.V1beta1.Model.RunQueryRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1beta1.Model.RunQueryRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
