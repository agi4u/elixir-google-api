# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BareMetalSolution.V2.Model.VolumeSnapshot do
  @moduledoc """
  A snapshot of a volume. Only boot volumes can have snapshots.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The creation time of the snapshot.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The description of the snapshot.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. An identifier for the snapshot, generated by the backend.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the snapshot.
  *   `storageVolume` (*type:* `String.t`, *default:* `nil`) - Output only. The name of the volume which this snapshot belongs to.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :id => String.t() | nil,
          :name => String.t() | nil,
          :storageVolume => String.t() | nil,
          :type => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:description)
  field(:id)
  field(:name)
  field(:storageVolume)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.BareMetalSolution.V2.Model.VolumeSnapshot do
  def decode(value, options) do
    GoogleApi.BareMetalSolution.V2.Model.VolumeSnapshot.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BareMetalSolution.V2.Model.VolumeSnapshot do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
