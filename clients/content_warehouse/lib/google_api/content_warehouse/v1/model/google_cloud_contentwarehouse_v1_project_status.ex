# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProjectStatus do
  @moduledoc """
  Status of a project, including the project state, dbType, aclMode and etc.

  ## Attributes

  *   `accessControlMode` (*type:* `String.t`, *default:* `nil`) - Access control mode.
  *   `databaseType` (*type:* `String.t`, *default:* `nil`) - Database type.
  *   `documentCreatorDefaultRole` (*type:* `String.t`, *default:* `nil`) - The default role for the person who create a document.
  *   `location` (*type:* `String.t`, *default:* `nil`) - The location of the queried project.
  *   `qaEnabled` (*type:* `boolean()`, *default:* `nil`) - If the qa is enabled on this project.
  *   `state` (*type:* `String.t`, *default:* `nil`) - State of the project.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessControlMode => String.t() | nil,
          :databaseType => String.t() | nil,
          :documentCreatorDefaultRole => String.t() | nil,
          :location => String.t() | nil,
          :qaEnabled => boolean() | nil,
          :state => String.t() | nil
        }

  field(:accessControlMode)
  field(:databaseType)
  field(:documentCreatorDefaultRole)
  field(:location)
  field(:qaEnabled)
  field(:state)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProjectStatus do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProjectStatus.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1ProjectStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
