# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCallSignals do
  @moduledoc """
  Next ID: 39

  ## Attributes

  *   `referentialResolution` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersDialogReferentialResolution.t`, *default:* `nil`) - Describes how this intent was resolved via external data (either elsewhere in the query, or in a previous query).
  *   `isDisambiguationIntent` (*type:* `boolean()`, *default:* `nil`) - Denotes whether this is a sub-intent of an ambiguous SystemUncertain intent go/intent-disambiguation.
  *   `conceptEntityMid` (*type:* `String.t`, *default:* `nil`) - An entity that represents the concept of an entity-attribute intent by being composed of an intent equivalent MID and the argument MID.
  *   `intentComposingMid` (*type:* `String.t`, *default:* `nil`) - An intent_relevant_mid that was used to compose the entity for a concept interpretation, along with argument_composing_mid (the question's argument MID).
  *   `attributeSignals` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAttributeSignal.t)`, *default:* `nil`) - The attributes from which this intent was generated during execution of AttributeSignalsProvider. |attribute_signals| is only populated for single entity funcalls.
  *   `intentAnnotationSources` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `conceptSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryConceptSignals.t`, *default:* `nil`) - Information about the corresponding Concept attached to the FunctionCall. go/concept-roofshot.
  *   `localSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocalSignals.t`, *default:* `nil`) - Information about Local results to be used in the Packer for Local Categorical derived intent deduplication and conformance.
  *   `intentRelevantMid` (*type:* `list(String.t)`, *default:* `nil`) - KG mids of entities that represent this intent. These entities are seen as equivalent to the Intent definition, and are specified in the Intent Catalog as relevant_mid.
  *   `isDisambiguationCardIntent` (*type:* `boolean()`, *default:* `nil`) - Denotes whether this is an intent being fulfilled from user tapping a disambiguation card. More info in go/cardea-deck.
  *   `isRefinedMeaning` (*type:* `boolean()`, *default:* `nil`) - Whether the FunctionCall is created as a refined_meaning in resolution. Downstream code will look at this field to see if it needs to create a new refined QueryInterpretation.
  *   `highConfidence` (*type:* `boolean()`, *default:* `nil`) - Used to indicate that an interpretation is high confidence and triggers different voting behavior. This bit should only be set for verticals. DEPRECATED. Use confidence_level instead.
  *   `confidenceLevel` (*type:* `String.t`, *default:* `nil`) - 
  *   `isCloseInterpretation` (*type:* `boolean()`, *default:* `nil`) - Whether the interpretation was generated using similar queries in POSTREF. In case POSTREF_AQUA generated the same entity-attribute interpretation, this is still set to true.
  *   `osrpJourneyTag` (*type:* `String.t`, *default:* `nil`) - A tag to annotate user's journey (e.g., JourneyFollowCampusUpdates). This will be used for Journey OSRP demo (go/josrp-sprint). !!NOTE!! This field is reserved for Journey OSRP demo, and will be deprecated shortly after its completion. DO NOT USE.
  *   `shoppingIds` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t`, *default:* `nil`) - Equivalent shopping ids for the function call.
  *   `parsingSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryParsingSignals.t`, *default:* `nil`) - Parsing signals for ranking/filtering.
  *   `argumentComposingMid` (*type:* `String.t`, *default:* `nil`) - The argument mid that was used to compose the entity for a concept interpretation, along with the intent_composing_mid (one of the intent's equivalent MIDs).
  *   `intentProvenance` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance.t)`, *default:* `nil`) - Information about where the value of this intent came from. For example, it could have been explicitly provided in the query, pulled in from the previous dialog state, or pulled from previous queries.
  *   `selectedByPrefulfillmentRanking` (*type:* `boolean()`, *default:* `nil`) - Identifies whether the Prefulfillment Ranker selected this intent for emission. This is needed temporarily while migrating intent emitters from ACE to QUS/PFR. See go/pfr-intent-emitter for more info
  *   `prefulfillmentRankingScore` (*type:* `number()`, *default:* `nil`) - Identifies a score, determined before fulfillment but after grounding. Written by the Prefulfillment Ranker, and used as a signal for ACE Ranking.
  *   `isUiCompositionIntent` (*type:* `boolean()`, *default:* `nil`) - Denotes this is a sub-intent used for composing an Assistant UI response. The assistant dialog should output ui_composition_shelf in the SystemResponse if it can fulfill the intent. More info in go/davinci-design and go/davinci-di-fulfillment
  *   `refxSummaryNodeId` (*type:* `String.t`, *default:* `nil`) - The id of the summary node if this funcall represents an mdvc interpretation
  *   `parsedDueToExperiment` (*type:* `list(String.t)`, *default:* `nil`) - Experiments that caused this FunctionCall to parse, without which this would not have parsed.
  *   `groundingSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals.t`, *default:* `nil`) - Grounding signals for ranking/filtering, as well as whether to use Grounding Box and PGRP in AnswersRewriter. See comment on GroundingSignals for details.
  *   `role` (*type:* `String.t`, *default:* `nil`) - 
  *   `resultSupport` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.t)`, *default:* `nil`) - The list of result supports for this FunctionCall.
  *   `isNeuralCategoricalInterpretation` (*type:* `boolean()`, *default:* `nil`) - Whether the interpretation was generated from the neural categorical parser.
  *   `usesPrefulfillmentRanker` (*type:* `boolean()`, *default:* `nil`) - Identifies whether this intent intends to be scored and pruned by the prefulfillment ranker after intent-generation.
  *   `signalsFallbackIntents` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySignalComputationFallbackIntent.t)`, *default:* `nil`) - Additional intents to be used for intent scoring. This field must only be populated when we cannot find a single unified intent. For example, when we compute signals for a LocalEntities function call, this means we could not find a unified intent to capture all the local results. In this case, we add a fallback intent for each local result (e.g. GeoSchool, GeoRestaurant, and GeoBank if those are the results we show).
  *   `freefolksTrigger` (*type:* `String.t`, *default:* `nil`) - 
  *   `responseMeaningSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals.t`, *default:* `nil`) - Signal data from SRM generation. Solely used internally. See: go/srm-design.
  *   `dedupedFuncalls` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCall.t)`, *default:* `nil`) - FunctionCall-s that this funcall was deduped against.
  *   `expressionStatus` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus.t`, *default:* `nil`) - Status indicating whether the user has completely expressed their intended semantics. (See go/streaming-nlu-fulfilment-protocol-v1 for more info. )
  *   `prefulfillmentSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantPrefulfillmentRankerPrefulfillmentSignals.t`, *default:* `nil`) - All the input signals to the Prefulfillment Ranker.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :referentialResolution =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersDialogReferentialResolution.t()
            | nil,
          :isDisambiguationIntent => boolean() | nil,
          :conceptEntityMid => String.t() | nil,
          :intentComposingMid => String.t() | nil,
          :attributeSignals =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAttributeSignal.t()
            )
            | nil,
          :intentAnnotationSources => list(String.t()) | nil,
          :conceptSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryConceptSignals.t()
            | nil,
          :localSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocalSignals.t() | nil,
          :intentRelevantMid => list(String.t()) | nil,
          :isDisambiguationCardIntent => boolean() | nil,
          :isRefinedMeaning => boolean() | nil,
          :highConfidence => boolean() | nil,
          :confidenceLevel => String.t() | nil,
          :isCloseInterpretation => boolean() | nil,
          :osrpJourneyTag => String.t() | nil,
          :shoppingIds =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t() | nil,
          :parsingSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryParsingSignals.t()
            | nil,
          :argumentComposingMid => String.t() | nil,
          :intentProvenance =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance.t()
            )
            | nil,
          :selectedByPrefulfillmentRanking => boolean() | nil,
          :prefulfillmentRankingScore => number() | nil,
          :isUiCompositionIntent => boolean() | nil,
          :refxSummaryNodeId => String.t() | nil,
          :parsedDueToExperiment => list(String.t()) | nil,
          :groundingSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals.t()
            | nil,
          :role => String.t() | nil,
          :resultSupport =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.t()
            )
            | nil,
          :isNeuralCategoricalInterpretation => boolean() | nil,
          :usesPrefulfillmentRanker => boolean() | nil,
          :signalsFallbackIntents =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySignalComputationFallbackIntent.t()
            )
            | nil,
          :freefolksTrigger => String.t() | nil,
          :responseMeaningSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals.t()
            | nil,
          :dedupedFuncalls =>
            list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCall.t())
            | nil,
          :expressionStatus =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus.t() | nil,
          :prefulfillmentSignals =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantPrefulfillmentRankerPrefulfillmentSignals.t()
            | nil
        }

  field(:referentialResolution,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersDialogReferentialResolution
  )

  field(:isDisambiguationIntent)
  field(:conceptEntityMid)
  field(:intentComposingMid)

  field(:attributeSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAttributeSignal,
    type: :list
  )

  field(:intentAnnotationSources, type: :list)

  field(:conceptSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryConceptSignals
  )

  field(:localSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocalSignals
  )

  field(:intentRelevantMid, type: :list)
  field(:isDisambiguationCardIntent)
  field(:isRefinedMeaning)
  field(:highConfidence)
  field(:confidenceLevel)
  field(:isCloseInterpretation)
  field(:osrpJourneyTag)

  field(:shoppingIds,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds
  )

  field(:parsingSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryParsingSignals
  )

  field(:argumentComposingMid)

  field(:intentProvenance,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance,
    type: :list
  )

  field(:selectedByPrefulfillmentRanking)
  field(:prefulfillmentRankingScore)
  field(:isUiCompositionIntent)
  field(:refxSummaryNodeId)
  field(:parsedDueToExperiment, type: :list)

  field(:groundingSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals
  )

  field(:role)

  field(:resultSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport,
    type: :list
  )

  field(:isNeuralCategoricalInterpretation)
  field(:usesPrefulfillmentRanker)

  field(:signalsFallbackIntents,
    as:
      GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySignalComputationFallbackIntent,
    type: :list
  )

  field(:freefolksTrigger)

  field(:responseMeaningSignals,
    as:
      GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals
  )

  field(:dedupedFuncalls,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCall,
    type: :list
  )

  field(:expressionStatus,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus
  )

  field(:prefulfillmentSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantPrefulfillmentRankerPrefulfillmentSignals
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCallSignals do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCallSignals.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryFunctionCallSignals do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
