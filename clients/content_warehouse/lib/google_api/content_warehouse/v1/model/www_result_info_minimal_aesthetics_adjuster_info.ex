# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.WWWResultInfoMinimalAestheticsAdjusterInfo do
  @moduledoc """
  Minimal copy of ImageAestheticsAdjusterInfo (http://google3/quality/scoring/proto/image-data.proto;l=966;rcl=618955078) for use by web twiddlers. NextID: 8

  ## Attributes

  *   `boost` (*type:* `number()`, *default:* `nil`) - final boost = *(all boosts)
  *   `deepTagCollageBoost` (*type:* `number()`, *default:* `nil`) - 
  *   `deepTagCollageScore` (*type:* `number()`, *default:* `nil`) - 
  *   `eqBoost` (*type:* `number()`, *default:* `nil`) - 
  *   `eqExpansionOrganicBoost` (*type:* `number()`, *default:* `nil`) - 
  *   `eqExpansionStar` (*type:* `number()`, *default:* `nil`) - 
  *   `tqBoost` (*type:* `number()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boost => number() | nil,
          :deepTagCollageBoost => number() | nil,
          :deepTagCollageScore => number() | nil,
          :eqBoost => number() | nil,
          :eqExpansionOrganicBoost => number() | nil,
          :eqExpansionStar => number() | nil,
          :tqBoost => number() | nil
        }

  field(:boost)
  field(:deepTagCollageBoost)
  field(:deepTagCollageScore)
  field(:eqBoost)
  field(:eqExpansionOrganicBoost)
  field(:eqExpansionStar)
  field(:tqBoost)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.WWWResultInfoMinimalAestheticsAdjusterInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.WWWResultInfoMinimalAestheticsAdjusterInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.WWWResultInfoMinimalAestheticsAdjusterInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
