# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionResult do
  @moduledoc """
  Message that gets returned from the Provider Selection Library (PSL). It encodes the scores, applied policies, and pruning decisions for a given provider candidate.

  ## Attributes

  *   `bucketedFinalScore` (*type:* `String.t`, *default:* `nil`) - Alternative bucketed score for use by downstream ranking providers. A raw numeric score is subject to semantic-drift, while a bucket is not.
  *   `finalScore` (*type:* `number()`, *default:* `nil`) - Final score in the range [0,1] that can be used for ranking providers. Incorporates both policy rules and quality considerations.
  *   `policyApplied` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionPolicy.t)`, *default:* `nil`) - List of business policies applied to the candidate.
  *   `shouldPrune` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the candidate should be pruned.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucketedFinalScore => String.t() | nil,
          :finalScore => number() | nil,
          :policyApplied =>
            list(GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionPolicy.t())
            | nil,
          :shouldPrune => boolean() | nil
        }

  field(:bucketedFinalScore)
  field(:finalScore)

  field(:policyApplied,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionPolicy,
    type: :list
  )

  field(:shouldPrune)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionResult do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionResult.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderSelectionResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
