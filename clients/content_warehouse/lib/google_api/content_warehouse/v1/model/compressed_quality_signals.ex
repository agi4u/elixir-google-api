# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CompressedQualitySignals do
  @moduledoc """
  A message containing per doc signals that are compressed and included in Mustang and TeraGoogle. For TeraGoogle, this message is included in perdocdata which means it can be used in preliminary scoring. CAREFUL: For TeraGoogle, this data resides in very limited serving memory (Flash storage) for a huge number of documents. Next id: 42

  ## Attributes

  *   `authorityPromotion` (*type:* `integer()`, *default:* `nil`) - authority promotion: converted from QualityBoost.authority.boost
  *   `crapsAbsoluteHostSignals` (*type:* `integer()`, *default:* `nil`) - Impressions, unsquashed, host level, not to be used with compressed ratios. Not to be used in Pattern Data.
  *   `nsrOverrideBid` (*type:* `number()`, *default:* `nil`) - NSR override bid, used in Q* for emergency overrides.
  *   `siteAuthority` (*type:* `integer()`, *default:* `nil`) - site_authority: converted from quality_nsr.SiteAuthority, applied in Qstar.
  *   `productReviewPDemoteSite` (*type:* `integer()`, *default:* `nil`) - Product review demotion/promotion confidences. (Times 1000 and floored)
  *   `crapsNewUrlSignals` (*type:* `String.t`, *default:* `nil`) - For craps_[url|pattern]_signals, please avoid accessing these fields directly, even in minor ways like checking has_craps_*. Instead, please use methods from quality/navboost/craps/craps-lossy-compression.h or talk to dice-team.
  *   `productReviewPReviewPage` (*type:* `integer()`, *default:* `nil`) - Fields product_review_p_review_page and product_review_p_uhq_page are for promoting/demoting HQ/LQ review pages in NGS. See go/pr-boosts for details. The possibility of a page being a review page.
  *   `productReviewPDemotePage` (*type:* `integer()`, *default:* `nil`) - 
  *   `pqData` (*type:* `integer()`, *default:* `nil`) - Encoded page-level PQ signals.
  *   `unauthoritativeScore` (*type:* `integer()`, *default:* `nil`) - Unauthoritative score. Used as one of the web page quality qstar signals.
  *   `scamness` (*type:* `integer()`, *default:* `nil`) - Scam model score. Used as one of the web page quality qstar signals. Value range from 0 to 1023.
  *   `pairwiseqScoringData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PairwiseQScoringData.t`, *default:* `nil`) - PairwiseQ data for QTJ. This field is *not* propagated to shards, but is populated at serving time by go/web-signal-joins. See b/175762140
  *   `crapsUnscaledIpPriorBadFraction` (*type:* `integer()`, *default:* `nil`) - 
  *   `experimentalQstarSignal` (*type:* `number()`, *default:* `nil`) - This field is *not* propagated to shards. It is meant to be populated at serving time using one of the versions present in the `experimental_nsr_team_wsj_data` field above (using the `ExperimentalNsrTeamDataOverridesParams` opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new components. See go/0DayLEs for details.
  *   `vlqNsr` (*type:* `integer()`, *default:* `nil`) - NSR for low-quality videos, converted from quality_nsr.NsrData.vlq_nsr.
  *   `crapsNewHostSignals` (*type:* `String.t`, *default:* `nil`) - 
  *   `lowQuality` (*type:* `integer()`, *default:* `nil`) - S2V low quality score: converted from quality_nsr.NsrData, applied in Qstar. See quality_nsr::util::ConvertNsrDataToLowQuality.
  *   `babyPandaV2Demotion` (*type:* `integer()`, *default:* `nil`) - New BabyPanda demotion, applied on top of Panda. This is meant to replace |baby_panda_demotion|.
  *   `productReviewPPromoteSite` (*type:* `integer()`, *default:* `nil`) - 
  *   `experimentalQstarSiteSignal` (*type:* `number()`, *default:* `nil`) - This field is *not* propagated to shards. It is meant to be populated at serving time using one of the versions present in the `experimental_nsr_team_wsj_data` field above (using the `ExperimentalNsrTeamDataOverridesParams` opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new site components. See go/0DayLEs for details.
  *   `babyPandaDemotion` (*type:* `integer()`, *default:* `nil`) - baby_panda_demotion: converted from QualityBoost.rendered.boost.
  *   `productReviewPUhqPage` (*type:* `integer()`, *default:* `nil`) - The possibility of a page being a high quality review page.
  *   `nsrVersionedData` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NSRVersionedItem.t)`, *default:* `nil`) - Versioned NSR score to be used in continuous evaluation of the upcoming NSR version and assess quality impact on various slices.
  *   `experimentalNsrTeamData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamData.t`, *default:* `nil`) - This field is *not* propagated to shards, but it's populated at serving time by go/web-signal-joins (see b/207344056). See go/0DayLEs for details. This is only meant to be used during LEs, it should *not* be used for launches.
  *   `navDemotion` (*type:* `integer()`, *default:* `nil`) - nav_demotion: converted from QualityBoost.nav_demoted.boost.
  *   `pairwiseqVersionedData` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.PairwiseQVersionedItem.t)`, *default:* `nil`) - Versioned PairwiseQ score to be used in continuous evaluation of the upcoming PairwiseQ versions and assess quality impact on various slices.
  *   `pqDataProto` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityNsrPQData.t`, *default:* `nil`) - Stripped page-level signals, not present in the encoded field 'pq_data'.
  *   `nsrConfidence` (*type:* `integer()`, *default:* `nil`) - NSR confidence score: converted from quality_nsr.NsrData.
  *   `exactMatchDomainDemotion` (*type:* `integer()`, *default:* `nil`) - Page quality signals converted from fields in proto QualityBoost in quality/q2/proto/quality-boost.proto. To save indexing space, we convert the float values in [0, 1] to integers in range [0, 1023] (use 10 bits). exact_match_domain_demotion: converted from QualityBoost.emd.boost.
  *   `serpDemotion` (*type:* `integer()`, *default:* `nil`) - serp demotion: applied in Qstar.
  *   `experimentalNsrTeamWsjData` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamWSJData.t)`, *default:* `nil`) - This field is *not* propagated to shards, but it's populated at serving time by go/web-signal-joins (see b/207344056). See go/0DayLEs for details. This is only meant to be used during LEs, it should *not* be used for launches.
  *   `productReviewPPromotePage` (*type:* `integer()`, *default:* `nil`) - 
  *   `crapsNewPatternSignals` (*type:* `String.t`, *default:* `nil`) - 
  *   `experimentalQstarDeltaSignal` (*type:* `number()`, *default:* `nil`) - This field is *not* propagated to shards. It is meant to be populated at serving time using one of the versions present in the `experimental_nsr_team_wsj_data` field above (using the `ExperimentalNsrTeamDataOverridesParams` opti to populate it; see http://source/search?q=ExperimentalNsrTeamDataOverridesParams%20file:ascorer.proto). The purpose of this field is to be read by an experimental Q* component, in order to quickly run LEs with new delta components. See go/0DayLEs for details.
  *   `pandaDemotion` (*type:* `integer()`, *default:* `nil`) - This is the encoding of Panda fields in the proto SiteQualityFeatures in quality/q2/proto/site_quality_features.proto. The encoding/decoding is performed using functions from quality_coati::coati_util.
  *   `anchorMismatchDemotion` (*type:* `integer()`, *default:* `nil`) - anchor_mismatch_demotion: converted from QualityBoost.mismatched.boost.
  *   `topicEmbeddingsVersionedData` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityAuthorityTopicEmbeddingsVersionedItem.t)`, *default:* `nil`) - Versioned TopicEmbeddings data to be populated later into superroot / used directly in scorers.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authorityPromotion => integer() | nil,
          :crapsAbsoluteHostSignals => integer() | nil,
          :nsrOverrideBid => number() | nil,
          :siteAuthority => integer() | nil,
          :productReviewPDemoteSite => integer() | nil,
          :crapsNewUrlSignals => String.t() | nil,
          :productReviewPReviewPage => integer() | nil,
          :productReviewPDemotePage => integer() | nil,
          :pqData => integer() | nil,
          :unauthoritativeScore => integer() | nil,
          :scamness => integer() | nil,
          :pairwiseqScoringData =>
            GoogleApi.ContentWarehouse.V1.Model.PairwiseQScoringData.t() | nil,
          :crapsUnscaledIpPriorBadFraction => integer() | nil,
          :experimentalQstarSignal => number() | nil,
          :vlqNsr => integer() | nil,
          :crapsNewHostSignals => String.t() | nil,
          :lowQuality => integer() | nil,
          :babyPandaV2Demotion => integer() | nil,
          :productReviewPPromoteSite => integer() | nil,
          :experimentalQstarSiteSignal => number() | nil,
          :babyPandaDemotion => integer() | nil,
          :productReviewPUhqPage => integer() | nil,
          :nsrVersionedData =>
            list(GoogleApi.ContentWarehouse.V1.Model.NSRVersionedItem.t()) | nil,
          :experimentalNsrTeamData =>
            GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamData.t() | nil,
          :navDemotion => integer() | nil,
          :pairwiseqVersionedData =>
            list(GoogleApi.ContentWarehouse.V1.Model.PairwiseQVersionedItem.t()) | nil,
          :pqDataProto => GoogleApi.ContentWarehouse.V1.Model.QualityNsrPQData.t() | nil,
          :nsrConfidence => integer() | nil,
          :exactMatchDomainDemotion => integer() | nil,
          :serpDemotion => integer() | nil,
          :experimentalNsrTeamWsjData =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamWSJData.t())
            | nil,
          :productReviewPPromotePage => integer() | nil,
          :crapsNewPatternSignals => String.t() | nil,
          :experimentalQstarDeltaSignal => number() | nil,
          :pandaDemotion => integer() | nil,
          :anchorMismatchDemotion => integer() | nil,
          :topicEmbeddingsVersionedData =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.QualityAuthorityTopicEmbeddingsVersionedItem.t()
            )
            | nil
        }

  field(:authorityPromotion)
  field(:crapsAbsoluteHostSignals)
  field(:nsrOverrideBid)
  field(:siteAuthority)
  field(:productReviewPDemoteSite)
  field(:crapsNewUrlSignals)
  field(:productReviewPReviewPage)
  field(:productReviewPDemotePage)
  field(:pqData)
  field(:unauthoritativeScore)
  field(:scamness)
  field(:pairwiseqScoringData, as: GoogleApi.ContentWarehouse.V1.Model.PairwiseQScoringData)
  field(:crapsUnscaledIpPriorBadFraction)
  field(:experimentalQstarSignal)
  field(:vlqNsr)
  field(:crapsNewHostSignals)
  field(:lowQuality)
  field(:babyPandaV2Demotion)
  field(:productReviewPPromoteSite)
  field(:experimentalQstarSiteSignal)
  field(:babyPandaDemotion)
  field(:productReviewPUhqPage)
  field(:nsrVersionedData, as: GoogleApi.ContentWarehouse.V1.Model.NSRVersionedItem, type: :list)

  field(:experimentalNsrTeamData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamData
  )

  field(:navDemotion)

  field(:pairwiseqVersionedData,
    as: GoogleApi.ContentWarehouse.V1.Model.PairwiseQVersionedItem,
    type: :list
  )

  field(:pqDataProto, as: GoogleApi.ContentWarehouse.V1.Model.QualityNsrPQData)
  field(:nsrConfidence)
  field(:exactMatchDomainDemotion)
  field(:serpDemotion)

  field(:experimentalNsrTeamWsjData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityNsrExperimentalNsrTeamWSJData,
    type: :list
  )

  field(:productReviewPPromotePage)
  field(:crapsNewPatternSignals)
  field(:experimentalQstarDeltaSignal)
  field(:pandaDemotion)
  field(:anchorMismatchDemotion)

  field(:topicEmbeddingsVersionedData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityAuthorityTopicEmbeddingsVersionedItem,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CompressedQualitySignals do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CompressedQualitySignals.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CompressedQualitySignals do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
