# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedFeatures do
  @moduledoc """
  These are the set of features that are supported by the device. It's a part of the SoftwareCapabilities of the device. Next ID: 68

  ## Attributes

  *   `isPairedPhoneNeededForComms` (*type:* `boolean()`, *default:* `nil`) - Whether a Bluetooth-paired phone is a core component of communications flows on the client.
  *   `actionV2SupportedFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiActionV2SupportedFeatures.t`, *default:* `nil`) - 
  *   `mediaControlSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiMediaControlSupport.t`, *default:* `nil`) - Information about how client handles media controls (play, pause, skip ...)
  *   `privacyAwareLockscreenSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the privacy-aware lockscreen protocol (go/assistant-lockscreen-spec).
  *   `immersiveCanvasConfirmationMessageSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports confirmation messages in Immersive Canvas actions. Deprecated: use the filed in immersive_canvas_support.
  *   `whatsNextSupported` (*type:* `boolean()`, *default:* `nil`) - Whether or not the client supports WhatsNext in the protocol.
  *   `masqueradeModeSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the device supports masquerade mode (go/masquerade).
  *   `crossDeviceBroadcastSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports cross-device broadcast (i.e. on Torus).
  *   `duoGroupCallingSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports Duo group calling.
  *   `sleepSensingSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client can monitor sleep. This allows us to show sleep CUJ related information: go/TwilightDesign Use for development only, see the same field in DeviceCapabilities.SoftwareCapabilities.SelinaCapabilities.
  *   `duoClientApiFeatures` (*type:* `String.t`, *default:* `nil`) - The features set which duo client on the device supports. This should be serialized from proto {@code duo_client_api.DuoClientApiFeatures}.
  *   `fitnessFeatureSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiFitnessFeatureSupport.t`, *default:* `nil`) - Information about what support this device has for fitness.
  *   `funtimeSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the surface client op performer supports Funtime alarms and timers. go/funtime-engdesign
  *   `shLockScreenSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports SmartHome lock screen logic (i.e. on Tangor).
  *   `assistantExploreSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the assistant explore section. This field will be active only when the Explore section is available to the user. This means that the user is (a) signed-in, (b) a IOPA / AGSA user, and (c) in a locale where explore is available.
  *   `assistantForKidsSupported` (*type:* `boolean()`, *default:* `nil`) - Whether Assistant for Kids (a.k.a. Designed for Family) features are supported.
  *   `transactionFeaturesSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiTransactionFeaturesSupport.t`, *default:* `nil`) - Transactions features, supported by the client. Transactions feature may includes how Transactions team want to populate additional information from the device to the server.
  *   `noInputResponseSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client can render no input response or just ignore it. No input response is returned when client has a no speech input interaction, eg. user tapped mic but didn't say anything.
  *   `hasPhysicalRadio` (*type:* `boolean()`, *default:* `nil`) - Whether the client has a physical radio installed.
  *   `opaOnSearchSupported` (*type:* `boolean()`, *default:* `nil`) - When the entry source is search, whether the client supports rendering a similar response as OPA one does. Entry source is defined at http://cs/symbol:assistant.api.params.DeviceProperties.EntrySource
  *   `sunriseFeaturesSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSunriseFeaturesSupport.t`, *default:* `nil`) - Whether the client supports the sunrise screen brightening feature before the alarm fires. This is used to indicate whether sunrise alarms can be set on the device. http://cs/symbol:assistant.api.core_types.governed.RingtoneTaskMetadata.GentleWakeInfo
  *   `mediaSessionDetection` (*type:* `String.t`, *default:* `nil`) - The ability of the client to detect media sessions on the device.
  *   `gdiSupported` (*type:* `boolean()`, *default:* `nil`) - Whether account linking via Google Deep Integrations (GDI) is supported. go/opa-gdi-design
  *   `thirdPartyGuiSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the device supports the 3p GUI framework, which allows third parties to enter the conversation with the user, showing their logo next to their chat bubbles, etc. go/3p-phone
  *   `gearheadNotificationSourceSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the Gearhead message notification source, in which case notification-related operations can access it.
  *   `fluidActionsSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiFluidActionsSupport.t`, *default:* `nil`) - Fluid Actions features supported by the client. If this field is not set in the incoming request, it could mean that the client does not support Fluid Actions. Alternatively, it could mean that the client supports Fluid Actions, but syncs state with server using the old protocol, namely ConversationStateParams. When b/140733618 is resolved, Surface Adaptation Layer will add this field for old clients that support Fluid Actions framework.
  *   `meetSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports joining a Google Meet meeting.
  *   `transactionsVersion` (*type:* `String.t`, *default:* `nil`) - The version of transactions which the client supports.
  *   `readNotificationSummarizationSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports message summarization.
  *   `confirmationBeforeReadingMultipleMessagesSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports confirmation flow before announcement of multiple messages. If set to true the user will be prompted once and confirmation will be taken before all the messages are announced.
  *   `conversationalCareSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client can render conversational care responses. go/conversational-care
  *   `warmWelcomeTutorialSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the programmatic warm welcome tutorial. Design doc: go/opal-pww-design.
  *   `appControlSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppControlSupport.t`, *default:* `nil`) - The client information for app control support. More details in: go/acaia.
  *   `csatVisualOverlaySupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports csat visual overlay. (go/sd-od-csat)
  *   `usesSeparateFullViewer` (*type:* `boolean()`, *default:* `nil`) - If set, it indicates that the client can open a separate HTML browser/webviewer (full viewer) to display certain visual results. These visual results usually require more memory to render (e.g. high resolution photos). Compared to the regular viewer that display all other Assistant result, the full viewer does not have memory limit. The field is copied from the device model. See http://google3/assistant/devices_platform/proto/device_model_capabilities.proto?l=225&rcl=312576471 Also see go/webassistant-full-card-viewer.
  *   `suggestionsSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSuggestionsSupport.t`, *default:* `nil`) - Suggestion chips features, supported by the client.
  *   `crossDeviceBroadcastVersion` (*type:* `String.t`, *default:* `nil`) - The version of cross device broadcast (ie; broadcast on torus) which the client supports.
  *   `readMessagesTtsTaperingSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports tts tapering for the read messages flow. If set to true the tapered tts variant would be used during the read messages flow.
  *   `remoteCloudCastingEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether the client has remote casting enabled. For ex: we want to disable this for clients like Auto.
  *   `clientOpResultBatchingSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client can batch client op results before sending them to the server.
  *   `launchKeyboardSupported` (*type:* `String.t`, *default:* `nil`) - Which way of launching the keyboard the client supports.
  *   `serverGeneratedFeedbackChipsEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether the Assistant Server should generate feedback suggestion chips.
  *   `lottieAnimationSupport` (*type:* `String.t`, *default:* `nil`) - Whether the client supports the Lottie animation library for the broadcast feature.
  *   `signInMethod` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSignInMethod.t`, *default:* `nil`) - Which kind of sign in the client supports.
  *   `soliGestureDetectionSupported` (*type:* `boolean()`, *default:* `nil`) - Whether or not the client supports gesture detection via soli chips. The reason to prepend the name with soli is to distinguish it from computer vision based methods, e.g. Newman devices.
  *   `webBrowserSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the supports opening a URL in a web browser. For example, we want to disable this for clients like Chirp.
  *   `zoomSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports joining a Zoom meeting.
  *   `smartspaceCrossDeviceTimerSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports smart space cross-device timers. (go/ss-x-device-timer)
  *   `lensSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client has Google Lens (Assistant Eyes).
  *   `tapToReadOptimizationSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports faster optimization for tap_to_read feature.
  *   `inDialogAccountLinkingSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports account linking in-dialog (askForSignIn). This is used before this feature is moved to conversation protocol. To support this, the client needs to: - Integrate with Google Deep Integrations. - Have logic to send the result of account linking back to AS.
  *   `mapsDialogsSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports Assistant dialogs within Maps. This field will be set only when the Maps on the surface supports Assistant dialogs embedded within Maps. go/gsa-gmm.
  *   `parentalControlsSupported` (*type:* `boolean()`, *default:* `nil`) - Whether or not the client supports enabling parental controls. When a device to supports parental controls, it has the software necessary to store the relevant information required for parental controls to work. This information includes a boolean "enabled bit" as well as the obfuscated gaia ID of the kid account selected for use with parental controls. Devices supportings kids mode send this information to S3 via S3ClientInfo in every request. See go/aff-kidsproduct for details.
  *   `bypassDiDcCheckForComms` (*type:* `boolean()`, *default:* `nil`) - Whether communications flows for the client can bypass the DI/DC check. The client will enforce some other equivalent permission as necessary concerning access to device contacts and apps.
  *   `aaeNotificationSourceSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the alternative message notification sources on AAE, in which case notification-related operations can access it.
  *   `liveCardsSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the surface supports LiveCards. In cases where the user intent flow cannot be completed within the Assistant, LiveCards are used to take the user to an external app or website. These cards will be pushed to the Google Home app via the PushMessage ClientOp.
  *   `viewReminderHubPageNotSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports viewing of reminder hub page or not. Default is supported. Set to true to disable returning reminder hub page url in reminder responses.
  *   `persistentDisplaySupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports persistent display. The new feature allows Assistant devices with screen to display a continuously updating permanent display, such as ambient weather, without the need for a user to ask the Assistant. Design doc: go/assistant-persistent-display.
  *   `acpSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiAssistantContinuedPresenceSupport.t`, *default:* `nil`) - In what way is assistant continued presence supported. (go/opa-acp-prd)
  *   `bypassMsgNotificationDismissal` (*type:* `boolean()`, *default:* `nil`) - Whether or not Assistant should enforce the dismissal of communication notifications associated with messages.
  *   `alarmTimerManagerApiSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports AlarmTimerManager API (go/alarm-timer-manager-api).
  *   `client1mProvidersSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports 1m providers (go/1m-partner-expansion).
  *   `justInTimeSupported` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports confirmation flow when a permission is missing. If set to true, the user will be prompted and on confirmation the original flow will continue.
  *   `immersiveCanvasSupport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiImmersiveCanvasSupport.t`, *default:* `nil`) - 
  *   `isPairedPhoneContactUploadNeededForComms` (*type:* `boolean()`, *default:* `nil`) - Whether paired-phone contact upload is needed for communications queries to work (e.g. on AAE).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isPairedPhoneNeededForComms => boolean() | nil,
          :actionV2SupportedFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiActionV2SupportedFeatures.t() | nil,
          :mediaControlSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiMediaControlSupport.t() | nil,
          :privacyAwareLockscreenSupported => boolean() | nil,
          :immersiveCanvasConfirmationMessageSupported => boolean() | nil,
          :whatsNextSupported => boolean() | nil,
          :masqueradeModeSupported => boolean() | nil,
          :crossDeviceBroadcastSupported => boolean() | nil,
          :duoGroupCallingSupported => boolean() | nil,
          :sleepSensingSupported => boolean() | nil,
          :duoClientApiFeatures => String.t() | nil,
          :fitnessFeatureSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiFitnessFeatureSupport.t() | nil,
          :funtimeSupported => boolean() | nil,
          :shLockScreenSupported => boolean() | nil,
          :assistantExploreSupported => boolean() | nil,
          :assistantForKidsSupported => boolean() | nil,
          :transactionFeaturesSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiTransactionFeaturesSupport.t() | nil,
          :noInputResponseSupported => boolean() | nil,
          :hasPhysicalRadio => boolean() | nil,
          :opaOnSearchSupported => boolean() | nil,
          :sunriseFeaturesSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSunriseFeaturesSupport.t() | nil,
          :mediaSessionDetection => String.t() | nil,
          :gdiSupported => boolean() | nil,
          :thirdPartyGuiSupported => boolean() | nil,
          :gearheadNotificationSourceSupported => boolean() | nil,
          :fluidActionsSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiFluidActionsSupport.t() | nil,
          :meetSupported => boolean() | nil,
          :transactionsVersion => String.t() | nil,
          :readNotificationSummarizationSupported => boolean() | nil,
          :confirmationBeforeReadingMultipleMessagesSupported => boolean() | nil,
          :conversationalCareSupported => boolean() | nil,
          :warmWelcomeTutorialSupported => boolean() | nil,
          :appControlSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppControlSupport.t() | nil,
          :csatVisualOverlaySupported => boolean() | nil,
          :usesSeparateFullViewer => boolean() | nil,
          :suggestionsSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSuggestionsSupport.t() | nil,
          :crossDeviceBroadcastVersion => String.t() | nil,
          :readMessagesTtsTaperingSupported => boolean() | nil,
          :remoteCloudCastingEnabled => boolean() | nil,
          :clientOpResultBatchingSupported => boolean() | nil,
          :launchKeyboardSupported => String.t() | nil,
          :serverGeneratedFeedbackChipsEnabled => boolean() | nil,
          :lottieAnimationSupport => String.t() | nil,
          :signInMethod => GoogleApi.ContentWarehouse.V1.Model.AssistantApiSignInMethod.t() | nil,
          :soliGestureDetectionSupported => boolean() | nil,
          :webBrowserSupported => boolean() | nil,
          :zoomSupported => boolean() | nil,
          :smartspaceCrossDeviceTimerSupported => boolean() | nil,
          :lensSupported => boolean() | nil,
          :tapToReadOptimizationSupported => boolean() | nil,
          :inDialogAccountLinkingSupported => boolean() | nil,
          :mapsDialogsSupported => boolean() | nil,
          :parentalControlsSupported => boolean() | nil,
          :bypassDiDcCheckForComms => boolean() | nil,
          :aaeNotificationSourceSupported => boolean() | nil,
          :liveCardsSupported => boolean() | nil,
          :viewReminderHubPageNotSupported => boolean() | nil,
          :persistentDisplaySupported => boolean() | nil,
          :acpSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiAssistantContinuedPresenceSupport.t()
            | nil,
          :bypassMsgNotificationDismissal => boolean() | nil,
          :alarmTimerManagerApiSupported => boolean() | nil,
          :client1mProvidersSupported => boolean() | nil,
          :justInTimeSupported => boolean() | nil,
          :immersiveCanvasSupport =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiImmersiveCanvasSupport.t() | nil,
          :isPairedPhoneContactUploadNeededForComms => boolean() | nil
        }

  field(:isPairedPhoneNeededForComms)

  field(:actionV2SupportedFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiActionV2SupportedFeatures
  )

  field(:mediaControlSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiMediaControlSupport
  )

  field(:privacyAwareLockscreenSupported)
  field(:immersiveCanvasConfirmationMessageSupported)
  field(:whatsNextSupported)
  field(:masqueradeModeSupported)
  field(:crossDeviceBroadcastSupported)
  field(:duoGroupCallingSupported)
  field(:sleepSensingSupported)
  field(:duoClientApiFeatures)

  field(:fitnessFeatureSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiFitnessFeatureSupport
  )

  field(:funtimeSupported)
  field(:shLockScreenSupported)
  field(:assistantExploreSupported)
  field(:assistantForKidsSupported)

  field(:transactionFeaturesSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTransactionFeaturesSupport
  )

  field(:noInputResponseSupported)
  field(:hasPhysicalRadio)
  field(:opaOnSearchSupported)

  field(:sunriseFeaturesSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSunriseFeaturesSupport
  )

  field(:mediaSessionDetection)
  field(:gdiSupported)
  field(:thirdPartyGuiSupported)
  field(:gearheadNotificationSourceSupported)

  field(:fluidActionsSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiFluidActionsSupport
  )

  field(:meetSupported)
  field(:transactionsVersion)
  field(:readNotificationSummarizationSupported)
  field(:confirmationBeforeReadingMultipleMessagesSupported)
  field(:conversationalCareSupported)
  field(:warmWelcomeTutorialSupported)
  field(:appControlSupport, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppControlSupport)
  field(:csatVisualOverlaySupported)
  field(:usesSeparateFullViewer)

  field(:suggestionsSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSuggestionsSupport
  )

  field(:crossDeviceBroadcastVersion)
  field(:readMessagesTtsTaperingSupported)
  field(:remoteCloudCastingEnabled)
  field(:clientOpResultBatchingSupported)
  field(:launchKeyboardSupported)
  field(:serverGeneratedFeedbackChipsEnabled)
  field(:lottieAnimationSupport)
  field(:signInMethod, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSignInMethod)
  field(:soliGestureDetectionSupported)
  field(:webBrowserSupported)
  field(:zoomSupported)
  field(:smartspaceCrossDeviceTimerSupported)
  field(:lensSupported)
  field(:tapToReadOptimizationSupported)
  field(:inDialogAccountLinkingSupported)
  field(:mapsDialogsSupported)
  field(:parentalControlsSupported)
  field(:bypassDiDcCheckForComms)
  field(:aaeNotificationSourceSupported)
  field(:liveCardsSupported)
  field(:viewReminderHubPageNotSupported)
  field(:persistentDisplaySupported)

  field(:acpSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAssistantContinuedPresenceSupport
  )

  field(:bypassMsgNotificationDismissal)
  field(:alarmTimerManagerApiSupported)
  field(:client1mProvidersSupported)
  field(:justInTimeSupported)

  field(:immersiveCanvasSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiImmersiveCanvasSupport
  )

  field(:isPairedPhoneContactUploadNeededForComms)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedFeatures.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
