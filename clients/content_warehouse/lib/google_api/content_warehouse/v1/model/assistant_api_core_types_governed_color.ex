# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor do
  @moduledoc """
  LINT.IfChange Represents a color in the RGBA color space. This message mirrors google.type.Color. IMPORTANT: The definition of Color proto is being moved to //assistant/api/core_types/color_type.proto. All existing references will be updated to point to the new location. If you are adding a reference, use the new one instead.

  ## Attributes

  *   `alpha` (*type:* `number()`, *default:* `nil`) - The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: pixel color = alpha * (this color) + (1.0 - alpha) * (background color) This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. If omitted, this color object is to be rendered as a solid color (as if the alpha value had been explicitly given with a value of 1.0).
  *   `blue` (*type:* `number()`, *default:* `nil`) - The amount of blue in the color as a value in the interval [0, 1].
  *   `green` (*type:* `number()`, *default:* `nil`) - The amount of green in the color as a value in the interval [0, 1].
  *   `red` (*type:* `number()`, *default:* `nil`) - The amount of red in the color as a value in the interval [0, 1].
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alpha => number() | nil,
          :blue => number() | nil,
          :green => number() | nil,
          :red => number() | nil
        }

  field(:alpha)
  field(:blue)
  field(:green)
  field(:red)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesGovernedColor do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
