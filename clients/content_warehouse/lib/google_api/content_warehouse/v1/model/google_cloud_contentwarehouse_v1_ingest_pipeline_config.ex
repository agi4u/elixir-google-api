# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig do
  @moduledoc """
  The ingestion pipeline config.

  ## Attributes

  *   `cloudFunction` (*type:* `String.t`, *default:* `nil`) - The Cloud Function resource name. The Cloud Function needs to live inside consumer project and is accessible to Document AI Warehouse P4SA. Only Cloud Functions V2 is supported. Cloud function execution should complete within 5 minutes or this file ingestion may fail due to timeout. Format: `https://{region}-{project_id}.cloudfunctions.net/{cloud_function}` The following keys are available the request json payload. * display_name * properties * plain_text * reference_id * document_schema_name * raw_document_path * raw_document_file_type The following keys from the cloud function json response payload will be ingested to the Document AI Warehouse as part of Document proto content and/or related information. The original values will be overridden if any key is present in the response. * display_name * properties * plain_text * document_acl_policy * folder
  *   `documentAclPolicy` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleIamV1Policy.t`, *default:* `nil`) - The document level acl policy config. This refers to an Identity and Access (IAM) policy, which specifies access controls for all documents ingested by the pipeline. The role and members under the policy needs to be specified. The following roles are supported for document level acl control: * roles/contentwarehouse.documentAdmin * roles/contentwarehouse.documentEditor * roles/contentwarehouse.documentViewer The following members are supported for document level acl control: * user:user-email@example.com * group:group-email@example.com Note that for documents searched with LLM, only single level user or group acl check is supported.
  *   `enableDocumentTextExtraction` (*type:* `boolean()`, *default:* `nil`) - The document text extraction enabled flag. If the flag is set to true, DWH will perform text extraction on the raw document.
  *   `folder` (*type:* `String.t`, *default:* `nil`) - Optional. The name of the folder to which all ingested documents will be linked during ingestion process. Format is `projects/{project}/locations/{location}/documents/{folder_id}`
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudFunction => String.t() | nil,
          :documentAclPolicy => GoogleApi.ContentWarehouse.V1.Model.GoogleIamV1Policy.t() | nil,
          :enableDocumentTextExtraction => boolean() | nil,
          :folder => String.t() | nil
        }

  field(:cloudFunction)
  field(:documentAclPolicy, as: GoogleApi.ContentWarehouse.V1.Model.GoogleIamV1Policy)
  field(:enableDocumentTextExtraction)
  field(:folder)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleCloudContentwarehouseV1IngestPipelineConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
