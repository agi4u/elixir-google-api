# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderId do
  @moduledoc """
  Identifier used to represent a single application (a.k.a. provider). This model represents the surface-agnostic counterpart for assistant.api.core_types.Provider. E.g. it should avoid directly using package names for Android, bundle identifiers for iOS, etc. We require the transformation between assistant.context.ProviderId and assistant.api.core_types.Provider to either be lossless, or "lossy yet retrievable" (e.g. if package name is not available in ProviderId, it can still be retrieved using the ProviderMappingsModule). NOTE: 1. As of May 2021, verticals are highly fragmented in terms of how they represent/identify a provider, and so we may need to accommodate some vertical-specific representations. However, these should be generalized as much as possible so that they can be used by other verticals if needed. 2. If we need to differentiate between whether a provider is a media provider, app actions provider, timer provider, etc. we should capture this information in the context proto that contains a ProviderId field, rather than in the ProviderId message itself. 3. Any common fields across different provider identifier representations (e.g. ecosystem type) should be part of assistant.context.ProviderId directly.

  ## Attributes

  *   `appProviderId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantContextAppProviderId.t`, *default:* `nil`) - TODO(b/241170835) Deprecate this field.
  *   `ecosystemType` (*type:* `String.t`, *default:* `nil`) - Ecosystem type for this provider.
  *   `mediaProviderId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantContextMediaProviderId.t`, *default:* `nil`) - DEPRECATED. Fields in MediaProviderId have been pulled out into separate fields in ProviderId and ProviderMetadata. TODO(b/243953766) Deprecate this field.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - The MID of the provider. A MID is a unique identifier issued by Knowledge Graph for all entities contained in its graph.
  *   `providerCorpusId` (*type:* `String.t`, *default:* `nil`) - ID issued by the Provider Corpus to uniquely identify a provider entity e.g. an Android app, a Cast app or a Cloud provider. In practice, a single partner can have multiple providers entities. For more detail, see go/se-storage-provider-id. This is the preferred/ standardized ID to use for ProviderId that all use-cases should eventually migrate to.
  *   `providerVariant` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderVariant.t`, *default:* `nil`) - Provider variant corresponding to the current provider. It's used together with mid to uniquely identify provider.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appProviderId =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantContextAppProviderId.t() | nil,
          :ecosystemType => String.t() | nil,
          :mediaProviderId =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantContextMediaProviderId.t() | nil,
          :mid => String.t() | nil,
          :providerCorpusId => String.t() | nil,
          :providerVariant =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderVariant.t() | nil
        }

  field(:appProviderId, as: GoogleApi.ContentWarehouse.V1.Model.AssistantContextAppProviderId)
  field(:ecosystemType)
  field(:mediaProviderId, as: GoogleApi.ContentWarehouse.V1.Model.AssistantContextMediaProviderId)
  field(:mid)
  field(:providerCorpusId)
  field(:providerVariant, as: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderVariant)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderId do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderId.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantContextProviderId do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
