# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals do
  @moduledoc """
  A message representing the signals associated with an argument. NEXT ID TO USE: 62 For //depot/google3/logs/proto/knowledge/interpretation/intent_query.proto in the "ThenChange", fields under Argument.signals in the serving proto are stored directly under Argument on the logging side. For example, see http://google3/nlp/semantic_parsing/data_management/logs/web_logs/semantic_logging_converters/semantic_logging_request_argument_converter.cc?l=58&rcl=322925428. LINT.IfChange

  ## Attributes

  *   `multipleHorizontalListSelectionMatches` (*type:* `boolean()`, *default:* `nil`) - Whether there were multiple equally good matches from horizontal_list_selection.
  *   `oysterId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t`, *default:* `nil`) - The oyster feature id. NOTE: As of Mar 2017, the cell ID field of the feature ID might not be set. See http://b/35447230#comment10
  *   `relatednessSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryRelatednessSignals.t`, *default:* `nil`) - Relatedness Matrix signals about this argument, e.g., query_popularity.
  *   `annotationLayerSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAnnotationLayerSignals.t`, *default:* `nil`) - Signals to facilitate orchestration of TUIG annotations.
  *   `isDefaultValue` (*type:* `boolean()`, *default:* `nil`) - If true, the value of the argument is populated with the default value specified by the system if the value can't be inferred from the input query. In IntentConfig case, the default value is specified by using IntentConfig.slot.default_value.
  *   `isNimbleAnnotation` (*type:* `boolean()`, *default:* `nil`) - Whether this argument was annotated by nimble (go/nimble-annotator)
  *   `personalEntity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryPersonalEntity.t)`, *default:* `nil`) - Personal entities are compound entities made up of entities and their attributes, where the entities can be compound too. E.g., "my father's mother" can have a summary node annotation of "Mother(Father(Myself))"
  *   `valueSource` (*type:* `String.t`, *default:* `nil`) - What added the argument value.
  *   `isEnum` (*type:* `boolean()`, *default:* `nil`) - Set when the argument has an enum value - a normalized_string_type from the intent catalog.
  *   `isGenieAnnotation` (*type:* `boolean()`, *default:* `nil`) - Whether this annotation was propagated as part of a Genie rewrite (go/genie-aqua).
  *   `midEquivalentToCollection` (*type:* `String.t`, *default:* `nil`) - For collection arguments, it is useful to save what was the original mid that qref annotated. For example, if the collection is /collection/films, we'll have the mid for /en/film here (/m/02vxn).
  *   `provenance` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance.t)`, *default:* `nil`) - Information about where the value of this argument came from. For example, it could have been explicitly provided in the query, pulled in from the previous state, or pulled from attentional entities.
  *   `relatedEntity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingRelatedEntity.t)`, *default:* `nil`) - List of entities that are semantically related to the argument as well as details of the relationship.
  *   `isAUngroundedTypeOf` (*type:* `String.t`, *default:* `nil`) - If the argument is entity, the ungrounded type the entity is. For example, the entity argument is /m/0p83l (Jasmine), the value of this field should be "Plant" if it is present.
  *   `annotatedRelationship` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQueryWebrefEntityRelationship.t)`, *default:* `nil`) - Relationships between entities
  *   `gaiaId` (*type:* `String.t`, *default:* `nil`) - The gaia id for the entity (person or plus page).
  *   `fromManualSymbolAnnotation` (*type:* `boolean()`, *default:* `nil`) - Whether the argument entity comes from a manual graphic symbol annotation. This is later used as a heuristic for poor web result quality.
  *   `rawQueryText` (*type:* `String.t`, *default:* `nil`) - A copy of the span of canonical (raw) parser input text corresponding to this annotation.
  *   `location` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t`, *default:* `nil`) - Entity location information (latitude/longitude) from freebase.
  *   `addedByCloseAnswers` (*type:* `boolean()`, *default:* `nil`) - Whether this argument was added by CloseAnswers in Postref. This bit is used to mark the corresponding interpretation/intent query as such by setting is_close_interpretation bit.
  *   `contextResolution` (*type:* `String.t`, *default:* `nil`) - How this argument was resolved through context from a previous query. Examples: obama -> "he" is resolved from the Obama entity starbucks -> Q2 is resolved from the list of shops (Attentional Entities)
  *   `shoppingIds` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t`, *default:* `nil`) - Equivalent shopping ids for the argument.
  *   `supportTransferSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySupportTransferSignals.t`, *default:* `nil`) - Support Transfer signals for this entity.
  *   `muninSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMuninSignals.t`, *default:* `nil`) - Signals derived from Munin Function call annotations.
  *   `locationClassificationScore` (*type:* `float()`, *default:* `nil`) - Confidence score of this argument being a location.
  *   `clusterInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityViewsExtractionClusterInfo.t`, *default:* `nil`) - If the literal.obj_type of the argument value is ID (Entity), this stores cluster scoring information for that entity, if the entity belongs to a cluster.
  *   `resolvedFromContext` (*type:* `boolean()`, *default:* `nil`) - Whether this argument was resolved through context from a previous query. Examples: obama -> "he" is resolved from the Obama entity starbucks -> Q2 is resolved from the list of shops
  *   `mediaEntitySignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMediaEntitySignals.t`, *default:* `nil`) - Signals about the media entity for this argument.
  *   `allowedFuzzyMatch` (*type:* `boolean()`, *default:* `nil`) - For this argument, backend performed fuzzy match.
  *   `ungroundedValueType` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersValueType.t`, *default:* `nil`) - Type of ungrounded argument. It is exclusively used when simple_value.ungrounded_value is populated.
  *   `saftSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySaftSignals.t`, *default:* `nil`) - Signals derived from SAFT.
  *   `locationType` (*type:* `String.t`, *default:* `nil`) - The type category for the location stored in this Argument, if it exists.
  *   `parsedDueToExperiment` (*type:* `list(String.t)`, *default:* `nil`) - Experiment ID for experiments that were used to parse this FunctionCall. Empty indicates no experiments used.
  *   `groundingSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals.t`, *default:* `nil`) - 
  *   `onDeviceAnnotationSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryOnDeviceAnnotationSignals.t`, *default:* `nil`) - Additional signals for on-device annotations.
  *   `locationMarkersSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocationMarkersSignals.t`, *default:* `nil`) - The usual semantic role associated with the signal from lightweight tokens attached to this argument span.
  *   `qrefInterpretationIndex` (*type:* `integer()`, *default:* `nil`) - The index of the QueryJoin interpretation from which this annotation is taken. We copy over the value given by nlp.semantic_parsing.annotators.QrefAnnotator. The value will be "-1" if the annotation is coming from low confidence Qref annotations. NOTE - this is generated from as QRef's interetation_number.
  *   `collectionMembership` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCollectionMembership.t)`, *default:* `nil`) - If the literal.obj_type of the argument value is ID (Entity), this represents the collection that the entity in this argument is a member of.
  *   `resolvedFromPronoun` (*type:* `boolean()`, *default:* `nil`) - Whether this argument was resolved from a pronoun mention in the query. Eg: [how old was obama when *he* became president]
  *   `fromSymbolAnnotation` (*type:* `boolean()`, *default:* `nil`) - Whether the argument entity comes from a graphic symbol annotation. This is later used as a heuristic for poor web result quality.
  *   `qrefConfidenceScore` (*type:* `number()`, *default:* `nil`) - The QRef confidence score for an entity argument.
  *   `deprecatedFreebaseType` (*type:* `list(String.t)`, *default:* `nil`) - If the literal.obj_type of the argument value is ID (Entity), this represents freebase types of the entity in this argument.
  *   `resultSupport` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.t)`, *default:* `nil`) - The list of result supports for this Argument.
  *   `entityNumber` (*type:* `integer()`, *default:* `nil`) - Signals about what other entities this entity implies / is implied by. This is useful for grounding. Example: b/138388207: suppressing song intents if the artist entity doesn't link to the song title. This value specifies the order of annotations in a QRef annotation chain so they can refer to each other.
  *   `responseMeaningSignals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals.t`, *default:* `nil`) - 
  *   `isIntentgenAnnotation` (*type:* `boolean()`, *default:* `nil`) - Whether this argument was annotated by Intentgen QUIK model (go/intentgen-quik)
  *   `entityRelationship` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotationEntityRelationship.t)`, *default:* `nil`) - Signals about what other entities this entity implies / is implied by. This is useful for grounding. Example: b/138388207: suppressing song intents if the artist entity doesn't link to the song title.
  *   `webrefEntitiesIndex` (*type:* `integer()`, *default:* `nil`) - Webref entity index for this argument, necessary for interpreting the relationship structure, and the list to index into. Specifically we need this to understand qref implications since they edges are represented with entity indexes.
  *   `isEvalDataHeuristic` (*type:* `boolean()`, *default:* `nil`) - Set when the eval_data was not derived at parsing time, but heuristically determined by matching the ArgumentValue to an annotation/query fragment.
  *   `supportTransferRules` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule.t)`, *default:* `nil`) - go/stbr supportthis is an
  *   `mergedImpliedEntity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryImpliedEntity.t)`, *default:* `nil`) - List of QRef implied entities merged into this entity during parsing. Clients should not rely on the order, as it is derivation-dependent.
  *   `expressionStatus` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus.t`, *default:* `nil`) - Status indicating whether the user has completely expressed the semantics of the argument.
  *   `webrefListSource` (*type:* `String.t`, *default:* `nil`) - This represents which list entities index refers to.
  *   `deprecatedSupportingMid` (*type:* `list(String.t)`, *default:* `nil`) - A list of mids that "support" this argument in voting, i.e., results that support these mids will be treated as if they support the argument. This field has been deprecated in favor of related_entity. b/27363861
  *   `chainId` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId.t)`, *default:* `nil`) - One or more ChainIds from a ChainAnnotation whose "organization_mid" matches the MID. As of 2021-01 multiple chain_ids may be specified if the organization for MID controls multiple chains. See go/chains-lckp-robust-triggering for motivation.
  *   `source` (*type:* `String.t`, *default:* `nil`) - What added this argument.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :multipleHorizontalListSelectionMatches => boolean() | nil,
          :oysterId => GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t() | nil,
          :relatednessSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryRelatednessSignals.t()
            | nil,
          :annotationLayerSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAnnotationLayerSignals.t()
            | nil,
          :isDefaultValue => boolean() | nil,
          :isNimbleAnnotation => boolean() | nil,
          :personalEntity =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryPersonalEntity.t()
            )
            | nil,
          :valueSource => String.t() | nil,
          :isEnum => boolean() | nil,
          :isGenieAnnotation => boolean() | nil,
          :midEquivalentToCollection => String.t() | nil,
          :provenance =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance.t()
            )
            | nil,
          :relatedEntity =>
            list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingRelatedEntity.t()) | nil,
          :isAUngroundedTypeOf => String.t() | nil,
          :annotatedRelationship =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQueryWebrefEntityRelationship.t()
            )
            | nil,
          :gaiaId => String.t() | nil,
          :fromManualSymbolAnnotation => boolean() | nil,
          :rawQueryText => String.t() | nil,
          :location => GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.t() | nil,
          :addedByCloseAnswers => boolean() | nil,
          :contextResolution => String.t() | nil,
          :shoppingIds =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t() | nil,
          :supportTransferSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySupportTransferSignals.t()
            | nil,
          :muninSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMuninSignals.t() | nil,
          :locationClassificationScore => float() | nil,
          :clusterInfo =>
            GoogleApi.ContentWarehouse.V1.Model.QualityViewsExtractionClusterInfo.t() | nil,
          :resolvedFromContext => boolean() | nil,
          :mediaEntitySignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMediaEntitySignals.t()
            | nil,
          :allowedFuzzyMatch => boolean() | nil,
          :ungroundedValueType =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersValueType.t() | nil,
          :saftSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySaftSignals.t() | nil,
          :locationType => String.t() | nil,
          :parsedDueToExperiment => list(String.t()) | nil,
          :groundingSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals.t()
            | nil,
          :onDeviceAnnotationSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryOnDeviceAnnotationSignals.t()
            | nil,
          :locationMarkersSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocationMarkersSignals.t()
            | nil,
          :qrefInterpretationIndex => integer() | nil,
          :collectionMembership =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCollectionMembership.t()
            )
            | nil,
          :resolvedFromPronoun => boolean() | nil,
          :fromSymbolAnnotation => boolean() | nil,
          :qrefConfidenceScore => number() | nil,
          :deprecatedFreebaseType => list(String.t()) | nil,
          :resultSupport =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.t()
            )
            | nil,
          :entityNumber => integer() | nil,
          :responseMeaningSignals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals.t()
            | nil,
          :isIntentgenAnnotation => boolean() | nil,
          :entityRelationship =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotationEntityRelationship.t()
            )
            | nil,
          :webrefEntitiesIndex => integer() | nil,
          :isEvalDataHeuristic => boolean() | nil,
          :supportTransferRules =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule.t()
            )
            | nil,
          :mergedImpliedEntity =>
            list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryImpliedEntity.t())
            | nil,
          :expressionStatus =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus.t() | nil,
          :webrefListSource => String.t() | nil,
          :deprecatedSupportingMid => list(String.t()) | nil,
          :chainId => list(GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId.t()) | nil,
          :source => String.t() | nil
        }

  field(:multipleHorizontalListSelectionMatches)
  field(:oysterId, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto)

  field(:relatednessSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryRelatednessSignals
  )

  field(:annotationLayerSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryAnnotationLayerSignals
  )

  field(:isDefaultValue)
  field(:isNimbleAnnotation)

  field(:personalEntity,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryPersonalEntity,
    type: :list
  )

  field(:valueSource)
  field(:isEnum)
  field(:isGenieAnnotation)
  field(:midEquivalentToCollection)

  field(:provenance,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentProvenance,
    type: :list
  )

  field(:relatedEntity,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingRelatedEntity,
    type: :list
  )

  field(:isAUngroundedTypeOf)

  field(:annotatedRelationship,
    as:
      GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQueryWebrefEntityRelationship,
    type: :list
  )

  field(:gaiaId)
  field(:fromManualSymbolAnnotation)
  field(:rawQueryText)
  field(:location, as: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto)
  field(:addedByCloseAnswers)
  field(:contextResolution)

  field(:shoppingIds,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds
  )

  field(:supportTransferSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySupportTransferSignals
  )

  field(:muninSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMuninSignals
  )

  field(:locationClassificationScore)
  field(:clusterInfo, as: GoogleApi.ContentWarehouse.V1.Model.QualityViewsExtractionClusterInfo)
  field(:resolvedFromContext)

  field(:mediaEntitySignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryMediaEntitySignals
  )

  field(:allowedFuzzyMatch)
  field(:ungroundedValueType, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersValueType)

  field(:saftSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySaftSignals
  )

  field(:locationType)
  field(:parsedDueToExperiment, type: :list)

  field(:groundingSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryGroundingSignals
  )

  field(:onDeviceAnnotationSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryOnDeviceAnnotationSignals
  )

  field(:locationMarkersSignals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryLocationMarkersSignals
  )

  field(:qrefInterpretationIndex)

  field(:collectionMembership,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryCollectionMembership,
    type: :list
  )

  field(:resolvedFromPronoun)
  field(:fromSymbolAnnotation)
  field(:qrefConfidenceScore)
  field(:deprecatedFreebaseType, type: :list)

  field(:resultSupport,
    as: GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport,
    type: :list
  )

  field(:entityNumber)

  field(:responseMeaningSignals,
    as:
      GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryResponseMeaningSignalsResponseMeaningSignals
  )

  field(:isIntentgenAnnotation)

  field(:entityRelationship,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotationEntityRelationship,
    type: :list
  )

  field(:webrefEntitiesIndex)
  field(:isEvalDataHeuristic)

  field(:supportTransferRules,
    as:
      GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule,
    type: :list
  )

  field(:mergedImpliedEntity,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryImpliedEntity,
    type: :list
  )

  field(:expressionStatus,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingExpressionStatus
  )

  field(:webrefListSource)
  field(:deprecatedSupportingMid, type: :list)
  field(:chainId, as: GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId, type: :list)
  field(:source)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
