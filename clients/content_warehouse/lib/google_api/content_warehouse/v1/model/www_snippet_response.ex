# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponse do
  @moduledoc """
  Per-document response for a www DocInfo request. Next field position: 55

  ## Attributes

  *   `obsoleteManybox` (*type:* `String.t`, *default:* `nil`) - ManyboxData
  *   `docInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.WWWDocInfo.t`, *default:* `nil`) - 
  *   `snippetRenderedToken` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken.t)`, *default:* `nil`) - How tokens are rendered in generating snippet.
  *   `scienceInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ScienceIndexSignal.t`, *default:* `nil`) - Abbreviated bibliographic data from Google Scholar.
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Additional data. Currently, this is used for sitelinks, localinfo, manybox, discussion metadata, richsnippets, similarpages and breadcrumbs.
  *   `matchesBitmapEncoded` (*type:* `String.t`, *default:* `nil`) - Bitmap representing matches to leaf query terms within document (body section and url). It gets populated if query_matches_info = true.
  *   `isLoginPage` (*type:* `boolean()`, *default:* `nil`) - True if the document represents a login page.
  *   `listSnippet` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ListSnippetResponse.t`, *default:* `nil`) - List snippet data.
  *   `siteDisplayName` (*type:* `String.t`, *default:* `nil`) - The domain-level display name of the website, such as "Google" for google.com. See go/site-display-name for more details. As of Aug 2023, this field is being deprecated in favor of `info.[AlternativeTitlesResponse].site_display_name_response` field, which also contains host-level site display names with additional information.
  *   `titleRenderedToken` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken.t)`, *default:* `nil`) - How tokens are rendered in generating title. Note: In rendering a title, the page title part and the site/host/domain title part can be flipped after initial rendering. The flip, if happened, may not be reflected in this field. That is, this field may contain the tokens in the original, pre-flip, order.
  *   `sectionHeadingAnchorName` (*type:* `String.t`, *default:* `nil`) - 
  *   `sectionHeadingText` (*type:* `String.t`, *default:* `nil`) - If requested, the snippet generator may take note of query items present in an entry in an on-page table-of-contents (i.e. a series of on-page links to named anchors.) If so, these two fields contain the formatted and highlighted entry and the name of the on-page anchor it links to, respectively. This may be used by GWS to show a direct link to that named anchor on the page.
  *   `docPreviewRestrictions` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions.t`, *default:* `nil`) - DocPreviewRestrictions for canonical url.
  *   `orionEntities` (*type:* `GoogleApi.ContentWarehouse.V1.Model.OrionDocEntitiesProto.t`, *default:* `nil`) - DEPRECATED If requested, the orion entities
  *   `docPreviewRestrictionsForAmp` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions.t`, *default:* `nil`) - DocPreviewRestrictions for amp result.
  *   `keyword` (*type:* `list(String.t)`, *default:* `nil`) - Document keywords
  *   `answerDocMatches` (*type:* `list(integer())`, *default:* `nil`) - A list of answers that had at least one hit in the document. Answers are identified by their index into the QRewriteQueryParams_AnswerSnippetInfo array (see //query/proto/query-params.proto).
  *   `titleLengthAdjustedForBrowserWidth` (*type:* `boolean()`, *default:* `nil`) - True if the title length is already adjusted for the browser width. If it is true, GWS needs not truncate the title.
  *   `snippethash` (*type:* `String.t`, *default:* `nil`) - A hash for duplicate detection. Two results with the same content can return different snippets if, for example, one has an ODP entry and the other does not. Gws can use this value reliably to filter duplicates. It is a hash of body only tidbits.
  *   `matchesBitmapSize` (*type:* `integer()`, *default:* `nil`) - 
  *   `hasMessageType` (*type:* `list(integer())`, *default:* `nil`) - Additional available data (message type ids)
  *   `snippetPrefixCharCount` (*type:* `integer()`, *default:* `nil`) - Character counts of snippet prefix, if any. E.g. section heading, list summary, byline date.
  *   `snippetBylineDate` (*type:* `String.t`, *default:* `nil`) - Byline date for time sensitive snippets. Most of the time it originates from quality_timebased::SyntacticDate and it is floored to PT midnight.
  *   `seenNotTerm` (*type:* `boolean()`, *default:* `nil`) - Did a negative query term match the meta description?
  *   `numberOfPages` (*type:* `integer()`, *default:* `nil`) - 
  *   `extraInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponse.t`, *default:* `nil`) - If requested, the extra snippet info
  *   `findyTidbits` (*type:* `integer()`, *default:* `nil`) - A bitvector of the tidbits in the snippet that are appropriate for the Quick Scroll (Findy) Chrome extension. Typically these contain "extra body matches", i.e., important query items not in the title.
  *   `longStructuredSnippet` (*type:* `GoogleApi.ContentWarehouse.V1.Model.LongStructuredSnippet.t`, *default:* `nil`) - Returned if want_long_structured_snippets. If present, caller should ignore the normal snippet.
  *   `obsoleteLocalinfo` (*type:* `String.t`, *default:* `nil`) - LocalWWWInfo
  *   `listSummary` (*type:* `String.t`, *default:* `nil`) - List summary phrase for list pages.
  *   `metaTags` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.WWWMetaTag.t)`, *default:* `nil`) - Meta tags
  *   `chosenBodyTidbits` (*type:* `list(integer())`, *default:* `nil`) - Tidbits chosen from the document body. Consists of repeated [begin, end) half-open ranges in token offsets from the beginning of the document.
  *   `numTokensSkippedByInDocRestrictionsInPrinting` (*type:* `integer()`, *default:* `nil`) - Similar to num_tokens_skipped_by_in_doc_restrictions_in_scoring, but this number is for tokens skipped during printing, since printer owns its own token info manager which populates tokens.
  *   `sentimentSnippets` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations.t)`, *default:* `nil`) - DEPRECATED Sentiment snippets
  *   `truncatedTitle` (*type:* `String.t`, *default:* `nil`) - Only for desktop web search. Please refer to Title.keep_original_title_and_populate_truncated_one for more details.
  *   `snippetPageNumber` (*type:* `integer()`, *default:* `nil`) - If requested the page number on which the snippet begins. (Only for documents such as PDFs where page numbers are well-defined.)
  *   `numTokensSkippedByInDocRestrictionsInScoring` (*type:* `integer()`, *default:* `nil`) - Number of tokens that is skipped because of in doc restrictions during scoring. This is an estimate, as the list of tokens is cached in TokenInfoManager. We should only monitor the cases where this number is too big or non-zero.
  *   `events` (*type:* `String.t`, *default:* `nil`) - Bitfield of snippet events and the various events. See SnippetEvents in ./snippets/defines.h for details on the contents.
  *   `isValidResult` (*type:* `boolean()`, *default:* `nil`) - Assume this is true unless we discover that the result doesn't match the the query, in which case this result is invalid despite having returned docinfo.
  *   `snippetExtraInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.SnippetExtraInfo.t`, *default:* `nil`) - 
  *   `squeryFingerprint` (*type:* `String.t`, *default:* `nil`) - This field is never set.
  *   `snippetHighlightMatchesBitmap` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponseBitmapPB.t)`, *default:* `nil`) - List of bitmaps representing matches to leaf query terms within each of the highlighted snippet text fragments. Consecutive bitmaps correspond to consecutive text fragments. It gets populated iff return_query_snippet_highlight_matches = true. Example: document body section: "This cafe has pet friendly patio." squery: (a (o dog :o pet :syn:general) friendly :o (o restaurant :o cafe :syn:general)) Let's assume the returned snippet text contains the whole document body section where two fragments get highlighted as follows: "This *cafe* has *pet friendly* patio." Then, the returned snippet_highlight_matches_bitmap[] list will have two bitmaps: bitmap[0] = <"cafe" -> leaf term with index 4> = {encoded: DenseEncode("00001"), size: 5} bitmap[1] = <"pet" and "friendly" -> leaf terms with indexes 1 and 2> = {encoded: DenseEncode("011"), size: 3}
  *   `titleSizeParams` (*type:* `GoogleApi.ContentWarehouse.V1.Model.TitleSizeParams.t`, *default:* `nil`) - Will only be set when `title_use_num_of_chars` is false.
  *   `odp` (*type:* `boolean()`, *default:* `nil`) - Was odp used in the snippets? DEPRECATED - this is no longer populated as of June 2017.
  *   `snippetsRanklabFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures.t`, *default:* `nil`) - Records features to analyze titles/snippets in ranklab.
  *   `obsoleteSitemap` (*type:* `String.t`, *default:* `nil`) - These fields were previously optional messages, but CL 2388905 moved them into the MessageSet. However, at this time, old Mustang binaries are still deployed in production and probably will be around for awhile. So, servers which need to talk to old binaries and need to use these fields need to check both the obsolete versions and the MessageSet version. Sitemap
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :obsoleteManybox => String.t() | nil,
          :docInfo => GoogleApi.ContentWarehouse.V1.Model.WWWDocInfo.t() | nil,
          :snippetRenderedToken =>
            list(GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken.t()) | nil,
          :scienceInfo => GoogleApi.ContentWarehouse.V1.Model.ScienceIndexSignal.t() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :matchesBitmapEncoded => String.t() | nil,
          :isLoginPage => boolean() | nil,
          :listSnippet => GoogleApi.ContentWarehouse.V1.Model.ListSnippetResponse.t() | nil,
          :siteDisplayName => String.t() | nil,
          :titleRenderedToken =>
            list(GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken.t()) | nil,
          :sectionHeadingAnchorName => String.t() | nil,
          :sectionHeadingText => String.t() | nil,
          :docPreviewRestrictions =>
            GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions.t() | nil,
          :orionEntities => GoogleApi.ContentWarehouse.V1.Model.OrionDocEntitiesProto.t() | nil,
          :docPreviewRestrictionsForAmp =>
            GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions.t() | nil,
          :keyword => list(String.t()) | nil,
          :answerDocMatches => list(integer()) | nil,
          :titleLengthAdjustedForBrowserWidth => boolean() | nil,
          :snippethash => String.t() | nil,
          :matchesBitmapSize => integer() | nil,
          :hasMessageType => list(integer()) | nil,
          :snippetPrefixCharCount => integer() | nil,
          :snippetBylineDate => String.t() | nil,
          :seenNotTerm => boolean() | nil,
          :numberOfPages => integer() | nil,
          :extraInfo => GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponse.t() | nil,
          :findyTidbits => integer() | nil,
          :longStructuredSnippet =>
            GoogleApi.ContentWarehouse.V1.Model.LongStructuredSnippet.t() | nil,
          :obsoleteLocalinfo => String.t() | nil,
          :listSummary => String.t() | nil,
          :metaTags => list(GoogleApi.ContentWarehouse.V1.Model.WWWMetaTag.t()) | nil,
          :chosenBodyTidbits => list(integer()) | nil,
          :numTokensSkippedByInDocRestrictionsInPrinting => integer() | nil,
          :sentimentSnippets =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations.t()
            )
            | nil,
          :truncatedTitle => String.t() | nil,
          :snippetPageNumber => integer() | nil,
          :numTokensSkippedByInDocRestrictionsInScoring => integer() | nil,
          :events => String.t() | nil,
          :isValidResult => boolean() | nil,
          :snippetExtraInfo => GoogleApi.ContentWarehouse.V1.Model.SnippetExtraInfo.t() | nil,
          :squeryFingerprint => String.t() | nil,
          :snippetHighlightMatchesBitmap =>
            list(GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponseBitmapPB.t()) | nil,
          :titleSizeParams => GoogleApi.ContentWarehouse.V1.Model.TitleSizeParams.t() | nil,
          :odp => boolean() | nil,
          :snippetsRanklabFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures.t()
            | nil,
          :obsoleteSitemap => String.t() | nil
        }

  field(:obsoleteManybox)
  field(:docInfo, as: GoogleApi.ContentWarehouse.V1.Model.WWWDocInfo)

  field(:snippetRenderedToken,
    as: GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken,
    type: :list
  )

  field(:scienceInfo, as: GoogleApi.ContentWarehouse.V1.Model.ScienceIndexSignal)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:matchesBitmapEncoded)
  field(:isLoginPage)
  field(:listSnippet, as: GoogleApi.ContentWarehouse.V1.Model.ListSnippetResponse)
  field(:siteDisplayName)

  field(:titleRenderedToken,
    as: GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken,
    type: :list
  )

  field(:sectionHeadingAnchorName)
  field(:sectionHeadingText)

  field(:docPreviewRestrictions,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions
  )

  field(:orionEntities, as: GoogleApi.ContentWarehouse.V1.Model.OrionDocEntitiesProto)

  field(:docPreviewRestrictionsForAmp,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityDniDocPreviewRestrictions
  )

  field(:keyword, type: :list)
  field(:answerDocMatches, type: :list)
  field(:titleLengthAdjustedForBrowserWidth)
  field(:snippethash)
  field(:matchesBitmapSize)
  field(:hasMessageType, type: :list)
  field(:snippetPrefixCharCount)
  field(:snippetBylineDate)
  field(:seenNotTerm)
  field(:numberOfPages)
  field(:extraInfo, as: GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponse)
  field(:findyTidbits)
  field(:longStructuredSnippet, as: GoogleApi.ContentWarehouse.V1.Model.LongStructuredSnippet)
  field(:obsoleteLocalinfo)
  field(:listSummary)
  field(:metaTags, as: GoogleApi.ContentWarehouse.V1.Model.WWWMetaTag, type: :list)
  field(:chosenBodyTidbits, type: :list)
  field(:numTokensSkippedByInDocRestrictionsInPrinting)

  field(:sentimentSnippets,
    as:
      GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations,
    type: :list
  )

  field(:truncatedTitle)
  field(:snippetPageNumber)
  field(:numTokensSkippedByInDocRestrictionsInScoring)
  field(:events)
  field(:isValidResult)
  field(:snippetExtraInfo, as: GoogleApi.ContentWarehouse.V1.Model.SnippetExtraInfo)
  field(:squeryFingerprint)

  field(:snippetHighlightMatchesBitmap,
    as: GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponseBitmapPB,
    type: :list
  )

  field(:titleSizeParams, as: GoogleApi.ContentWarehouse.V1.Model.TitleSizeParams)
  field(:odp)

  field(:snippetsRanklabFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures
  )

  field(:obsoleteSitemap)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponse do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.WWWSnippetResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
