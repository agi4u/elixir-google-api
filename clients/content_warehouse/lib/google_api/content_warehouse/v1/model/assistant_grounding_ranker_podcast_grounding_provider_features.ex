# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantGroundingRankerPodcastGroundingProviderFeatures do
  @moduledoc """
  Features to be extracted from Podcast GP for ranking in HGR. Next ID: 7

  ## Attributes

  *   `isExclusive` (*type:* `boolean()`, *default:* `nil`) - Whether the podcast is exclusive to a provider a not.
  *   `podcastListenersCount` (*type:* `integer()`, *default:* `nil`) - The count of the unique users that listened to the podcast in the last 28 days.
  *   `popularityScore` (*type:* `float()`, *default:* `nil`) - Provider popularity score. More details are here go/ps-to-kg.
  *   `scubedNg3ModelScore` (*type:* `number()`, *default:* `nil`) - The relevance score from Scubed.
  *   `scubedTstarScore` (*type:* `float()`, *default:* `nil`) - Tstar score is a signal that indicates the quality of the entity.
  *   `youtubeConfidenceScore` (*type:* `float()`, *default:* `nil`) - This score is in the range [0.0, 1.0] and is used for cross-backend (e.g., YT vs another Music/Podcast service provider) ranking and scoring. 0.0 means no confidence and 1.0 means full confidence.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isExclusive => boolean() | nil,
          :podcastListenersCount => integer() | nil,
          :popularityScore => float() | nil,
          :scubedNg3ModelScore => number() | nil,
          :scubedTstarScore => float() | nil,
          :youtubeConfidenceScore => float() | nil
        }

  field(:isExclusive)
  field(:podcastListenersCount)
  field(:popularityScore)
  field(:scubedNg3ModelScore)
  field(:scubedTstarScore)
  field(:youtubeConfidenceScore)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AssistantGroundingRankerPodcastGroundingProviderFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantGroundingRankerPodcastGroundingProviderFeatures.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AssistantGroundingRankerPodcastGroundingProviderFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
