# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1NodeConfig do
  @moduledoc """
  NodeConfig for setting the min/max number of nodes associated with the environment.

  ## Attributes

  *   `currentAggregateNodeCount` (*type:* `String.t`, *default:* `nil`) - Output only. The current total number of gateway nodes that each environment currently has across all instances.
  *   `maxNodeCount` (*type:* `String.t`, *default:* `nil`) - Optional. The maximum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended maximum number of nodes for that gateway.
  *   `minNodeCount` (*type:* `String.t`, *default:* `nil`) - Optional. The minimum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended minimum number of nodes for that gateway.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :currentAggregateNodeCount => String.t() | nil,
          :maxNodeCount => String.t() | nil,
          :minNodeCount => String.t() | nil
        }

  field(:currentAggregateNodeCount)
  field(:maxNodeCount)
  field(:minNodeCount)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1NodeConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1NodeConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1NodeConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
