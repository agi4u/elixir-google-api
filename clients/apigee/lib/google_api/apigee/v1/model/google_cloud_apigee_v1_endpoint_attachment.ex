# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EndpointAttachment do
  @moduledoc """
  Apigee endpoint attachment. For more information, see [Southbound networking patterns] (https://cloud.google.com/apigee/docs/api-platform/architecture/southbound-networking-patterns-endpoints).

  ## Attributes

  *   `host` (*type:* `String.t`, *default:* `nil`) - Output only. Host that can be used in either the HTTP target endpoint directly or as the host in target server.
  *   `location` (*type:* `String.t`, *default:* `nil`) - Required. Location of the endpoint attachment.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`
  *   `serviceAttachment` (*type:* `String.t`, *default:* `nil`) - Format: projects/*/regions/*/serviceAttachments/*
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => String.t() | nil,
          :location => String.t() | nil,
          :name => String.t() | nil,
          :serviceAttachment => String.t() | nil,
          :state => String.t() | nil
        }

  field(:host)
  field(:location)
  field(:name)
  field(:serviceAttachment)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EndpointAttachment do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EndpointAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EndpointAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
