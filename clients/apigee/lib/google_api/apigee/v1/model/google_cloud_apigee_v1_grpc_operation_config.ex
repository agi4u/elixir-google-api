# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GrpcOperationConfig do
  @moduledoc """
  Binds the resources in a proxy or remote service with the gRPC operation and its associated quota enforcement.

  ## Attributes

  *   `apiSource` (*type:* `String.t`, *default:* `nil`) - Required. Name of the API proxy with which the gRPC operation and quota are associated.
  *   `attributes` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t)`, *default:* `nil`) - Custom attributes associated with the operation.
  *   `methods` (*type:* `list(String.t)`, *default:* `nil`) - List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy. Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply ["ListPets", "GetPet"].
  *   `quota` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t`, *default:* `nil`) - Quota parameters to be enforced for the methods and API source combination. If none are specified, quota enforcement will not be done.
  *   `service` (*type:* `String.t`, *default:* `nil`) - Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiSource => String.t() | nil,
          :attributes => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t()) | nil,
          :methods => list(String.t()) | nil,
          :quota => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t() | nil,
          :service => String.t() | nil
        }

  field(:apiSource)
  field(:attributes, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute, type: :list)
  field(:methods, type: :list)
  field(:quota, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota)
  field(:service)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GrpcOperationConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GrpcOperationConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GrpcOperationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
