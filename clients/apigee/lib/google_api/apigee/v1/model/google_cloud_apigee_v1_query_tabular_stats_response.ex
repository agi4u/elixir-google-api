# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryTabularStatsResponse do
  @moduledoc """
  Encapsulates two kinds of stats that are results of the dimensions and aggregations requested. - Tabular rows. - Time series data. Example of tabular rows, Represents security stats results as a row of flat values.

  ## Attributes

  *   `columns` (*type:* `list(String.t)`, *default:* `nil`) - Column names corresponding to the same order as the inner values in the stats field.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - Next page token.
  *   `values` (*type:* `list(list(any()))`, *default:* `nil`) - Resultant rows from the executed query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columns => list(String.t()) | nil,
          :nextPageToken => String.t() | nil,
          :values => list(list(any())) | nil
        }

  field(:columns, type: :list)
  field(:nextPageToken)
  field(:values, type: :listlist)
end

defimpl Poison.Decoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryTabularStatsResponse do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryTabularStatsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryTabularStatsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
