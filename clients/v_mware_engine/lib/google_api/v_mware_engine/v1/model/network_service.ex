# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VMwareEngine.V1.Model.NetworkService do
  @moduledoc """
  Represents a network service that is managed by a `NetworkPolicy` resource. A network service provides a way to control an aspect of external access to VMware workloads. For example, whether the VMware workloads in the private clouds governed by a network policy can access or be accessed from the internet.

  ## Attributes

  *   `enabled` (*type:* `boolean()`, *default:* `nil`) - True if the service is enabled; false otherwise.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. State of the service. New values may be added to this enum when appropriate.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :enabled => boolean() | nil,
          :state => String.t() | nil
        }

  field(:enabled)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.VMwareEngine.V1.Model.NetworkService do
  def decode(value, options) do
    GoogleApi.VMwareEngine.V1.Model.NetworkService.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.VMwareEngine.V1.Model.NetworkService do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
