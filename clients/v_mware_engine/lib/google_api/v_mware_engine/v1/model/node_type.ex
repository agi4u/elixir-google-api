# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VMwareEngine.V1.Model.NodeType do
  @moduledoc """
  Describes node type.

  ## Attributes

  *   `availableCustomCoreCounts` (*type:* `list(integer())`, *default:* `nil`) - Output only. List of possible values of custom core count.
  *   `capabilities` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Capabilities of this node type.
  *   `diskSizeGb` (*type:* `integer()`, *default:* `nil`) - Output only. The amount of storage available, defined in GB.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Output only. The friendly name for this node type. For example: ve1-standard-72
  *   `families` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Families of the node type. For node types to be in the same cluster they must share at least one element in the `families`.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - Output only. The type of the resource.
  *   `memoryGb` (*type:* `integer()`, *default:* `nil`) - Output only. The amount of physical memory available, defined in GB.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of this node type. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
  *   `nodeTypeId` (*type:* `String.t`, *default:* `nil`) - Output only. The canonical identifier of the node type (corresponds to the `NodeType`). For example: standard-72.
  *   `totalCoreCount` (*type:* `integer()`, *default:* `nil`) - Output only. The total number of CPU cores in a single node.
  *   `virtualCpuCount` (*type:* `integer()`, *default:* `nil`) - Output only. The total number of virtual CPUs in a single node.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :availableCustomCoreCounts => list(integer()) | nil,
          :capabilities => list(String.t()) | nil,
          :diskSizeGb => integer() | nil,
          :displayName => String.t() | nil,
          :families => list(String.t()) | nil,
          :kind => String.t() | nil,
          :memoryGb => integer() | nil,
          :name => String.t() | nil,
          :nodeTypeId => String.t() | nil,
          :totalCoreCount => integer() | nil,
          :virtualCpuCount => integer() | nil
        }

  field(:availableCustomCoreCounts, type: :list)
  field(:capabilities, type: :list)
  field(:diskSizeGb)
  field(:displayName)
  field(:families, type: :list)
  field(:kind)
  field(:memoryGb)
  field(:name)
  field(:nodeTypeId)
  field(:totalCoreCount)
  field(:virtualCpuCount)
end

defimpl Poison.Decoder, for: GoogleApi.VMwareEngine.V1.Model.NodeType do
  def decode(value, options) do
    GoogleApi.VMwareEngine.V1.Model.NodeType.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.VMwareEngine.V1.Model.NodeType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
