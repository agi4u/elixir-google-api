# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact do
  @moduledoc """
  A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.

  ## Attributes

  *   `artifactId` (*type:* `String.t`, *default:* `nil`) - Maven `artifactId` value used when uploading the artifact to Artifact Registry.
  *   `groupId` (*type:* `String.t`, *default:* `nil`) - Maven `groupId` value used when uploading the artifact to Artifact Registry.
  *   `path` (*type:* `String.t`, *default:* `nil`) - Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
  *   `repository` (*type:* `String.t`, *default:* `nil`) - Artifact Registry repository, in the form "https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
  *   `version` (*type:* `String.t`, *default:* `nil`) - Maven `version` value used when uploading the artifact to Artifact Registry.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :artifactId => String.t() | nil,
          :groupId => String.t() | nil,
          :path => String.t() | nil,
          :repository => String.t() | nil,
          :version => String.t() | nil
        }

  field(:artifactId)
  field(:groupId)
  field(:path)
  field(:repository)
  field(:version)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContainerAnalysis.V1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContainerAnalysis.V1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
