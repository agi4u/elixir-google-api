# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1DefineCertificateRequest do
  @moduledoc """
  Request object for creating a certificate.

  ## Attributes

  *   `ceritificateName` (*type:* `String.t`, *default:* `nil`) - Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name.
  *   `certificate` (*type:* `String.t`, *default:* `nil`) - Required. The raw contents of the .PEM, .CRT, or .CER file.
  *   `settings` (*type:* `list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1NetworkSetting.t)`, *default:* `nil`) - Optional. Certificate settings within the chrome.networks.certificates namespace.
  *   `targetResource` (*type:* `String.t`, *default:* `nil`) - Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ceritificateName => String.t() | nil,
          :certificate => String.t() | nil,
          :settings =>
            list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1NetworkSetting.t())
            | nil,
          :targetResource => String.t() | nil
        }

  field(:ceritificateName)
  field(:certificate)

  field(:settings,
    as: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1NetworkSetting,
    type: :list
  )

  field(:targetResource)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1DefineCertificateRequest do
  def decode(value, options) do
    GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1DefineCertificateRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1DefineCertificateRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
