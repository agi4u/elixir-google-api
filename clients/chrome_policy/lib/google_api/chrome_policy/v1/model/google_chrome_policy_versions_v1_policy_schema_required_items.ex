# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems do
  @moduledoc """
  The fields that will become required based on the value of this field.

  ## Attributes

  *   `fieldConditions` (*type:* `list(String.t)`, *default:* `nil`) - The value(s) of the field that provoke required field enforcement. An empty field_conditions implies that any value assigned to this field will provoke required field enforcement.
  *   `requiredFields` (*type:* `list(String.t)`, *default:* `nil`) - The fields that are required as a consequence of the field conditions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fieldConditions => list(String.t()) | nil,
          :requiredFields => list(String.t()) | nil
        }

  field(:fieldConditions, type: :list)
  field(:requiredFields, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems do
  def decode(value, options) do
    GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
