# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1DataplexSpec do
  @moduledoc """
  Common Dataplex fields.

  ## Attributes

  *   `asset` (*type:* `String.t`, *default:* `nil`) - Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
  *   `compressionFormat` (*type:* `String.t`, *default:* `nil`) - Compression format of the data, e.g., zip, gzip etc.
  *   `dataFormat` (*type:* `GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1PhysicalSchema.t`, *default:* `nil`) - Format of the data.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :asset => String.t() | nil,
          :compressionFormat => String.t() | nil,
          :dataFormat =>
            GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1PhysicalSchema.t() | nil,
          :projectId => String.t() | nil
        }

  field(:asset)
  field(:compressionFormat)
  field(:dataFormat, as: GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1PhysicalSchema)
  field(:projectId)
end

defimpl Poison.Decoder, for: GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1DataplexSpec do
  def decode(value, options) do
    GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1DataplexSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataCatalog.V1.Model.GoogleCloudDatacatalogV1DataplexSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
