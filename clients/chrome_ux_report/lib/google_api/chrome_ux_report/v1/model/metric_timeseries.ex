# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeUXReport.V1.Model.MetricTimeseries do
  @moduledoc """
  A `metric timeseries` is a set of user experience data for a single web performance metric, like "first contentful paint". It contains a summary histogram of real world Chrome usage as a series of `bins`, where each bin has density values for a particular time period.

  ## Attributes

  *   `fractionTimeseries` (*type:* `%{optional(String.t) => GoogleApi.ChromeUXReport.V1.Model.FractionTimeseries.t}`, *default:* `nil`) - Mapping from labels to timeseries of fractions attributed to this label.
  *   `histogramTimeseries` (*type:* `list(GoogleApi.ChromeUXReport.V1.Model.TimeseriesBin.t)`, *default:* `nil`) - The histogram of user experiences for a metric. The histogram will have at least one bin and the densities of all bins will add up to ~1, for each timeseries entry.
  *   `percentilesTimeseries` (*type:* `GoogleApi.ChromeUXReport.V1.Model.TimeseriesPercentiles.t`, *default:* `nil`) - Commonly useful percentiles of the Metric. The value type for the percentiles will be the same as the value types given for the Histogram bins.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fractionTimeseries =>
            %{optional(String.t()) => GoogleApi.ChromeUXReport.V1.Model.FractionTimeseries.t()}
            | nil,
          :histogramTimeseries => list(GoogleApi.ChromeUXReport.V1.Model.TimeseriesBin.t()) | nil,
          :percentilesTimeseries =>
            GoogleApi.ChromeUXReport.V1.Model.TimeseriesPercentiles.t() | nil
        }

  field(:fractionTimeseries, as: GoogleApi.ChromeUXReport.V1.Model.FractionTimeseries, type: :map)
  field(:histogramTimeseries, as: GoogleApi.ChromeUXReport.V1.Model.TimeseriesBin, type: :list)
  field(:percentilesTimeseries, as: GoogleApi.ChromeUXReport.V1.Model.TimeseriesPercentiles)
end

defimpl Poison.Decoder, for: GoogleApi.ChromeUXReport.V1.Model.MetricTimeseries do
  def decode(value, options) do
    GoogleApi.ChromeUXReport.V1.Model.MetricTimeseries.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ChromeUXReport.V1.Model.MetricTimeseries do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
