# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeUXReport.V1.Model.QueryHistoryResponse do
  @moduledoc """
  Response payload sent back to a physical web client. This response contains the record found based on the identiers present in a `QueryHistoryRequest`. The returned response will have a history record, and sometimes details on normalization actions taken on the request that were necessary to make the request successful.

  ## Attributes

  *   `record` (*type:* `GoogleApi.ChromeUXReport.V1.Model.HistoryRecord.t`, *default:* `nil`) - The record that was found.
  *   `urlNormalizationDetails` (*type:* `GoogleApi.ChromeUXReport.V1.Model.UrlNormalization.t`, *default:* `nil`) - These are details about automated normalization actions that were taken in order to make the requested `url_pattern` valid.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :record => GoogleApi.ChromeUXReport.V1.Model.HistoryRecord.t() | nil,
          :urlNormalizationDetails => GoogleApi.ChromeUXReport.V1.Model.UrlNormalization.t() | nil
        }

  field(:record, as: GoogleApi.ChromeUXReport.V1.Model.HistoryRecord)
  field(:urlNormalizationDetails, as: GoogleApi.ChromeUXReport.V1.Model.UrlNormalization)
end

defimpl Poison.Decoder, for: GoogleApi.ChromeUXReport.V1.Model.QueryHistoryResponse do
  def decode(value, options) do
    GoogleApi.ChromeUXReport.V1.Model.QueryHistoryResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ChromeUXReport.V1.Model.QueryHistoryResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
