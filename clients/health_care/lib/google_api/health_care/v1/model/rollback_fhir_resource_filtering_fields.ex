# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1.Model.RollbackFhirResourceFilteringFields do
  @moduledoc """


  ## Attributes

  *   `metadataFilter` (*type:* `String.t`, *default:* `nil`) - Optional. A filter expression that matches data in the `Resource.meta` element. Supports all filters in [AIP-160](https://google.aip.dev/160) except the "has" (`:`) operator. Supports the following custom functions: * `tag("") = ""` for tag filtering. * `extension_value_ts("") = ` for filtering extensions with a timestamp, where `` is a Unix timestamp. Supports the `>`, `<`, `<=`, `>=`, and `!=` comparison operators.
  *   `operationIds` (*type:* `list(String.t)`, *default:* `nil`) - Optional. A list of operation IDs to roll back.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :metadataFilter => String.t() | nil,
          :operationIds => list(String.t()) | nil
        }

  field(:metadataFilter)
  field(:operationIds, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1.Model.RollbackFhirResourceFilteringFields do
  def decode(value, options) do
    GoogleApi.HealthCare.V1.Model.RollbackFhirResourceFilteringFields.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1.Model.RollbackFhirResourceFilteringFields do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
