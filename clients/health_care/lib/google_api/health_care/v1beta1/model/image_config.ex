# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.ImageConfig do
  @moduledoc """
  Specifies how to handle de-identification of image pixels.

  ## Attributes

  *   `additionalInfoTypes` (*type:* `list(String.t)`, *default:* `nil`) - Additional InfoTypes to redact in the images in addition to those used by `text_redaction_mode`. Can only be used when `text_redaction_mode` is set to `REDACT_SENSITIVE_TEXT`, `REDACT_SENSITIVE_TEXT_CLEAN_DESCRIPTORS` or `TEXT_REDACTION_MODE_UNSPECIFIED`.
  *   `excludeInfoTypes` (*type:* `list(String.t)`, *default:* `nil`) - InfoTypes to skip redacting, overriding those used by `text_redaction_mode`. Can only be used when `text_redaction_mode` is set to `REDACT_SENSITIVE_TEXT` or `REDACT_SENSITIVE_TEXT_CLEAN_DESCRIPTORS`.
  *   `textRedactionMode` (*type:* `String.t`, *default:* `nil`) - Determines how to redact text from image.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalInfoTypes => list(String.t()) | nil,
          :excludeInfoTypes => list(String.t()) | nil,
          :textRedactionMode => String.t() | nil
        }

  field(:additionalInfoTypes, type: :list)
  field(:excludeInfoTypes, type: :list)
  field(:textRedactionMode)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.ImageConfig do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.ImageConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.ImageConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
