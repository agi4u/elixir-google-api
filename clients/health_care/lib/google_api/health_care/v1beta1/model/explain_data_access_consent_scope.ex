# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope do
  @moduledoc """
  A single consent scope that provides info on who has access to the requested resource scope for a particular purpose and environment, enforced by which consent.

  ## Attributes

  *   `accessorScope` (*type:* `GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope.t`, *default:* `nil`) - The accessor scope that describes who can access, for what purpose, and in which environment.
  *   `decision` (*type:* `String.t`, *default:* `nil`) - Whether the current consent scope is permitted or denied access on the requested resource.
  *   `enforcingConsents` (*type:* `list(GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentInfo.t)`, *default:* `nil`) - Metadata of the consent resources that enforce the consent scope's access.
  *   `exceptions` (*type:* `list(GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope.t)`, *default:* `nil`) - Other consent scopes that created exceptions within this scope.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessorScope => GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope.t() | nil,
          :decision => String.t() | nil,
          :enforcingConsents =>
            list(GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentInfo.t()) | nil,
          :exceptions =>
            list(GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope.t()) | nil
        }

  field(:accessorScope, as: GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope)
  field(:decision)

  field(:enforcingConsents,
    as: GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentInfo,
    type: :list
  )

  field(:exceptions,
    as: GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.ExplainDataAccessConsentScope do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
