# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.ApplyAdminConsentsResponse do
  @moduledoc """
  Response when all admin Consent resources in scope were processed and all affected resources were reindexed successfully. This structure will be included in the response when the operation finishes successfully.

  ## Attributes

  *   `affectedResources` (*type:* `String.t`, *default:* `nil`) - The number of resources (including the Consent resources) that may have consent access change.
  *   `consentApplySuccess` (*type:* `String.t`, *default:* `nil`) - If `validate_only=false` in ApplyAdminConsentsRequest, this counter contains the number of Consent resources that were successfully applied. Otherwise, it is the number of Consent resources that are supported.
  *   `failedResources` (*type:* `String.t`, *default:* `nil`) - The number of resources (including the Consent resources) that ApplyAdminConsents failed to re-index.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :affectedResources => String.t() | nil,
          :consentApplySuccess => String.t() | nil,
          :failedResources => String.t() | nil
        }

  field(:affectedResources)
  field(:consentApplySuccess)
  field(:failedResources)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.ApplyAdminConsentsResponse do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.ApplyAdminConsentsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.ApplyAdminConsentsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
