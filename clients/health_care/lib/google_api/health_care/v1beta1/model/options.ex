# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.Options do
  @moduledoc """
  Specifies additional options to apply to the base profile.

  ## Attributes

  *   `cleanDescriptors` (*type:* `GoogleApi.HealthCare.V1beta1.Model.CleanDescriptorsOption.t`, *default:* `nil`) - Set Clean Descriptors Option.
  *   `cleanImage` (*type:* `GoogleApi.HealthCare.V1beta1.Model.ImageConfig.t`, *default:* `nil`) - Apply `Action.clean_image` to [`PixelData`](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part06/chapter_6.html) as configured.
  *   `primaryIds` (*type:* `String.t`, *default:* `nil`) - Set `Action` for [`StudyInstanceUID`, `SeriesInstanceUID`, `SOPInstanceUID`, and `MediaStorageSOPInstanceUID`](http://dicom.nema.org/medical/dicom/2018e/output/chtml/part06/chapter_6.html).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cleanDescriptors =>
            GoogleApi.HealthCare.V1beta1.Model.CleanDescriptorsOption.t() | nil,
          :cleanImage => GoogleApi.HealthCare.V1beta1.Model.ImageConfig.t() | nil,
          :primaryIds => String.t() | nil
        }

  field(:cleanDescriptors, as: GoogleApi.HealthCare.V1beta1.Model.CleanDescriptorsOption)
  field(:cleanImage, as: GoogleApi.HealthCare.V1beta1.Model.ImageConfig)
  field(:primaryIds)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.Options do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.Options.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.Options do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
