# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope do
  @moduledoc """
  The accessor scope that describes who can access, for what purpose, in which environment.

  ## Attributes

  *   `actor` (*type:* `String.t`, *default:* `nil`) - An individual, group, or access role that identifies the accessor or a characteristic of the accessor. This can be a resource ID (such as `{resourceType}/{id}`) or an external URI. This value must be present.
  *   `environment` (*type:* `String.t`, *default:* `nil`) - An abstract identifier that describes the environment or conditions under which the accessor is acting. Can be "*" if it applies to all environments.
  *   `purpose` (*type:* `String.t`, *default:* `nil`) - The intent of data use. Can be "*" if it applies to all purposes.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actor => String.t() | nil,
          :environment => String.t() | nil,
          :purpose => String.t() | nil
        }

  field(:actor)
  field(:environment)
  field(:purpose)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.ConsentAccessorScope do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
