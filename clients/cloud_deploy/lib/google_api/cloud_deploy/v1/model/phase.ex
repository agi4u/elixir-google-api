# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDeploy.V1.Model.Phase do
  @moduledoc """
  Phase represents a collection of jobs that are logically grouped together for a `Rollout`.

  ## Attributes

  *   `childRolloutJobs` (*type:* `GoogleApi.CloudDeploy.V1.Model.ChildRolloutJobs.t`, *default:* `nil`) - Output only. ChildRollout job composition.
  *   `deploymentJobs` (*type:* `GoogleApi.CloudDeploy.V1.Model.DeploymentJobs.t`, *default:* `nil`) - Output only. Deployment job composition.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. The ID of the Phase.
  *   `skipMessage` (*type:* `String.t`, *default:* `nil`) - Output only. Additional information on why the Phase was skipped, if available.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state of the Phase.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :childRolloutJobs => GoogleApi.CloudDeploy.V1.Model.ChildRolloutJobs.t() | nil,
          :deploymentJobs => GoogleApi.CloudDeploy.V1.Model.DeploymentJobs.t() | nil,
          :id => String.t() | nil,
          :skipMessage => String.t() | nil,
          :state => String.t() | nil
        }

  field(:childRolloutJobs, as: GoogleApi.CloudDeploy.V1.Model.ChildRolloutJobs)
  field(:deploymentJobs, as: GoogleApi.CloudDeploy.V1.Model.DeploymentJobs)
  field(:id)
  field(:skipMessage)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDeploy.V1.Model.Phase do
  def decode(value, options) do
    GoogleApi.CloudDeploy.V1.Model.Phase.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDeploy.V1.Model.Phase do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
