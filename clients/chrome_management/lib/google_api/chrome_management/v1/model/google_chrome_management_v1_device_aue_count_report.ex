# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceAueCountReport do
  @moduledoc """
  Report for CountChromeDevicesPerAueDateResponse, contains the count of devices of a specific model and auto update expiration range.

  ## Attributes

  *   `aueMonth` (*type:* `String.t`, *default:* `nil`) - Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty.
  *   `aueYear` (*type:* `String.t`, *default:* `nil`) - Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.
  *   `count` (*type:* `String.t`, *default:* `nil`) - Count of devices of this model.
  *   `expired` (*type:* `boolean()`, *default:* `nil`) - Boolean value for whether or not the device has already expired.
  *   `model` (*type:* `String.t`, *default:* `nil`) - Public model name of the devices.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aueMonth => String.t() | nil,
          :aueYear => String.t() | nil,
          :count => String.t() | nil,
          :expired => boolean() | nil,
          :model => String.t() | nil
        }

  field(:aueMonth)
  field(:aueYear)
  field(:count)
  field(:expired)
  field(:model)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceAueCountReport do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceAueCountReport.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceAueCountReport do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
