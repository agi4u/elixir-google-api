# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse do
  @moduledoc """
  Response containing counts for devices that need attention.

  ## Attributes

  *   `noRecentPolicySyncCount` (*type:* `String.t`, *default:* `nil`) - Number of ChromeOS devices have not synced policies in the past 28 days.
  *   `noRecentUserActivityCount` (*type:* `String.t`, *default:* `nil`) - Number of ChromeOS devices that have not seen any user activity in the past 28 days.
  *   `osVersionNotCompliantCount` (*type:* `String.t`, *default:* `nil`) - Number of devices whose OS version is not compliant.
  *   `pendingUpdate` (*type:* `String.t`, *default:* `nil`) - Number of devices that are pending an OS update.
  *   `unsupportedPolicyCount` (*type:* `String.t`, *default:* `nil`) - Number of devices that are unable to apply a policy due to an OS version mismatch.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :noRecentPolicySyncCount => String.t() | nil,
          :noRecentUserActivityCount => String.t() | nil,
          :osVersionNotCompliantCount => String.t() | nil,
          :pendingUpdate => String.t() | nil,
          :unsupportedPolicyCount => String.t() | nil
        }

  field(:noRecentPolicySyncCount)
  field(:noRecentUserActivityCount)
  field(:osVersionNotCompliantCount)
  field(:pendingUpdate)
  field(:unsupportedPolicyCount)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
