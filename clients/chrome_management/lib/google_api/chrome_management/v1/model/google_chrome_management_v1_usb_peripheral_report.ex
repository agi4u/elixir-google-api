# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1UsbPeripheralReport do
  @moduledoc """
  USB connected peripheral report.

  ## Attributes

  *   `categories` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Categories the device belongs to https://www.usb.org/defined-class-codes
  *   `classId` (*type:* `integer()`, *default:* `nil`) - Output only. Class ID https://www.usb.org/defined-class-codes
  *   `firmwareVersion` (*type:* `String.t`, *default:* `nil`) - Output only. Firmware version
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Device name, model name, or product name
  *   `pid` (*type:* `integer()`, *default:* `nil`) - Output only. Product ID
  *   `subclassId` (*type:* `integer()`, *default:* `nil`) - Output only. Subclass ID https://www.usb.org/defined-class-codes
  *   `vendor` (*type:* `String.t`, *default:* `nil`) - Output only. Vendor name
  *   `vid` (*type:* `integer()`, *default:* `nil`) - Output only. Vendor ID
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :categories => list(String.t()) | nil,
          :classId => integer() | nil,
          :firmwareVersion => String.t() | nil,
          :name => String.t() | nil,
          :pid => integer() | nil,
          :subclassId => integer() | nil,
          :vendor => String.t() | nil,
          :vid => integer() | nil
        }

  field(:categories, type: :list)
  field(:classId)
  field(:firmwareVersion)
  field(:name)
  field(:pid)
  field(:subclassId)
  field(:vendor)
  field(:vid)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1UsbPeripheralReport do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1UsbPeripheralReport.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1UsbPeripheralReport do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
