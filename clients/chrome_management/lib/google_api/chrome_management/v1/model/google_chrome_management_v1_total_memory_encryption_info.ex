# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1TotalMemoryEncryptionInfo do
  @moduledoc """
  Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A

  ## Attributes

  *   `encryptionAlgorithm` (*type:* `String.t`, *default:* `nil`) - Memory encryption algorithm.
  *   `encryptionState` (*type:* `String.t`, *default:* `nil`) - The state of memory encryption on the device.
  *   `keyLength` (*type:* `String.t`, *default:* `nil`) - The length of the encryption keys.
  *   `maxKeys` (*type:* `String.t`, *default:* `nil`) - The maximum number of keys that can be used for encryption.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :encryptionAlgorithm => String.t() | nil,
          :encryptionState => String.t() | nil,
          :keyLength => String.t() | nil,
          :maxKeys => String.t() | nil
        }

  field(:encryptionAlgorithm)
  field(:encryptionState)
  field(:keyLength)
  field(:maxKeys)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1TotalMemoryEncryptionInfo do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1TotalMemoryEncryptionInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1TotalMemoryEncryptionInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
