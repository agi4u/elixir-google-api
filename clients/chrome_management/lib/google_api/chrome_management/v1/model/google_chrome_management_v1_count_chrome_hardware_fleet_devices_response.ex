# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse do
  @moduledoc """
  Response containing a list of devices with a specific type of hardware specification from the requested hardware type.

  ## Attributes

  *   `cpuReports` (*type:* `list(GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t)`, *default:* `nil`) - The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz).
  *   `memoryReports` (*type:* `list(GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t)`, *default:* `nil`) - The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).
  *   `modelReports` (*type:* `list(GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t)`, *default:* `nil`) - The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook).
  *   `storageReports` (*type:* `list(GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t)`, *default:* `nil`) - The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cpuReports =>
            list(
              GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t()
            )
            | nil,
          :memoryReports =>
            list(
              GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t()
            )
            | nil,
          :modelReports =>
            list(
              GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t()
            )
            | nil,
          :storageReports =>
            list(
              GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport.t()
            )
            | nil
        }

  field(:cpuReports,
    as: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport,
    type: :list
  )

  field(:memoryReports,
    as: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport,
    type: :list
  )

  field(:modelReports,
    as: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport,
    type: :list
  )

  field(:storageReports,
    as: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1DeviceHardwareCountReport,
    type: :list
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
