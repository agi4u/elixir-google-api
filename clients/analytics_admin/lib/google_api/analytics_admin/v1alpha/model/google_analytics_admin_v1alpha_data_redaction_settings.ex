# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsAdmin.V1alpha.Model.GoogleAnalyticsAdminV1alphaDataRedactionSettings do
  @moduledoc """
  Settings for client-side data redaction. Singleton resource under a Web Stream.

  ## Attributes

  *   `emailRedactionEnabled` (*type:* `boolean()`, *default:* `nil`) - If enabled, any event parameter or user property values that look like an email will be redacted.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Name of this Data Redaction Settings resource. Format: properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example: "properties/1000/dataStreams/2000/dataRedactionSettings"
  *   `queryParameterKeys` (*type:* `list(String.t)`, *default:* `nil`) - The query parameter keys to apply redaction logic to if present in the URL. Query parameter matching is case-insensitive. Must contain at least one element if query_parameter_replacement_enabled is true. Keys cannot contain commas.
  *   `queryParameterRedactionEnabled` (*type:* `boolean()`, *default:* `nil`) - Query Parameter redaction removes the key and value portions of a query parameter if it is in the configured set of query parameters. If enabled, URL query replacement logic will be run for the Stream. Any query parameters defined in query_parameter_keys will be redacted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :emailRedactionEnabled => boolean() | nil,
          :name => String.t() | nil,
          :queryParameterKeys => list(String.t()) | nil,
          :queryParameterRedactionEnabled => boolean() | nil
        }

  field(:emailRedactionEnabled)
  field(:name)
  field(:queryParameterKeys, type: :list)
  field(:queryParameterRedactionEnabled)
end

defimpl Poison.Decoder,
  for: GoogleApi.AnalyticsAdmin.V1alpha.Model.GoogleAnalyticsAdminV1alphaDataRedactionSettings do
  def decode(value, options) do
    GoogleApi.AnalyticsAdmin.V1alpha.Model.GoogleAnalyticsAdminV1alphaDataRedactionSettings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AnalyticsAdmin.V1alpha.Model.GoogleAnalyticsAdminV1alphaDataRedactionSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
