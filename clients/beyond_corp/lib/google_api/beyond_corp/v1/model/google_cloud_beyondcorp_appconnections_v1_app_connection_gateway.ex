# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BeyondCorp.V1.Model.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway do
  @moduledoc """
  Gateway represents a user facing component that serves as an entrance to enable connectivity.

  ## Attributes

  *   `appGateway` (*type:* `String.t`, *default:* `nil`) - Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
  *   `ingressPort` (*type:* `integer()`, *default:* `nil`) - Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
  *   `l7psc` (*type:* `String.t`, *default:* `nil`) - Output only. L7 private service connection for this resource.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. The type of hosting used by the gateway.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - Output only. Server-defined URI for this resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appGateway => String.t() | nil,
          :ingressPort => integer() | nil,
          :l7psc => String.t() | nil,
          :type => String.t() | nil,
          :uri => String.t() | nil
        }

  field(:appGateway)
  field(:ingressPort)
  field(:l7psc)
  field(:type)
  field(:uri)
end

defimpl Poison.Decoder,
  for: GoogleApi.BeyondCorp.V1.Model.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway do
  def decode(value, options) do
    GoogleApi.BeyondCorp.V1.Model.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.BeyondCorp.V1.Model.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
