# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.AnalyzeOperationMetadata do
  @moduledoc """
  Metadata describing the Analyze operation.

  ## Attributes

  *   `analyzedWorkloadName` (*type:* `String.t`, *default:* `nil`) - Output only. name of the workload being analyzed.
  *   `analyzedWorkloadType` (*type:* `String.t`, *default:* `nil`) - Output only. Type of the workload being analyzed.
  *   `analyzedWorkloadUuid` (*type:* `String.t`, *default:* `nil`) - Output only. unique identifier of the workload typically generated by control plane. E.g. batch uuid.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time when the operation was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Output only. Short description of the operation.
  *   `doneTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time when the operation finished.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Output only. Labels associated with the operation.
  *   `warnings` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Warnings encountered during operation execution.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyzedWorkloadName => String.t() | nil,
          :analyzedWorkloadType => String.t() | nil,
          :analyzedWorkloadUuid => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :doneTime => DateTime.t() | nil,
          :labels => map() | nil,
          :warnings => list(String.t()) | nil
        }

  field(:analyzedWorkloadName)
  field(:analyzedWorkloadType)
  field(:analyzedWorkloadUuid)
  field(:createTime, as: DateTime)
  field(:description)
  field(:doneTime, as: DateTime)
  field(:labels, type: :map)
  field(:warnings, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.AnalyzeOperationMetadata do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.AnalyzeOperationMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.AnalyzeOperationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
