# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V2.Model.Sidecar do
  @moduledoc """
  Sidecars run alongside the Task's step containers.

  ## Attributes

  *   `args` (*type:* `list(String.t)`, *default:* `nil`) - Arguments to the entrypoint.
  *   `command` (*type:* `list(String.t)`, *default:* `nil`) - Entrypoint array.
  *   `env` (*type:* `list(GoogleApi.CloudBuild.V2.Model.EnvVar.t)`, *default:* `nil`) - List of environment variables to set in the container.
  *   `image` (*type:* `String.t`, *default:* `nil`) - Docker image name.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the Sidecar.
  *   `readinessProbe` (*type:* `GoogleApi.CloudBuild.V2.Model.Probe.t`, *default:* `nil`) - Optional. Periodic probe of Sidecar service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes +optional
  *   `script` (*type:* `String.t`, *default:* `nil`) - The contents of an executable file to execute.
  *   `securityContext` (*type:* `GoogleApi.CloudBuild.V2.Model.SecurityContext.t`, *default:* `nil`) - Optional. Security options the container should be run with.
  *   `volumeMounts` (*type:* `list(GoogleApi.CloudBuild.V2.Model.VolumeMount.t)`, *default:* `nil`) - Pod volumes to mount into the container's filesystem.
  *   `workingDir` (*type:* `String.t`, *default:* `nil`) - Container's working directory.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :args => list(String.t()) | nil,
          :command => list(String.t()) | nil,
          :env => list(GoogleApi.CloudBuild.V2.Model.EnvVar.t()) | nil,
          :image => String.t() | nil,
          :name => String.t() | nil,
          :readinessProbe => GoogleApi.CloudBuild.V2.Model.Probe.t() | nil,
          :script => String.t() | nil,
          :securityContext => GoogleApi.CloudBuild.V2.Model.SecurityContext.t() | nil,
          :volumeMounts => list(GoogleApi.CloudBuild.V2.Model.VolumeMount.t()) | nil,
          :workingDir => String.t() | nil
        }

  field(:args, type: :list)
  field(:command, type: :list)
  field(:env, as: GoogleApi.CloudBuild.V2.Model.EnvVar, type: :list)
  field(:image)
  field(:name)
  field(:readinessProbe, as: GoogleApi.CloudBuild.V2.Model.Probe)
  field(:script)
  field(:securityContext, as: GoogleApi.CloudBuild.V2.Model.SecurityContext)
  field(:volumeMounts, as: GoogleApi.CloudBuild.V2.Model.VolumeMount, type: :list)
  field(:workingDir)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V2.Model.Sidecar do
  def decode(value, options) do
    GoogleApi.CloudBuild.V2.Model.Sidecar.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V2.Model.Sidecar do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
