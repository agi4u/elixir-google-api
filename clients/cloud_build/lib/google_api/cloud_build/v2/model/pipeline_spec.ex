# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V2.Model.PipelineSpec do
  @moduledoc """
  PipelineSpec defines the desired state of Pipeline.

  ## Attributes

  *   `finallyTasks` (*type:* `list(GoogleApi.CloudBuild.V2.Model.PipelineTask.t)`, *default:* `nil`) - List of Tasks that execute just before leaving the Pipeline i.e. either after all Tasks are finished executing successfully or after a failure which would result in ending the Pipeline.
  *   `generatedYaml` (*type:* `String.t`, *default:* `nil`) - Output only. auto-generated yaml that is output only for display purpose for workflows using pipeline_spec, used by UI/gcloud cli for Workflows.
  *   `params` (*type:* `list(GoogleApi.CloudBuild.V2.Model.ParamSpec.t)`, *default:* `nil`) - List of parameters.
  *   `results` (*type:* `list(GoogleApi.CloudBuild.V2.Model.PipelineResult.t)`, *default:* `nil`) - Optional. Output only. List of results written out by the pipeline's containers
  *   `tasks` (*type:* `list(GoogleApi.CloudBuild.V2.Model.PipelineTask.t)`, *default:* `nil`) - List of Tasks that execute when this Pipeline is run.
  *   `workspaces` (*type:* `list(GoogleApi.CloudBuild.V2.Model.PipelineWorkspaceDeclaration.t)`, *default:* `nil`) - Workspaces declares a set of named workspaces that are expected to be provided by a PipelineRun.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :finallyTasks => list(GoogleApi.CloudBuild.V2.Model.PipelineTask.t()) | nil,
          :generatedYaml => String.t() | nil,
          :params => list(GoogleApi.CloudBuild.V2.Model.ParamSpec.t()) | nil,
          :results => list(GoogleApi.CloudBuild.V2.Model.PipelineResult.t()) | nil,
          :tasks => list(GoogleApi.CloudBuild.V2.Model.PipelineTask.t()) | nil,
          :workspaces =>
            list(GoogleApi.CloudBuild.V2.Model.PipelineWorkspaceDeclaration.t()) | nil
        }

  field(:finallyTasks, as: GoogleApi.CloudBuild.V2.Model.PipelineTask, type: :list)
  field(:generatedYaml)
  field(:params, as: GoogleApi.CloudBuild.V2.Model.ParamSpec, type: :list)
  field(:results, as: GoogleApi.CloudBuild.V2.Model.PipelineResult, type: :list)
  field(:tasks, as: GoogleApi.CloudBuild.V2.Model.PipelineTask, type: :list)
  field(:workspaces, as: GoogleApi.CloudBuild.V2.Model.PipelineWorkspaceDeclaration, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V2.Model.PipelineSpec do
  def decode(value, options) do
    GoogleApi.CloudBuild.V2.Model.PipelineSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V2.Model.PipelineSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
