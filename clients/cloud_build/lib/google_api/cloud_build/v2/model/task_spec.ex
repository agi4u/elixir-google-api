# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V2.Model.TaskSpec do
  @moduledoc """
  TaskSpec contains the Spec to instantiate a TaskRun.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the task.
  *   `managedSidecars` (*type:* `list(String.t)`, *default:* `nil`) - Sidecars that run alongside the Taskâ€™s step containers that should be added to this Task.
  *   `params` (*type:* `list(GoogleApi.CloudBuild.V2.Model.ParamSpec.t)`, *default:* `nil`) - List of parameters.
  *   `results` (*type:* `list(GoogleApi.CloudBuild.V2.Model.TaskResult.t)`, *default:* `nil`) - Values that this Task can output.
  *   `sidecars` (*type:* `list(GoogleApi.CloudBuild.V2.Model.Sidecar.t)`, *default:* `nil`) - Sidecars that run alongside the Task's step containers.
  *   `stepTemplate` (*type:* `GoogleApi.CloudBuild.V2.Model.StepTemplate.t`, *default:* `nil`) - Optional. StepTemplate can be used as the basis for all step containers within the Task, so that the steps inherit settings on the base container.
  *   `steps` (*type:* `list(GoogleApi.CloudBuild.V2.Model.Step.t)`, *default:* `nil`) - Steps of the task.
  *   `volumes` (*type:* `list(GoogleApi.CloudBuild.V2.Model.VolumeSource.t)`, *default:* `nil`) - A collection of volumes that are available to mount into steps.
  *   `workspaces` (*type:* `list(GoogleApi.CloudBuild.V2.Model.WorkspaceDeclaration.t)`, *default:* `nil`) - The volumes that this Task requires.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :managedSidecars => list(String.t()) | nil,
          :params => list(GoogleApi.CloudBuild.V2.Model.ParamSpec.t()) | nil,
          :results => list(GoogleApi.CloudBuild.V2.Model.TaskResult.t()) | nil,
          :sidecars => list(GoogleApi.CloudBuild.V2.Model.Sidecar.t()) | nil,
          :stepTemplate => GoogleApi.CloudBuild.V2.Model.StepTemplate.t() | nil,
          :steps => list(GoogleApi.CloudBuild.V2.Model.Step.t()) | nil,
          :volumes => list(GoogleApi.CloudBuild.V2.Model.VolumeSource.t()) | nil,
          :workspaces => list(GoogleApi.CloudBuild.V2.Model.WorkspaceDeclaration.t()) | nil
        }

  field(:description)
  field(:managedSidecars, type: :list)
  field(:params, as: GoogleApi.CloudBuild.V2.Model.ParamSpec, type: :list)
  field(:results, as: GoogleApi.CloudBuild.V2.Model.TaskResult, type: :list)
  field(:sidecars, as: GoogleApi.CloudBuild.V2.Model.Sidecar, type: :list)
  field(:stepTemplate, as: GoogleApi.CloudBuild.V2.Model.StepTemplate)
  field(:steps, as: GoogleApi.CloudBuild.V2.Model.Step, type: :list)
  field(:volumes, as: GoogleApi.CloudBuild.V2.Model.VolumeSource, type: :list)
  field(:workspaces, as: GoogleApi.CloudBuild.V2.Model.WorkspaceDeclaration, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V2.Model.TaskSpec do
  def decode(value, options) do
    GoogleApi.CloudBuild.V2.Model.TaskSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V2.Model.TaskSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
