# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.GitLabConfig do
  @moduledoc """
  GitLabConfig represents the configuration for a GitLab integration.

  ## Attributes

  *   `connectedRepositories` (*type:* `list(GoogleApi.CloudBuild.V1.Model.GitLabRepositoryId.t)`, *default:* `nil`) - Connected GitLab.com or GitLabEnterprise repositories for this config.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when the config was created.
  *   `enterpriseConfig` (*type:* `GoogleApi.CloudBuild.V1.Model.GitLabEnterpriseConfig.t`, *default:* `nil`) - Optional. GitLabEnterprise config.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The resource name for the config.
  *   `secrets` (*type:* `GoogleApi.CloudBuild.V1.Model.GitLabSecrets.t`, *default:* `nil`) - Required. Secret Manager secrets needed by the config.
  *   `username` (*type:* `String.t`, *default:* `nil`) - Username of the GitLab.com or GitLab Enterprise account Cloud Build will use.
  *   `webhookKey` (*type:* `String.t`, *default:* `nil`) - Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectedRepositories =>
            list(GoogleApi.CloudBuild.V1.Model.GitLabRepositoryId.t()) | nil,
          :createTime => DateTime.t() | nil,
          :enterpriseConfig => GoogleApi.CloudBuild.V1.Model.GitLabEnterpriseConfig.t() | nil,
          :name => String.t() | nil,
          :secrets => GoogleApi.CloudBuild.V1.Model.GitLabSecrets.t() | nil,
          :username => String.t() | nil,
          :webhookKey => String.t() | nil
        }

  field(:connectedRepositories, as: GoogleApi.CloudBuild.V1.Model.GitLabRepositoryId, type: :list)
  field(:createTime, as: DateTime)
  field(:enterpriseConfig, as: GoogleApi.CloudBuild.V1.Model.GitLabEnterpriseConfig)
  field(:name)
  field(:secrets, as: GoogleApi.CloudBuild.V1.Model.GitLabSecrets)
  field(:username)
  field(:webhookKey)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.GitLabConfig do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.GitLabConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.GitLabConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
