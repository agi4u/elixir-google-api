# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.GitLabEventsConfig do
  @moduledoc """
  GitLabEventsConfig describes the configuration of a trigger that creates a build whenever a GitLab event is received.

  ## Attributes

  *   `gitlabConfig` (*type:* `GoogleApi.CloudBuild.V1.Model.GitLabConfig.t`, *default:* `nil`) - Output only. The GitLabConfig specified in the gitlab_config_resource field.
  *   `gitlabConfigResource` (*type:* `String.t`, *default:* `nil`) - The GitLab config resource that this trigger config maps to.
  *   `projectNamespace` (*type:* `String.t`, *default:* `nil`) - Namespace of the GitLab project.
  *   `pullRequest` (*type:* `GoogleApi.CloudBuild.V1.Model.PullRequestFilter.t`, *default:* `nil`) - Filter to match changes in pull requests.
  *   `push` (*type:* `GoogleApi.CloudBuild.V1.Model.PushFilter.t`, *default:* `nil`) - Filter to match changes in refs like branches, tags.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gitlabConfig => GoogleApi.CloudBuild.V1.Model.GitLabConfig.t() | nil,
          :gitlabConfigResource => String.t() | nil,
          :projectNamespace => String.t() | nil,
          :pullRequest => GoogleApi.CloudBuild.V1.Model.PullRequestFilter.t() | nil,
          :push => GoogleApi.CloudBuild.V1.Model.PushFilter.t() | nil
        }

  field(:gitlabConfig, as: GoogleApi.CloudBuild.V1.Model.GitLabConfig)
  field(:gitlabConfigResource)
  field(:projectNamespace)
  field(:pullRequest, as: GoogleApi.CloudBuild.V1.Model.PullRequestFilter)
  field(:push, as: GoogleApi.CloudBuild.V1.Model.PushFilter)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.GitLabEventsConfig do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.GitLabEventsConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.GitLabEventsConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
