# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1MutatePartnerPermissionsRequest do
  @moduledoc """
  Request for updating permission settings for a partner workload.

  ## Attributes

  *   `etag` (*type:* `String.t`, *default:* `nil`) - Optional. The etag of the workload. If this is provided, it must match the server's etag.
  *   `partnerPermissions` (*type:* `GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1WorkloadPartnerPermissions.t`, *default:* `nil`) - Required. The partner permissions to be updated.
  *   `updateMask` (*type:* `String.t`, *default:* `nil`) - Required. The list of fields to be updated. E.g. update_mask { paths: "partner_permissions.data_logs_viewer"}
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :etag => String.t() | nil,
          :partnerPermissions =>
            GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1WorkloadPartnerPermissions.t()
            | nil,
          :updateMask => String.t() | nil
        }

  field(:etag)

  field(:partnerPermissions,
    as:
      GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1WorkloadPartnerPermissions
  )

  field(:updateMask)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1MutatePartnerPermissionsRequest do
  def decode(value, options) do
    GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1MutatePartnerPermissionsRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.AssuredWorkloads.V1.Model.GoogleCloudAssuredworkloadsV1MutatePartnerPermissionsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
