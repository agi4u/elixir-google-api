# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Model.TableFieldSchema do
  @moduledoc """
  A field in TableSchema.

  ## Attributes

  *   `field` (*type:* `String.t`, *default:* `nil`) - The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.
  *   `fields` (*type:* `list(GoogleApi.CloudAsset.V1.Model.TableFieldSchema.t)`, *default:* `nil`) - Describes the nested schema fields if the type property is set to RECORD.
  *   `mode` (*type:* `String.t`, *default:* `nil`) - The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The field data type. Possible values include * STRING * BYTES * INTEGER * FLOAT * BOOLEAN * TIMESTAMP * DATE * TIME * DATETIME * GEOGRAPHY, * NUMERIC, * BIGNUMERIC, * RECORD (where RECORD indicates that the field contains a nested schema).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :field => String.t() | nil,
          :fields => list(GoogleApi.CloudAsset.V1.Model.TableFieldSchema.t()) | nil,
          :mode => String.t() | nil,
          :type => String.t() | nil
        }

  field(:field)
  field(:fields, as: GoogleApi.CloudAsset.V1.Model.TableFieldSchema, type: :list)
  field(:mode)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.CloudAsset.V1.Model.TableFieldSchema do
  def decode(value, options) do
    GoogleApi.CloudAsset.V1.Model.TableFieldSchema.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudAsset.V1.Model.TableFieldSchema do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
