# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Model.AttachedResource do
  @moduledoc """
  Attached resource representation, which is defined by the corresponding service provider. It represents an attached resource's payload.

  ## Attributes

  *   `assetType` (*type:* `String.t`, *default:* `nil`) - The type of this attached resource. Example: `osconfig.googleapis.com/Inventory` You can find the supported attached asset types of each resource in this table: `https://cloud.google.com/asset-inventory/docs/supported-asset-types`
  *   `versionedResources` (*type:* `list(GoogleApi.CloudAsset.V1.Model.VersionedResource.t)`, *default:* `nil`) - Versioned resource representations of this attached resource. This is repeated because there could be multiple versions of the attached resource representations during version migration.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :assetType => String.t() | nil,
          :versionedResources => list(GoogleApi.CloudAsset.V1.Model.VersionedResource.t()) | nil
        }

  field(:assetType)
  field(:versionedResources, as: GoogleApi.CloudAsset.V1.Model.VersionedResource, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudAsset.V1.Model.AttachedResource do
  def decode(value, options) do
    GoogleApi.CloudAsset.V1.Model.AttachedResource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudAsset.V1.Model.AttachedResource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
