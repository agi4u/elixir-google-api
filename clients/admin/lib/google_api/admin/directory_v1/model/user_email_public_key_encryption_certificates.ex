# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Admin.Directory_v1.Model.UserEmailPublicKeyEncryptionCertificates do
  @moduledoc """
  Public Key Encryption Certificates. Current limit: 1 per email address, and 5 per user.

  ## Attributes

  *   `certificate` (*type:* `String.t`, *default:* `nil`) - X.509 encryption certificate in `PEM` format. Must only be an end-entity (leaf) certificate.
  *   `is_default` (*type:* `boolean()`, *default:* `nil`) - Whether this is the default certificate for the given email address.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Denotes the certificate's state in its lifecycle. Possible values are `not_yet_validated`, `valid`, `invalid`, `expired`, and `revoked`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificate => String.t() | nil,
          :is_default => boolean() | nil,
          :state => String.t() | nil
        }

  field(:certificate)
  field(:is_default)
  field(:state)
end

defimpl Poison.Decoder,
  for: GoogleApi.Admin.Directory_v1.Model.UserEmailPublicKeyEncryptionCertificates do
  def decode(value, options) do
    GoogleApi.Admin.Directory_v1.Model.UserEmailPublicKeyEncryptionCertificates.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Admin.Directory_v1.Model.UserEmailPublicKeyEncryptionCertificates do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
