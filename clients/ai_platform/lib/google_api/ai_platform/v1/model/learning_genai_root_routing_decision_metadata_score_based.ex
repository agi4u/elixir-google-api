# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased do
  @moduledoc """
  If we are routing using scored based configuration, then the metadata about that is available in this proto.

  ## Attributes

  *   `matchedRule` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScoreBasedRoutingConfigRule.t`, *default:* `nil`) - The rule that was matched.
  *   `score` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore.t`, *default:* `nil`) - The score that was generated by the router i.e. the model.
  *   `usedDefaultFallback` (*type:* `boolean()`, *default:* `nil`) - No rules were matched & therefore used the default fallback.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :matchedRule =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScoreBasedRoutingConfigRule.t() | nil,
          :score => GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore.t() | nil,
          :usedDefaultFallback => boolean() | nil
        }

  field(:matchedRule,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScoreBasedRoutingConfigRule
  )

  field(:score, as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore)
  field(:usedDefaultFallback)
end

defimpl Poison.Decoder,
  for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
