# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore do
  @moduledoc """


  ## Attributes

  *   `calculationType` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootCalculationType.t`, *default:* `nil`) - 
  *   `internalMetadata` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootInternalMetadata.t`, *default:* `nil`) - The internal_metadata is intended to be used by internal processors and will be cleared before returns.
  *   `thresholdType` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootThresholdType.t`, *default:* `nil`) - 
  *   `tokensAndLogprobPerDecodingStep` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootTokensAndLogProbPerDecodingStep.t`, *default:* `nil`) - Top candidate tokens and log probabilities at each decoding step.
  *   `value` (*type:* `float()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :calculationType =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootCalculationType.t() | nil,
          :internalMetadata =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootInternalMetadata.t() | nil,
          :thresholdType =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootThresholdType.t() | nil,
          :tokensAndLogprobPerDecodingStep =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootTokensAndLogProbPerDecodingStep.t()
            | nil,
          :value => float() | nil
        }

  field(:calculationType, as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootCalculationType)
  field(:internalMetadata, as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootInternalMetadata)
  field(:thresholdType, as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootThresholdType)

  field(:tokensAndLogprobPerDecodingStep,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootTokensAndLogProbPerDecodingStep
  )

  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootScore do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
