# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.LearningGenaiRootClassifierState do
  @moduledoc """
  DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } }

  ## Attributes

  *   `dataProviderOutput` (*type:* `list(GoogleApi.AIPlatform.V1.Model.LearningGenaiRootDataProviderOutput.t)`, *default:* `nil`) - 
  *   `metricOutput` (*type:* `list(GoogleApi.AIPlatform.V1.Model.LearningGenaiRootMetricOutput.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataProviderOutput =>
            list(GoogleApi.AIPlatform.V1.Model.LearningGenaiRootDataProviderOutput.t()) | nil,
          :metricOutput =>
            list(GoogleApi.AIPlatform.V1.Model.LearningGenaiRootMetricOutput.t()) | nil
        }

  field(:dataProviderOutput,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootDataProviderOutput,
    type: :list
  )

  field(:metricOutput,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootMetricOutput,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootClassifierState do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.LearningGenaiRootClassifierState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootClassifierState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
