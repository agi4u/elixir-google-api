# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadata do
  @moduledoc """


  ## Attributes

  *   `confidence` (*type:* `String.t`, *default:* `nil`) - Filter confidence.
  *   `debugInfo` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadataFilterDebugInfo.t`, *default:* `nil`) - Debug info for the message.
  *   `fallback` (*type:* `String.t`, *default:* `nil`) - A fallback message chosen by the applied filter.
  *   `info` (*type:* `String.t`, *default:* `nil`) - Additional info for the filter.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the filter that triggered.
  *   `reason` (*type:* `String.t`, *default:* `nil`) - Filter reason.
  *   `text` (*type:* `String.t`, *default:* `nil`) - The input query or generated response that is getting filtered.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidence => String.t() | nil,
          :debugInfo =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadataFilterDebugInfo.t() | nil,
          :fallback => String.t() | nil,
          :info => String.t() | nil,
          :name => String.t() | nil,
          :reason => String.t() | nil,
          :text => String.t() | nil
        }

  field(:confidence)

  field(:debugInfo,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadataFilterDebugInfo
  )

  field(:fallback)
  field(:info)
  field(:name)
  field(:reason)
  field(:text)
end

defimpl Poison.Decoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadata do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootFilterMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
