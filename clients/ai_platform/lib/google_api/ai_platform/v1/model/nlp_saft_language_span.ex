# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.NlpSaftLanguageSpan do
  @moduledoc """


  ## Attributes

  *   `end` (*type:* `integer()`, *default:* `nil`) - 
  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - A BCP 47 language code for this span.
  *   `locales` (*type:* `GoogleApi.AIPlatform.V1.Model.NlpSaftLangIdLocalesResult.t`, *default:* `nil`) - Optional field containing any information that was predicted about the specific locale(s) of the span.
  *   `probability` (*type:* `number()`, *default:* `nil`) - A probability associated with this prediction.
  *   `start` (*type:* `integer()`, *default:* `nil`) - Start and end byte offsets, inclusive, within the given input string. A value of -1 implies that this field is not set. Both fields must either be set with a nonnegative value or both are unset. If both are unset then this LanguageSpan applies to the entire input.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :end => integer() | nil,
          :languageCode => String.t() | nil,
          :locales => GoogleApi.AIPlatform.V1.Model.NlpSaftLangIdLocalesResult.t() | nil,
          :probability => number() | nil,
          :start => integer() | nil
        }

  field(:end)
  field(:languageCode)
  field(:locales, as: GoogleApi.AIPlatform.V1.Model.NlpSaftLangIdLocalesResult)
  field(:probability)
  field(:start)
end

defimpl Poison.Decoder, for: GoogleApi.AIPlatform.V1.Model.NlpSaftLanguageSpan do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.NlpSaftLanguageSpan.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AIPlatform.V1.Model.NlpSaftLanguageSpan do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
