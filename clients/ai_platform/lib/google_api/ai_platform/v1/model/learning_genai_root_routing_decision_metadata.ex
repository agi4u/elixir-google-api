# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadata do
  @moduledoc """
  Debug metadata about the routing decision.

  ## Attributes

  *   `scoreBasedRoutingMetadata` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased.t`, *default:* `nil`) - 
  *   `tokenLengthBasedRoutingMetadata` (*type:* `GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :scoreBasedRoutingMetadata =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased.t()
            | nil,
          :tokenLengthBasedRoutingMetadata =>
            GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.t()
            | nil
        }

  field(:scoreBasedRoutingMetadata,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataScoreBased
  )

  field(:tokenLengthBasedRoutingMetadata,
    as: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadata do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AIPlatform.V1.Model.LearningGenaiRootRoutingDecisionMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
