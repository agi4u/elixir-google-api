# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Monitoring.V3.Model.NotificationChannelStrategy do
  @moduledoc """
  Control over how the notification channels in notification_channels are notified when this alert fires, on a per-channel basis.

  ## Attributes

  *   `notificationChannelNames` (*type:* `list(String.t)`, *default:* `nil`) - The full REST resource name for the notification channels that these settings apply to. Each of these correspond to the name field in one of the NotificationChannel objects referenced in the notification_channels field of this AlertPolicy. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID] 
  *   `renotifyInterval` (*type:* `String.t`, *default:* `nil`) - The frequency at which to send reminder notifications for open incidents.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :notificationChannelNames => list(String.t()) | nil,
          :renotifyInterval => String.t() | nil
        }

  field(:notificationChannelNames, type: :list)
  field(:renotifyInterval)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.NotificationChannelStrategy do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.NotificationChannelStrategy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.NotificationChannelStrategy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
