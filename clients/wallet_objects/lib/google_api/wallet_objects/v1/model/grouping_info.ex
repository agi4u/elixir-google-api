# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WalletObjects.V1.Model.GroupingInfo do
  @moduledoc """


  ## Attributes

  *   `groupingId` (*type:* `String.t`, *default:* `nil`) - Optional grouping ID for grouping the passes with the same ID visually together. Grouping with different types of passes is allowed.
  *   `sortIndex` (*type:* `integer()`, *default:* `nil`) - Optional index for sorting the passes when they are grouped with other passes. Passes with lower sort index are shown before passes with higher sort index. If unspecified, the value is assumed to be INT_MAX. For two passes with the same sort index, the sorting behavior is undefined.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :groupingId => String.t() | nil,
          :sortIndex => integer() | nil
        }

  field(:groupingId)
  field(:sortIndex)
end

defimpl Poison.Decoder, for: GoogleApi.WalletObjects.V1.Model.GroupingInfo do
  def decode(value, options) do
    GoogleApi.WalletObjects.V1.Model.GroupingInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WalletObjects.V1.Model.GroupingInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
