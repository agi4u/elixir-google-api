# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WalletObjects.V1.Model.DiscoverableProgramMerchantSignupInfo do
  @moduledoc """
  Information about the merchant hosted signup flow for a program.

  ## Attributes

  *   `signupSharedDatas` (*type:* `list(String.t)`, *default:* `nil`) -  User data that is sent in a POST request to the signup website URL. This information is encoded and then shared so that the merchant's website can prefill fields used to enroll the user for the discoverable program.
  *   `signupWebsite` (*type:* `GoogleApi.WalletObjects.V1.Model.Uri.t`, *default:* `nil`) - The URL to direct the user to for the merchant's signup site.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :signupSharedDatas => list(String.t()) | nil,
          :signupWebsite => GoogleApi.WalletObjects.V1.Model.Uri.t() | nil
        }

  field(:signupSharedDatas, type: :list)
  field(:signupWebsite, as: GoogleApi.WalletObjects.V1.Model.Uri)
end

defimpl Poison.Decoder,
  for: GoogleApi.WalletObjects.V1.Model.DiscoverableProgramMerchantSignupInfo do
  def decode(value, options) do
    GoogleApi.WalletObjects.V1.Model.DiscoverableProgramMerchantSignupInfo.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.WalletObjects.V1.Model.DiscoverableProgramMerchantSignupInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
