# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.Scope do
  @moduledoc """
  Scope represents a Scope in a Fleet.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. When the scope was created.
  *   `deleteTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. When the scope was deleted.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Labels for this Scope.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`
  *   `namespaceLabels` (*type:* `map()`, *default:* `nil`) - Optional. Scope-level cluster namespace labels. For the member clusters bound to the Scope, these labels are applied to each namespace under the Scope. Scope-level labels take precedence over Namespace-level labels (`namespace_labels` in the Fleet Namespace resource) if they share a key. Keys and values must be Kubernetes-conformant.
  *   `state` (*type:* `GoogleApi.GKEHub.V1.Model.ScopeLifecycleState.t`, *default:* `nil`) - Output only. State of the scope resource.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. When the scope was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :deleteTime => DateTime.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :namespaceLabels => map() | nil,
          :state => GoogleApi.GKEHub.V1.Model.ScopeLifecycleState.t() | nil,
          :uid => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:deleteTime, as: DateTime)
  field(:labels, type: :map)
  field(:name)
  field(:namespaceLabels, type: :map)
  field(:state, as: GoogleApi.GKEHub.V1.Model.ScopeLifecycleState)
  field(:uid)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.Scope do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.Scope.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.Scope do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
