# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipState do
  @moduledoc """
  **Anthos Identity Service**: State for a single Membership.

  ## Attributes

  *   `failureReason` (*type:* `String.t`, *default:* `nil`) - The reason of the failure.
  *   `installedVersion` (*type:* `String.t`, *default:* `nil`) - Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
  *   `memberConfig` (*type:* `GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec.t`, *default:* `nil`) - Last reconciled membership configuration
  *   `state` (*type:* `String.t`, *default:* `nil`) - Deployment state on this member
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failureReason => String.t() | nil,
          :installedVersion => String.t() | nil,
          :memberConfig => GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec.t() | nil,
          :state => String.t() | nil
        }

  field(:failureReason)
  field(:installedVersion)
  field(:memberConfig, as: GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipState do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
