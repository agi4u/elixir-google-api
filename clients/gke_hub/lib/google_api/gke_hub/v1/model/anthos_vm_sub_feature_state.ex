# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.AnthosVMSubFeatureState do
  @moduledoc """
  AnthosVMSubFeatureState contains the state of the AnthosVM subfeatures.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Description represents human readable description of the subfeature state. If the deployment failed, this should also contain the reason for the failure.
  *   `installationState` (*type:* `String.t`, *default:* `nil`) - InstallationState represents the state of installation of the subfeature in the cluster.
  *   `migrateState` (*type:* `GoogleApi.GKEHub.V1.Model.MigrateState.t`, *default:* `nil`) - MigrateState represents the state of the Migrate subfeature.
  *   `serviceMeshState` (*type:* `GoogleApi.GKEHub.V1.Model.ServiceMeshState.t`, *default:* `nil`) - ServiceMeshState represents the state of the Service Mesh subfeature.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :installationState => String.t() | nil,
          :migrateState => GoogleApi.GKEHub.V1.Model.MigrateState.t() | nil,
          :serviceMeshState => GoogleApi.GKEHub.V1.Model.ServiceMeshState.t() | nil
        }

  field(:description)
  field(:installationState)
  field(:migrateState, as: GoogleApi.GKEHub.V1.Model.MigrateState)
  field(:serviceMeshState, as: GoogleApi.GKEHub.V1.Model.ServiceMeshState)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.AnthosVMSubFeatureState do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.AnthosVMSubFeatureState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.AnthosVMSubFeatureState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
