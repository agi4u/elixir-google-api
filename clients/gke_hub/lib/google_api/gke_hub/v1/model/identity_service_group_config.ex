# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.IdentityServiceGroupConfig do
  @moduledoc """
  Contains the properties for locating and authenticating groups in the directory.

  ## Attributes

  *   `baseDn` (*type:* `String.t`, *default:* `nil`) - Required. The location of the subtree in the LDAP directory to search for group entries.
  *   `filter` (*type:* `String.t`, *default:* `nil`) - Optional. Optional filter to be used when searching for groups a user belongs to. This can be used to explicitly match only certain groups in order to reduce the amount of groups returned for each user. This defaults to "(objectClass=Group)".
  *   `idAttribute` (*type:* `String.t`, *default:* `nil`) - Optional. The identifying name of each group a user belongs to. For example, if this is set to "distinguishedName" then RBACs and other group expectations should be written as full DNs. This defaults to "distinguishedName".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :baseDn => String.t() | nil,
          :filter => String.t() | nil,
          :idAttribute => String.t() | nil
        }

  field(:baseDn)
  field(:filter)
  field(:idAttribute)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.IdentityServiceGroupConfig do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.IdentityServiceGroupConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.IdentityServiceGroupConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
