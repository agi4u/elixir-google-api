# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequest do
  @moduledoc """
  Request message for InventorySourceService.EditInventorySourceReadWriteAccessors.

  ## Attributes

  *   `advertisersUpdate` (*type:* `GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate.t`, *default:* `nil`) - The advertisers to add or remove from the list of advertisers that have read/write access to the inventory source. This change will remove an existing partner read/write accessor.
  *   `assignPartner` (*type:* `boolean()`, *default:* `nil`) - Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors.
  *   `partnerId` (*type:* `String.t`, *default:* `nil`) - Required. The partner context by which the accessors change is being made.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :advertisersUpdate =>
            GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate.t()
            | nil,
          :assignPartner => boolean() | nil,
          :partnerId => String.t() | nil
        }

  field(:advertisersUpdate,
    as:
      GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate
  )

  field(:assignPartner)
  field(:partnerId)
end

defimpl Poison.Decoder,
  for: GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequest do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DisplayVideo.V3.Model.EditInventorySourceReadWriteAccessorsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
