# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.ProductFeedData do
  @moduledoc """
  The details of product feed.

  ## Attributes

  *   `isFeedDisabled` (*type:* `boolean()`, *default:* `nil`) - Whether the product feed has opted-out of showing products.
  *   `productMatchDimensions` (*type:* `list(GoogleApi.DisplayVideo.V3.Model.ProductMatchDimension.t)`, *default:* `nil`) - A list of dimensions used to match products.
  *   `productMatchType` (*type:* `String.t`, *default:* `nil`) - How products are selected by the product feed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isFeedDisabled => boolean() | nil,
          :productMatchDimensions =>
            list(GoogleApi.DisplayVideo.V3.Model.ProductMatchDimension.t()) | nil,
          :productMatchType => String.t() | nil
        }

  field(:isFeedDisabled)

  field(:productMatchDimensions,
    as: GoogleApi.DisplayVideo.V3.Model.ProductMatchDimension,
    type: :list
  )

  field(:productMatchType)
end

defimpl Poison.Decoder, for: GoogleApi.DisplayVideo.V3.Model.ProductFeedData do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.ProductFeedData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DisplayVideo.V3.Model.ProductFeedData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
