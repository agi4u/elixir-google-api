# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.AudioAd do
  @moduledoc """
  Details for an audio ad.

  ## Attributes

  *   `displayUrl` (*type:* `String.t`, *default:* `nil`) - The webpage address that appears with the ad.
  *   `finalUrl` (*type:* `String.t`, *default:* `nil`) - The URL address of the webpage that people reach after they click the ad.
  *   `trackingUrl` (*type:* `String.t`, *default:* `nil`) - The URL address loaded in the background for tracking purposes.
  *   `video` (*type:* `GoogleApi.DisplayVideo.V3.Model.YoutubeVideoDetails.t`, *default:* `nil`) - The YouTube video of the ad.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayUrl => String.t() | nil,
          :finalUrl => String.t() | nil,
          :trackingUrl => String.t() | nil,
          :video => GoogleApi.DisplayVideo.V3.Model.YoutubeVideoDetails.t() | nil
        }

  field(:displayUrl)
  field(:finalUrl)
  field(:trackingUrl)
  field(:video, as: GoogleApi.DisplayVideo.V3.Model.YoutubeVideoDetails)
end

defimpl Poison.Decoder, for: GoogleApi.DisplayVideo.V3.Model.AudioAd do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.AudioAd.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DisplayVideo.V3.Model.AudioAd do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
