# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.MobileApp do
  @moduledoc """
  A mobile app promoted by a mobile app install line item.

  ## Attributes

  *   `appId` (*type:* `String.t`, *default:* `nil`) - Required. The ID of the app provided by the platform store. Android apps are identified by the bundle ID used by Android's Play store, such as `com.google.android.gm`. iOS apps are identified by a nine-digit app ID used by Apple's App store, such as `422689480`.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Output only. The app name.
  *   `platform` (*type:* `String.t`, *default:* `nil`) - Output only. The app platform.
  *   `publisher` (*type:* `String.t`, *default:* `nil`) - Output only. The app publisher.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appId => String.t() | nil,
          :displayName => String.t() | nil,
          :platform => String.t() | nil,
          :publisher => String.t() | nil
        }

  field(:appId)
  field(:displayName)
  field(:platform)
  field(:publisher)
end

defimpl Poison.Decoder, for: GoogleApi.DisplayVideo.V3.Model.MobileApp do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.MobileApp.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DisplayVideo.V3.Model.MobileApp do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
