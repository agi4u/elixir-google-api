# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Docs.V1.Model.TableCell do
  @moduledoc """
  The contents and style of a cell in a Table.

  ## Attributes

  *   `content` (*type:* `list(GoogleApi.Docs.V1.Model.StructuralElement.t)`, *default:* `nil`) - The content of the cell.
  *   `endIndex` (*type:* `integer()`, *default:* `nil`) - The zero-based end index of this cell, exclusive, in UTF-16 code units.
  *   `startIndex` (*type:* `integer()`, *default:* `nil`) - The zero-based start index of this cell, in UTF-16 code units.
  *   `suggestedDeletionIds` (*type:* `list(String.t)`, *default:* `nil`) - The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
  *   `suggestedInsertionIds` (*type:* `list(String.t)`, *default:* `nil`) - The suggested insertion IDs. A TableCell may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
  *   `suggestedTableCellStyleChanges` (*type:* `%{optional(String.t) => GoogleApi.Docs.V1.Model.SuggestedTableCellStyle.t}`, *default:* `nil`) - The suggested changes to the table cell style, keyed by suggestion ID.
  *   `tableCellStyle` (*type:* `GoogleApi.Docs.V1.Model.TableCellStyle.t`, *default:* `nil`) - The style of the cell.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :content => list(GoogleApi.Docs.V1.Model.StructuralElement.t()) | nil,
          :endIndex => integer() | nil,
          :startIndex => integer() | nil,
          :suggestedDeletionIds => list(String.t()) | nil,
          :suggestedInsertionIds => list(String.t()) | nil,
          :suggestedTableCellStyleChanges =>
            %{optional(String.t()) => GoogleApi.Docs.V1.Model.SuggestedTableCellStyle.t()} | nil,
          :tableCellStyle => GoogleApi.Docs.V1.Model.TableCellStyle.t() | nil
        }

  field(:content, as: GoogleApi.Docs.V1.Model.StructuralElement, type: :list)
  field(:endIndex)
  field(:startIndex)
  field(:suggestedDeletionIds, type: :list)
  field(:suggestedInsertionIds, type: :list)

  field(:suggestedTableCellStyleChanges,
    as: GoogleApi.Docs.V1.Model.SuggestedTableCellStyle,
    type: :map
  )

  field(:tableCellStyle, as: GoogleApi.Docs.V1.Model.TableCellStyle)
end

defimpl Poison.Decoder, for: GoogleApi.Docs.V1.Model.TableCell do
  def decode(value, options) do
    GoogleApi.Docs.V1.Model.TableCell.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Docs.V1.Model.TableCell do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
