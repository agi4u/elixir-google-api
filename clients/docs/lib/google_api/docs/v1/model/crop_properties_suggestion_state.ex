# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Docs.V1.Model.CropPropertiesSuggestionState do
  @moduledoc """
  A mask that indicates which of the fields on the base CropProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.

  ## Attributes

  *   `angleSuggested` (*type:* `boolean()`, *default:* `nil`) - Indicates if there was a suggested change to angle.
  *   `offsetBottomSuggested` (*type:* `boolean()`, *default:* `nil`) - Indicates if there was a suggested change to offset_bottom.
  *   `offsetLeftSuggested` (*type:* `boolean()`, *default:* `nil`) - Indicates if there was a suggested change to offset_left.
  *   `offsetRightSuggested` (*type:* `boolean()`, *default:* `nil`) - Indicates if there was a suggested change to offset_right.
  *   `offsetTopSuggested` (*type:* `boolean()`, *default:* `nil`) - Indicates if there was a suggested change to offset_top.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :angleSuggested => boolean() | nil,
          :offsetBottomSuggested => boolean() | nil,
          :offsetLeftSuggested => boolean() | nil,
          :offsetRightSuggested => boolean() | nil,
          :offsetTopSuggested => boolean() | nil
        }

  field(:angleSuggested)
  field(:offsetBottomSuggested)
  field(:offsetLeftSuggested)
  field(:offsetRightSuggested)
  field(:offsetTopSuggested)
end

defimpl Poison.Decoder, for: GoogleApi.Docs.V1.Model.CropPropertiesSuggestionState do
  def decode(value, options) do
    GoogleApi.Docs.V1.Model.CropPropertiesSuggestionState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Docs.V1.Model.CropPropertiesSuggestionState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
