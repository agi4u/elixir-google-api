# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PaymentsResellerSubscription.V1.Model.GoogleCloudPaymentsResellerSubscriptionV1GoogleOnePayload do
  @moduledoc """
  Payload specific to Google One products.

  ## Attributes

  *   `campaigns` (*type:* `list(String.t)`, *default:* `nil`) - Campaign attributed to sales of this subscription.
  *   `offering` (*type:* `String.t`, *default:* `nil`) - The type of offering the subscription was sold by the partner. e.g. VAS.
  *   `salesChannel` (*type:* `String.t`, *default:* `nil`) - The type of sales channel through which the subscription was sold.
  *   `storeId` (*type:* `String.t`, *default:* `nil`) - The identifier for the partner store where the subscription was sold.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :campaigns => list(String.t()) | nil,
          :offering => String.t() | nil,
          :salesChannel => String.t() | nil,
          :storeId => String.t() | nil
        }

  field(:campaigns, type: :list)
  field(:offering)
  field(:salesChannel)
  field(:storeId)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.PaymentsResellerSubscription.V1.Model.GoogleCloudPaymentsResellerSubscriptionV1GoogleOnePayload do
  def decode(value, options) do
    GoogleApi.PaymentsResellerSubscription.V1.Model.GoogleCloudPaymentsResellerSubscriptionV1GoogleOnePayload.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.PaymentsResellerSubscription.V1.Model.GoogleCloudPaymentsResellerSubscriptionV1GoogleOnePayload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
