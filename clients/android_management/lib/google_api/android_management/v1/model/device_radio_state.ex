# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidManagement.V1.Model.DeviceRadioState do
  @moduledoc """
  Controls for device radio settings.

  ## Attributes

  *   `airplaneModeState` (*type:* `String.t`, *default:* `nil`) - Controls whether airplane mode can be toggled by the user or not.
  *   `cellularTwoGState` (*type:* `String.t`, *default:* `nil`) - Controls whether cellular 2G setting can be toggled by the user or not.
  *   `minimumWifiSecurityLevel` (*type:* `String.t`, *default:* `nil`) - The minimum required security level of Wi-Fi networks that the device can connect to.
  *   `ultraWidebandState` (*type:* `String.t`, *default:* `nil`) - Controls the state of the ultra wideband setting and whether the user can toggle it on or off.
  *   `wifiState` (*type:* `String.t`, *default:* `nil`) - Controls current state of Wi-Fi and if user can change its state.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :airplaneModeState => String.t() | nil,
          :cellularTwoGState => String.t() | nil,
          :minimumWifiSecurityLevel => String.t() | nil,
          :ultraWidebandState => String.t() | nil,
          :wifiState => String.t() | nil
        }

  field(:airplaneModeState)
  field(:cellularTwoGState)
  field(:minimumWifiSecurityLevel)
  field(:ultraWidebandState)
  field(:wifiState)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.DeviceRadioState do
  def decode(value, options) do
    GoogleApi.AndroidManagement.V1.Model.DeviceRadioState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.DeviceRadioState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
