# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata do
  @moduledoc """
  GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an OrgPolicyViolationsPreview generations operation.

  ## Attributes

  *   `requestTime` (*type:* `DateTime.t`, *default:* `nil`) - Time when the request was received.
  *   `resourcesFound` (*type:* `integer()`, *default:* `nil`) - Total number of resources that need scanning. Should equal resource_scanned + resources_pending
  *   `resourcesPending` (*type:* `integer()`, *default:* `nil`) - Number of resources still to scan.
  *   `resourcesScanned` (*type:* `integer()`, *default:* `nil`) - Number of resources already scanned.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Time when the request started processing, i.e. when the state was set to RUNNING.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The current state of the operation.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :requestTime => DateTime.t() | nil,
          :resourcesFound => integer() | nil,
          :resourcesPending => integer() | nil,
          :resourcesScanned => integer() | nil,
          :startTime => DateTime.t() | nil,
          :state => String.t() | nil
        }

  field(:requestTime, as: DateTime)
  field(:resourcesFound)
  field(:resourcesPending)
  field(:resourcesScanned)
  field(:startTime, as: DateTime)
  field(:state)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata do
  def decode(value, options) do
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
