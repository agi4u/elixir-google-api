# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview do
  @moduledoc """
  OrgPolicyViolationsPreview is a resource providing a preview of the violations that will exist if an OrgPolicy change is made. The list of violations are modeled as child resources and retrieved via a ListOrgPolicyViolations API call. There are potentially more OrgPolicyViolations than could fit in an embedded field. Thus, the use of a child resource instead of a field.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when this `OrgPolicyViolationsPreview` was created.
  *   `customConstraints` (*type:* `list(String.t)`, *default:* `nil`) - Output only. The names of the constraints against which all `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains `PolicyOverlay` then it contains the name of the configured custom constraint, applicable to the specified policies. Otherwise it contains the name of the constraint specified in `CustomConstraintOverlay`. Format: `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of the `OrgPolicyViolationsPreview`. It has the following format: `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example: `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
  *   `overlay` (*type:* `GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay.t`, *default:* `nil`) - Required. The proposed changes we are previewing violations for.
  *   `resourceCounts` (*type:* `GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.t`, *default:* `nil`) - Output only. A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of the `OrgPolicyViolationsPreview`.
  *   `violationsCount` (*type:* `integer()`, *default:* `nil`) - Output only. The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple constraints.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :customConstraints => list(String.t()) | nil,
          :name => String.t() | nil,
          :overlay =>
            GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay.t()
            | nil,
          :resourceCounts =>
            GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.t()
            | nil,
          :state => String.t() | nil,
          :violationsCount => integer() | nil
        }

  field(:createTime, as: DateTime)
  field(:customConstraints, type: :list)
  field(:name)

  field(:overlay,
    as: GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
  )

  field(:resourceCounts,
    as:
      GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
  )

  field(:state)
  field(:violationsCount)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview do
  def decode(value, options) do
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
