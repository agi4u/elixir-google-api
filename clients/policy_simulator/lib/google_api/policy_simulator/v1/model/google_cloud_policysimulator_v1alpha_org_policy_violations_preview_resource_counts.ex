# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts do
  @moduledoc """
  A summary of the state of all resources scanned for compliance with the changed OrgPolicy.

  ## Attributes

  *   `compliant` (*type:* `integer()`, *default:* `nil`) - Output only. Number of scanned resources with zero violations.
  *   `errors` (*type:* `integer()`, *default:* `nil`) - Output only. Number of resources that returned an error when scanned.
  *   `noncompliant` (*type:* `integer()`, *default:* `nil`) - Output only. Number of scanned resources with at least one violation.
  *   `scanned` (*type:* `integer()`, *default:* `nil`) - Output only. Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error
  *   `unenforced` (*type:* `integer()`, *default:* `nil`) - Output only. Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :compliant => integer() | nil,
          :errors => integer() | nil,
          :noncompliant => integer() | nil,
          :scanned => integer() | nil,
          :unenforced => integer() | nil
        }

  field(:compliant)
  field(:errors)
  field(:noncompliant)
  field(:scanned)
  field(:unenforced)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts do
  def decode(value, options) do
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
