# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkServices.V1.Model.ServiceLbPolicyAutoCapacityDrain do
  @moduledoc """
  Option to specify if an unhealthy IG/NEG should be considered for global load balancing and traffic routing.

  ## Attributes

  *   `enable` (*type:* `boolean()`, *default:* `nil`) - Optional. If set to 'True', an unhealthy IG/NEG will be set as drained. - An IG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the IG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :enable => boolean() | nil
        }

  field(:enable)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkServices.V1.Model.ServiceLbPolicyAutoCapacityDrain do
  def decode(value, options) do
    GoogleApi.NetworkServices.V1.Model.ServiceLbPolicyAutoCapacityDrain.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkServices.V1.Model.ServiceLbPolicyAutoCapacityDrain do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
