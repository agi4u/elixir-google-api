# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkServices.V1.Model.GrpcRouteMethodMatch do
  @moduledoc """
  Specifies a match against a method.

  ## Attributes

  *   `caseSensitive` (*type:* `boolean()`, *default:* `nil`) - Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.
  *   `grpcMethod` (*type:* `String.t`, *default:* `nil`) - Required. Name of the method to match against. If unspecified, will match all methods.
  *   `grpcService` (*type:* `String.t`, *default:* `nil`) - Required. Name of the service to match against. If unspecified, will match all services.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :caseSensitive => boolean() | nil,
          :grpcMethod => String.t() | nil,
          :grpcService => String.t() | nil,
          :type => String.t() | nil
        }

  field(:caseSensitive)
  field(:grpcMethod)
  field(:grpcService)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkServices.V1.Model.GrpcRouteMethodMatch do
  def decode(value, options) do
    GoogleApi.NetworkServices.V1.Model.GrpcRouteMethodMatch.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkServices.V1.Model.GrpcRouteMethodMatch do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
