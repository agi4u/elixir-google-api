# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkServices.V1.Model.HttpRouteQueryParameterMatch do
  @moduledoc """
  Specifications to match a query parameter in the request.

  ## Attributes

  *   `exactMatch` (*type:* `String.t`, *default:* `nil`) - The value of the query parameter must exactly match the contents of exact_match. Only one of exact_match, regex_match, or present_match must be set.
  *   `presentMatch` (*type:* `boolean()`, *default:* `nil`) - Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not. Only one of exact_match, regex_match, or present_match must be set.
  *   `queryParameter` (*type:* `String.t`, *default:* `nil`) - The name of the query parameter to match.
  *   `regexMatch` (*type:* `String.t`, *default:* `nil`) - The value of the query parameter must match the regular expression specified by regex_match. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of exact_match, regex_match, or present_match must be set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :exactMatch => String.t() | nil,
          :presentMatch => boolean() | nil,
          :queryParameter => String.t() | nil,
          :regexMatch => String.t() | nil
        }

  field(:exactMatch)
  field(:presentMatch)
  field(:queryParameter)
  field(:regexMatch)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkServices.V1.Model.HttpRouteQueryParameterMatch do
  def decode(value, options) do
    GoogleApi.NetworkServices.V1.Model.HttpRouteQueryParameterMatch.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkServices.V1.Model.HttpRouteQueryParameterMatch do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
