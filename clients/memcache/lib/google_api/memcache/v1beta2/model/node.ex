# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Memcache.V1beta2.Model.Node do
  @moduledoc """


  ## Attributes

  *   `host` (*type:* `String.t`, *default:* `nil`) - Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.
  *   `memcacheFullVersion` (*type:* `String.t`, *default:* `nil`) - Output only. The full version of memcached server running on this node. e.g. - memcached-1.5.16
  *   `memcacheVersion` (*type:* `String.t`, *default:* `nil`) - Output only. Major version of memcached server running on this node, e.g. MEMCACHE_1_5
  *   `nodeId` (*type:* `String.t`, *default:* `nil`) - Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.
  *   `parameters` (*type:* `GoogleApi.Memcache.V1beta2.Model.MemcacheParameters.t`, *default:* `nil`) - User defined parameters currently applied to the node.
  *   `port` (*type:* `integer()`, *default:* `nil`) - Output only. The port number of the Memcached server on this node.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state of the Memcached node.
  *   `updateAvailable` (*type:* `boolean()`, *default:* `nil`) - Output only. Returns true if there is an update waiting to be applied
  *   `zone` (*type:* `String.t`, *default:* `nil`) - Output only. Location (GCP Zone) for the Memcached node.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => String.t() | nil,
          :memcacheFullVersion => String.t() | nil,
          :memcacheVersion => String.t() | nil,
          :nodeId => String.t() | nil,
          :parameters => GoogleApi.Memcache.V1beta2.Model.MemcacheParameters.t() | nil,
          :port => integer() | nil,
          :state => String.t() | nil,
          :updateAvailable => boolean() | nil,
          :zone => String.t() | nil
        }

  field(:host)
  field(:memcacheFullVersion)
  field(:memcacheVersion)
  field(:nodeId)
  field(:parameters, as: GoogleApi.Memcache.V1beta2.Model.MemcacheParameters)
  field(:port)
  field(:state)
  field(:updateAvailable)
  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.Memcache.V1beta2.Model.Node do
  def decode(value, options) do
    GoogleApi.Memcache.V1beta2.Model.Node.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Memcache.V1beta2.Model.Node do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
