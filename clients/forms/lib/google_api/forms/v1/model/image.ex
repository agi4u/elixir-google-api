# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Forms.V1.Model.Image do
  @moduledoc """
  Data representing an image.

  ## Attributes

  *   `altText` (*type:* `String.t`, *default:* `nil`) - A description of the image that is shown on hover and read by screenreaders.
  *   `contentUri` (*type:* `String.t`, *default:* `nil`) - Output only. A URI from which you can download the image; this is valid only for a limited time.
  *   `properties` (*type:* `GoogleApi.Forms.V1.Model.MediaProperties.t`, *default:* `nil`) - Properties of an image.
  *   `sourceUri` (*type:* `String.t`, *default:* `nil`) - Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :altText => String.t() | nil,
          :contentUri => String.t() | nil,
          :properties => GoogleApi.Forms.V1.Model.MediaProperties.t() | nil,
          :sourceUri => String.t() | nil
        }

  field(:altText)
  field(:contentUri)
  field(:properties, as: GoogleApi.Forms.V1.Model.MediaProperties)
  field(:sourceUri)
end

defimpl Poison.Decoder, for: GoogleApi.Forms.V1.Model.Image do
  def decode(value, options) do
    GoogleApi.Forms.V1.Model.Image.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Forms.V1.Model.Image do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
