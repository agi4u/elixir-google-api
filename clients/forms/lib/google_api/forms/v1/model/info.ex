# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Forms.V1.Model.Info do
  @moduledoc """
  The general information for a form.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - The description of the form.
  *   `documentTitle` (*type:* `String.t`, *default:* `nil`) - Output only. The title of the document which is visible in Drive. If `Info.title` is empty, `document_title` may appear in its place in the Google Forms UI and be visible to responders. `document_title` can be set on create, but cannot be modified by a batchUpdate request. Please use the [Google Drive API](https://developers.google.com/drive/api/v3/reference/files/update) if you need to programmatically update `document_title`.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Required. The title of the form which is visible to responders.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :documentTitle => String.t() | nil,
          :title => String.t() | nil
        }

  field(:description)
  field(:documentTitle)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.Forms.V1.Model.Info do
  def decode(value, options) do
    GoogleApi.Forms.V1.Model.Info.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Forms.V1.Model.Info do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
