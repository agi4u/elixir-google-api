# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.ComputeEnginePreferences do
  @moduledoc """
  The user preferences relating to Compute Engine target platform.

  ## Attributes

  *   `licenseType` (*type:* `String.t`, *default:* `nil`) - License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
  *   `machinePreferences` (*type:* `GoogleApi.MigrationCenter.V1.Model.MachinePreferences.t`, *default:* `nil`) - Preferences concerning the machine types to consider on Compute Engine.
  *   `persistentDiskType` (*type:* `String.t`, *default:* `nil`) - Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :licenseType => String.t() | nil,
          :machinePreferences => GoogleApi.MigrationCenter.V1.Model.MachinePreferences.t() | nil,
          :persistentDiskType => String.t() | nil
        }

  field(:licenseType)
  field(:machinePreferences, as: GoogleApi.MigrationCenter.V1.Model.MachinePreferences)
  field(:persistentDiskType)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.ComputeEnginePreferences do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.ComputeEnginePreferences.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.ComputeEnginePreferences do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
