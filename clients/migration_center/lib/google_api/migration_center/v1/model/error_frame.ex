# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.ErrorFrame do
  @moduledoc """
  Message representing a frame which failed to be processed due to an error.

  ## Attributes

  *   `ingestionTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Frame ingestion time.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The identifier of the ErrorFrame.
  *   `originalFrame` (*type:* `GoogleApi.MigrationCenter.V1.Model.AssetFrame.t`, *default:* `nil`) - Output only. The frame that was originally reported.
  *   `violations` (*type:* `list(GoogleApi.MigrationCenter.V1.Model.FrameViolationEntry.t)`, *default:* `nil`) - Output only. All the violations that were detected for the frame.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ingestionTime => DateTime.t() | nil,
          :name => String.t() | nil,
          :originalFrame => GoogleApi.MigrationCenter.V1.Model.AssetFrame.t() | nil,
          :violations => list(GoogleApi.MigrationCenter.V1.Model.FrameViolationEntry.t()) | nil
        }

  field(:ingestionTime, as: DateTime)
  field(:name)
  field(:originalFrame, as: GoogleApi.MigrationCenter.V1.Model.AssetFrame)
  field(:violations, as: GoogleApi.MigrationCenter.V1.Model.FrameViolationEntry, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.ErrorFrame do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.ErrorFrame.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.ErrorFrame do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
