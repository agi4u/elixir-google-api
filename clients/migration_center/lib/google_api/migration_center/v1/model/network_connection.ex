# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.NetworkConnection do
  @moduledoc """


  ## Attributes

  *   `localIpAddress` (*type:* `String.t`, *default:* `nil`) - Local IP address.
  *   `localPort` (*type:* `integer()`, *default:* `nil`) - Local port.
  *   `pid` (*type:* `String.t`, *default:* `nil`) - Process ID.
  *   `processName` (*type:* `String.t`, *default:* `nil`) - Process or service name.
  *   `protocol` (*type:* `String.t`, *default:* `nil`) - Connection protocol (e.g. TCP/UDP).
  *   `remoteIpAddress` (*type:* `String.t`, *default:* `nil`) - Remote IP address.
  *   `remotePort` (*type:* `integer()`, *default:* `nil`) - Remote port.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Network connection state.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :localIpAddress => String.t() | nil,
          :localPort => integer() | nil,
          :pid => String.t() | nil,
          :processName => String.t() | nil,
          :protocol => String.t() | nil,
          :remoteIpAddress => String.t() | nil,
          :remotePort => integer() | nil,
          :state => String.t() | nil
        }

  field(:localIpAddress)
  field(:localPort)
  field(:pid)
  field(:processName)
  field(:protocol)
  field(:remoteIpAddress)
  field(:remotePort)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.NetworkConnection do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.NetworkConnection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.NetworkConnection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
