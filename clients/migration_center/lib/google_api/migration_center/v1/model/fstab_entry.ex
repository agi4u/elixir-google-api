# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.FstabEntry do
  @moduledoc """
  Single fstab entry.

  ## Attributes

  *   `file` (*type:* `String.t`, *default:* `nil`) - The mount point for the filesystem.
  *   `freq` (*type:* `integer()`, *default:* `nil`) - Used by dump to determine which filesystems need to be dumped.
  *   `mntops` (*type:* `String.t`, *default:* `nil`) - Mount options associated with the filesystem.
  *   `passno` (*type:* `integer()`, *default:* `nil`) - Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.
  *   `spec` (*type:* `String.t`, *default:* `nil`) - The block special device or remote filesystem to be mounted.
  *   `vfstype` (*type:* `String.t`, *default:* `nil`) - The type of the filesystem.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :file => String.t() | nil,
          :freq => integer() | nil,
          :mntops => String.t() | nil,
          :passno => integer() | nil,
          :spec => String.t() | nil,
          :vfstype => String.t() | nil
        }

  field(:file)
  field(:freq)
  field(:mntops)
  field(:passno)
  field(:spec)
  field(:vfstype)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.FstabEntry do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.FstabEntry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.FstabEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
