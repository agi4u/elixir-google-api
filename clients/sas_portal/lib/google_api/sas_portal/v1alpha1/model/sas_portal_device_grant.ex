# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceGrant do
  @moduledoc """
  Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.

  ## Attributes

  *   `channelType` (*type:* `String.t`, *default:* `nil`) - Type of channel used.
  *   `expireTime` (*type:* `DateTime.t`, *default:* `nil`) - The expiration time of the grant.
  *   `frequencyRange` (*type:* `GoogleApi.SASPortal.V1alpha1.Model.SasPortalFrequencyRange.t`, *default:* `nil`) - The transmission frequency range.
  *   `grantId` (*type:* `String.t`, *default:* `nil`) - Grant Id.
  *   `lastHeartbeatTransmitExpireTime` (*type:* `DateTime.t`, *default:* `nil`) - The transmit expiration time of the last heartbeat.
  *   `maxEirp` (*type:* `float()`, *default:* `nil`) - Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).
  *   `moveList` (*type:* `list(GoogleApi.SASPortal.V1alpha1.Model.SasPortalDpaMoveList.t)`, *default:* `nil`) - The DPA move lists on which this grant appears.
  *   `state` (*type:* `String.t`, *default:* `nil`) - State of the grant.
  *   `suspensionReason` (*type:* `list(String.t)`, *default:* `nil`) - If the grant is suspended, the reason(s) for suspension.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :channelType => String.t() | nil,
          :expireTime => DateTime.t() | nil,
          :frequencyRange => GoogleApi.SASPortal.V1alpha1.Model.SasPortalFrequencyRange.t() | nil,
          :grantId => String.t() | nil,
          :lastHeartbeatTransmitExpireTime => DateTime.t() | nil,
          :maxEirp => float() | nil,
          :moveList => list(GoogleApi.SASPortal.V1alpha1.Model.SasPortalDpaMoveList.t()) | nil,
          :state => String.t() | nil,
          :suspensionReason => list(String.t()) | nil
        }

  field(:channelType)
  field(:expireTime, as: DateTime)
  field(:frequencyRange, as: GoogleApi.SASPortal.V1alpha1.Model.SasPortalFrequencyRange)
  field(:grantId)
  field(:lastHeartbeatTransmitExpireTime, as: DateTime)
  field(:maxEirp)
  field(:moveList, as: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDpaMoveList, type: :list)
  field(:state)
  field(:suspensionReason, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceGrant do
  def decode(value, options) do
    GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceGrant.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceGrant do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
