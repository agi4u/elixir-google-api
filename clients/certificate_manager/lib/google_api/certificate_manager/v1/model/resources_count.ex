# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CertificateManager.V1.Model.ResourcesCount do
  @moduledoc """
  ResourcesCount represents the resource that stores aggregated project's info in the given location, e.g.: total number of certificates assigned to the project.

  ## Attributes

  *   `certificates` (*type:* `String.t`, *default:* `nil`) - The count of certificates.
  *   `computeTime` (*type:* `DateTime.t`, *default:* `nil`) - Required. Input only. The time of the computation. The field is input only, used in Create and Update calls. For Update call, new values of selected resources are set if their compute_time is younger than the persisted ones, e.g.: If you support 3 types of resources: A, B and C, and you have: 'A' resource count computed at timestamp = 3 'B' resource count computed at timestamp = 10 'C' resource count computed at timestamp = 5 And you're going to update all of them with compute_time = 8, only 'A' and 'C' will be updated, as 'B' already has fresher data. For Get call a ResourcesCount instance contains the freshest values for every type.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The singleton resource of the resources count. Must be in the format `projects/*/locations/*/resourcesCounts/single`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificates => String.t() | nil,
          :computeTime => DateTime.t() | nil,
          :name => String.t() | nil
        }

  field(:certificates)
  field(:computeTime, as: DateTime)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.CertificateManager.V1.Model.ResourcesCount do
  def decode(value, options) do
    GoogleApi.CertificateManager.V1.Model.ResourcesCount.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CertificateManager.V1.Model.ResourcesCount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
