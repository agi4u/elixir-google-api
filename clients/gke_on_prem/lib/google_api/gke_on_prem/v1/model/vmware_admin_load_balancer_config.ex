# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEOnPrem.V1.Model.VmwareAdminLoadBalancerConfig do
  @moduledoc """
  VmwareAdminLoadBalancerConfig contains load balancer configuration for VMware admin cluster.

  ## Attributes

  *   `f5Config` (*type:* `GoogleApi.GKEOnPrem.V1.Model.VmwareAdminF5BigIpConfig.t`, *default:* `nil`) - Configuration for F5 Big IP typed load balancers.
  *   `manualLbConfig` (*type:* `GoogleApi.GKEOnPrem.V1.Model.VmwareAdminManualLbConfig.t`, *default:* `nil`) - Manually configured load balancers.
  *   `metalLbConfig` (*type:* `GoogleApi.GKEOnPrem.V1.Model.VmwareAdminMetalLbConfig.t`, *default:* `nil`) - MetalLB load balancers.
  *   `seesawConfig` (*type:* `GoogleApi.GKEOnPrem.V1.Model.VmwareAdminSeesawConfig.t`, *default:* `nil`) - Output only. Configuration for Seesaw typed load balancers.
  *   `vipConfig` (*type:* `GoogleApi.GKEOnPrem.V1.Model.VmwareAdminVipConfig.t`, *default:* `nil`) - The VIPs used by the load balancer.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :f5Config => GoogleApi.GKEOnPrem.V1.Model.VmwareAdminF5BigIpConfig.t() | nil,
          :manualLbConfig => GoogleApi.GKEOnPrem.V1.Model.VmwareAdminManualLbConfig.t() | nil,
          :metalLbConfig => GoogleApi.GKEOnPrem.V1.Model.VmwareAdminMetalLbConfig.t() | nil,
          :seesawConfig => GoogleApi.GKEOnPrem.V1.Model.VmwareAdminSeesawConfig.t() | nil,
          :vipConfig => GoogleApi.GKEOnPrem.V1.Model.VmwareAdminVipConfig.t() | nil
        }

  field(:f5Config, as: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminF5BigIpConfig)
  field(:manualLbConfig, as: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminManualLbConfig)
  field(:metalLbConfig, as: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminMetalLbConfig)
  field(:seesawConfig, as: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminSeesawConfig)
  field(:vipConfig, as: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminVipConfig)
end

defimpl Poison.Decoder, for: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminLoadBalancerConfig do
  def decode(value, options) do
    GoogleApi.GKEOnPrem.V1.Model.VmwareAdminLoadBalancerConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEOnPrem.V1.Model.VmwareAdminLoadBalancerConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
