# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.PrivacyPolicy do
  @moduledoc """
  Represents privacy policy that contains the privacy requirements specified by the data owner. Currently, this is only supported on views.

  ## Attributes

  *   `aggregationThresholdPolicy` (*type:* `GoogleApi.BigQuery.V2.Model.AggregationThresholdPolicy.t`, *default:* `nil`) - Optional. Policy used for aggregation thresholds.
  *   `differentialPrivacyPolicy` (*type:* `GoogleApi.BigQuery.V2.Model.DifferentialPrivacyPolicy.t`, *default:* `nil`) - Optional. Policy used for differential privacy.
  *   `joinRestrictionPolicy` (*type:* `GoogleApi.BigQuery.V2.Model.JoinRestrictionPolicy.t`, *default:* `nil`) - Optional. Join restriction policy is outside of the one of policies, since this policy can be set along with other policies. This policy gives data providers the ability to enforce joins on the 'join_allowed_columns' when data is queried from a privacy protected view.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregationThresholdPolicy =>
            GoogleApi.BigQuery.V2.Model.AggregationThresholdPolicy.t() | nil,
          :differentialPrivacyPolicy =>
            GoogleApi.BigQuery.V2.Model.DifferentialPrivacyPolicy.t() | nil,
          :joinRestrictionPolicy => GoogleApi.BigQuery.V2.Model.JoinRestrictionPolicy.t() | nil
        }

  field(:aggregationThresholdPolicy, as: GoogleApi.BigQuery.V2.Model.AggregationThresholdPolicy)
  field(:differentialPrivacyPolicy, as: GoogleApi.BigQuery.V2.Model.DifferentialPrivacyPolicy)
  field(:joinRestrictionPolicy, as: GoogleApi.BigQuery.V2.Model.JoinRestrictionPolicy)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.PrivacyPolicy do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.PrivacyPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.PrivacyPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
