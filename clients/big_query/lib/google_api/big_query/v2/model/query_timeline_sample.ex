# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.QueryTimelineSample do
  @moduledoc """
  Summary of the state of query execution at a given time.

  ## Attributes

  *   `activeUnits` (*type:* `String.t`, *default:* `nil`) - Total number of active workers. This does not correspond directly to slot usage. This is the largest value observed since the last sample.
  *   `completedUnits` (*type:* `String.t`, *default:* `nil`) - Total parallel units of work completed by this query.
  *   `elapsedMs` (*type:* `String.t`, *default:* `nil`) - Milliseconds elapsed since the start of query execution.
  *   `estimatedRunnableUnits` (*type:* `String.t`, *default:* `nil`) - Units of work that can be scheduled immediately. Providing additional slots for these units of work will accelerate the query, if no other query in the reservation needs additional slots.
  *   `pendingUnits` (*type:* `String.t`, *default:* `nil`) - Total units of work remaining for the query. This number can be revised (increased or decreased) while the query is running.
  *   `totalSlotMs` (*type:* `String.t`, *default:* `nil`) - Cumulative slot-ms consumed by the query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activeUnits => String.t() | nil,
          :completedUnits => String.t() | nil,
          :elapsedMs => String.t() | nil,
          :estimatedRunnableUnits => String.t() | nil,
          :pendingUnits => String.t() | nil,
          :totalSlotMs => String.t() | nil
        }

  field(:activeUnits)
  field(:completedUnits)
  field(:elapsedMs)
  field(:estimatedRunnableUnits)
  field(:pendingUnits)
  field(:totalSlotMs)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.QueryTimelineSample do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.QueryTimelineSample.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.QueryTimelineSample do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
