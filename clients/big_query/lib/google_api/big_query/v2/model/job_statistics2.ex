# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.JobStatistics2 do
  @moduledoc """
  Statistics for a query job.

  ## Attributes

  *   `transferredBytes` (*type:* `String.t`, *default:* `nil`) - Output only. Total bytes transferred for cross-cloud queries such as Cross Cloud Transfer and CREATE TABLE AS SELECT (CTAS).
  *   `mlStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.MlStatistics.t`, *default:* `nil`) - Output only. Statistics of a BigQuery ML training job.
  *   `ddlTargetRowAccessPolicy` (*type:* `GoogleApi.BigQuery.V2.Model.RowAccessPolicyReference.t`, *default:* `nil`) - Output only. The DDL target row access policy. Present only for CREATE/DROP ROW ACCESS POLICY queries.
  *   `ddlTargetDataset` (*type:* `GoogleApi.BigQuery.V2.Model.DatasetReference.t`, *default:* `nil`) - Output only. The DDL target dataset. Present only for CREATE/ALTER/DROP SCHEMA(dataset) queries.
  *   `totalBytesProcessedAccuracy` (*type:* `String.t`, *default:* `nil`) - Output only. For dry-run jobs, totalBytesProcessed is an estimate and this field specifies the accuracy of the estimate. Possible values can be: UNKNOWN: accuracy of the estimate is unknown. PRECISE: estimate is precise. LOWER_BOUND: estimate is lower bound of what the query would cost. UPPER_BOUND: estimate is upper bound of what the query would cost.
  *   `modelTraining` (*type:* `GoogleApi.BigQuery.V2.Model.BigQueryModelTraining.t`, *default:* `nil`) - Deprecated.
  *   `reservationUsage` (*type:* `list(GoogleApi.BigQuery.V2.Model.JobStatistics2ReservationUsage.t)`, *default:* `nil`) - Output only. Job resource usage breakdown by reservation. This field reported misleading information and will no longer be populated.
  *   `biEngineStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.BiEngineStatistics.t`, *default:* `nil`) - Output only. BI Engine specific Statistics.
  *   `totalBytesBilled` (*type:* `String.t`, *default:* `nil`) - Output only. If the project is configured to use on-demand pricing, then this field contains the total bytes billed for the job. If the project is configured to use flat-rate pricing, then you are not billed for bytes and this field is informational only.
  *   `ddlTargetTable` (*type:* `GoogleApi.BigQuery.V2.Model.TableReference.t`, *default:* `nil`) - Output only. The DDL target table. Present only for CREATE/DROP TABLE/VIEW and DROP ALL ROW ACCESS POLICIES queries.
  *   `totalPartitionsProcessed` (*type:* `String.t`, *default:* `nil`) - Output only. Total number of partitions processed from all partitioned tables referenced in the job.
  *   `totalBytesProcessed` (*type:* `String.t`, *default:* `nil`) - Output only. Total bytes processed for the job.
  *   `ddlAffectedRowAccessPolicyCount` (*type:* `String.t`, *default:* `nil`) - Output only. The number of row access policies affected by a DDL statement. Present only for DROP ALL ROW ACCESS POLICIES queries.
  *   `billingTier` (*type:* `integer()`, *default:* `nil`) - Output only. Billing tier for the job. This is a BigQuery-specific concept which is not related to the Google Cloud notion of "free tier". The value here is a measure of the query's resource consumption relative to the amount of data scanned. For on-demand queries, the limit is 100, and all queries within this limit are billed at the standard on-demand rates. On-demand queries that exceed this limit will fail with a billingTierLimitExceeded error.
  *   `referencedRoutines` (*type:* `list(GoogleApi.BigQuery.V2.Model.RoutineReference.t)`, *default:* `nil`) - Output only. Referenced routines for the job.
  *   `metadataCacheStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.MetadataCacheStatistics.t`, *default:* `nil`) - Output only. Statistics of metadata cache usage in a query for BigLake tables.
  *   `sparkStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.SparkStatistics.t`, *default:* `nil`) - Output only. Statistics of a Spark procedure job.
  *   `performanceInsights` (*type:* `GoogleApi.BigQuery.V2.Model.PerformanceInsights.t`, *default:* `nil`) - Output only. Performance insights.
  *   `queryInfo` (*type:* `GoogleApi.BigQuery.V2.Model.QueryInfo.t`, *default:* `nil`) - Output only. Query optimization information for a QUERY job.
  *   `ddlOperationPerformed` (*type:* `String.t`, *default:* `nil`) - Output only. The DDL operation performed, possibly dependent on the pre-existence of the DDL target.
  *   `numDmlAffectedRows` (*type:* `String.t`, *default:* `nil`) - Output only. The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.
  *   `ddlDestinationTable` (*type:* `GoogleApi.BigQuery.V2.Model.TableReference.t`, *default:* `nil`) - Output only. The table after rename. Present only for ALTER TABLE RENAME TO query.
  *   `searchStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.SearchStatistics.t`, *default:* `nil`) - Output only. Search query specific statistics.
  *   `estimatedBytesProcessed` (*type:* `String.t`, *default:* `nil`) - Output only. The original estimate of bytes processed for the job.
  *   `exportDataStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.ExportDataStatistics.t`, *default:* `nil`) - Output only. Stats for EXPORT DATA statement.
  *   `externalServiceCosts` (*type:* `list(GoogleApi.BigQuery.V2.Model.ExternalServiceCost.t)`, *default:* `nil`) - Output only. Job cost breakdown as bigquery internal cost and external service costs.
  *   `queryPlan` (*type:* `list(GoogleApi.BigQuery.V2.Model.ExplainQueryStage.t)`, *default:* `nil`) - Output only. Describes execution plan for the query.
  *   `totalSlotMs` (*type:* `String.t`, *default:* `nil`) - Output only. Slot-milliseconds for the job.
  *   `dclTargetDataset` (*type:* `GoogleApi.BigQuery.V2.Model.DatasetReference.t`, *default:* `nil`) - Output only. Referenced dataset for DCL statement.
  *   `dmlStats` (*type:* `GoogleApi.BigQuery.V2.Model.DmlStatistics.t`, *default:* `nil`) - Output only. Detailed statistics for DML statements INSERT, UPDATE, DELETE, MERGE or TRUNCATE.
  *   `timeline` (*type:* `list(GoogleApi.BigQuery.V2.Model.QueryTimelineSample.t)`, *default:* `nil`) - Output only. Describes a timeline of job execution.
  *   `materializedViewStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.MaterializedViewStatistics.t`, *default:* `nil`) - Output only. Statistics of materialized views of a query job.
  *   `referencedTables` (*type:* `list(GoogleApi.BigQuery.V2.Model.TableReference.t)`, *default:* `nil`) - Output only. Referenced tables for the job. Queries that reference more than 50 tables will not have a complete list.
  *   `vectorSearchStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.VectorSearchStatistics.t`, *default:* `nil`) - Output only. Vector Search query specific statistics.
  *   `modelTrainingExpectedTotalIteration` (*type:* `String.t`, *default:* `nil`) - Deprecated.
  *   `dclTargetView` (*type:* `GoogleApi.BigQuery.V2.Model.TableReference.t`, *default:* `nil`) - Output only. Referenced view for DCL statement.
  *   `dclTargetTable` (*type:* `GoogleApi.BigQuery.V2.Model.TableReference.t`, *default:* `nil`) - Output only. Referenced table for DCL statement.
  *   `statementType` (*type:* `String.t`, *default:* `nil`) - Output only. The type of query statement, if valid. Possible values: * `SELECT`: [`SELECT`](/bigquery/docs/reference/standard-sql/query-syntax#select_list) statement. * `ASSERT`: [`ASSERT`](/bigquery/docs/reference/standard-sql/debugging-statements#assert) statement. * `INSERT`: [`INSERT`](/bigquery/docs/reference/standard-sql/dml-syntax#insert_statement) statement. * `UPDATE`: [`UPDATE`](/bigquery/docs/reference/standard-sql/query-syntax#update_statement) statement. * `DELETE`: [`DELETE`](/bigquery/docs/reference/standard-sql/data-manipulation-language) statement. * `MERGE`: [`MERGE`](/bigquery/docs/reference/standard-sql/data-manipulation-language) statement. * `CREATE_TABLE`: [`CREATE TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#create_table_statement) statement, without `AS SELECT`. * `CREATE_TABLE_AS_SELECT`: [`CREATE TABLE AS SELECT`](/bigquery/docs/reference/standard-sql/data-definition-language#query_statement) statement. * `CREATE_VIEW`: [`CREATE VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#create_view_statement) statement. * `CREATE_MODEL`: [`CREATE MODEL`](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-create#create_model_statement) statement. * `CREATE_MATERIALIZED_VIEW`: [`CREATE MATERIALIZED VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#create_materialized_view_statement) statement. * `CREATE_FUNCTION`: [`CREATE FUNCTION`](/bigquery/docs/reference/standard-sql/data-definition-language#create_function_statement) statement. * `CREATE_TABLE_FUNCTION`: [`CREATE TABLE FUNCTION`](/bigquery/docs/reference/standard-sql/data-definition-language#create_table_function_statement) statement. * `CREATE_PROCEDURE`: [`CREATE PROCEDURE`](/bigquery/docs/reference/standard-sql/data-definition-language#create_procedure) statement. * `CREATE_ROW_ACCESS_POLICY`: [`CREATE ROW ACCESS POLICY`](/bigquery/docs/reference/standard-sql/data-definition-language#create_row_access_policy_statement) statement. * `CREATE_SCHEMA`: [`CREATE SCHEMA`](/bigquery/docs/reference/standard-sql/data-definition-language#create_schema_statement) statement. * `CREATE_SNAPSHOT_TABLE`: [`CREATE SNAPSHOT TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#create_snapshot_table_statement) statement. * `CREATE_SEARCH_INDEX`: [`CREATE SEARCH INDEX`](/bigquery/docs/reference/standard-sql/data-definition-language#create_search_index_statement) statement. * `DROP_TABLE`: [`DROP TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_table_statement) statement. * `DROP_EXTERNAL_TABLE`: [`DROP EXTERNAL TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_external_table_statement) statement. * `DROP_VIEW`: [`DROP VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_view_statement) statement. * `DROP_MODEL`: [`DROP MODEL`](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-drop-model) statement. * `DROP_MATERIALIZED_VIEW`: [`DROP MATERIALIZED VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_materialized_view_statement) statement. * `DROP_FUNCTION` : [`DROP FUNCTION`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_function_statement) statement. * `DROP_TABLE_FUNCTION` : [`DROP TABLE FUNCTION`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_table_function) statement. * `DROP_PROCEDURE`: [`DROP PROCEDURE`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_procedure_statement) statement. * `DROP_SEARCH_INDEX`: [`DROP SEARCH INDEX`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_search_index) statement. * `DROP_SCHEMA`: [`DROP SCHEMA`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_schema_statement) statement. * `DROP_SNAPSHOT_TABLE`: [`DROP SNAPSHOT TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_snapshot_table_statement) statement. * `DROP_ROW_ACCESS_POLICY`: [`DROP [ALL] ROW ACCESS POLICY|POLICIES`](/bigquery/docs/reference/standard-sql/data-definition-language#drop_row_access_policy_statement) statement. * `ALTER_TABLE`: [`ALTER TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#alter_table_set_options_statement) statement. * `ALTER_VIEW`: [`ALTER VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#alter_view_set_options_statement) statement. * `ALTER_MATERIALIZED_VIEW`: [`ALTER MATERIALIZED VIEW`](/bigquery/docs/reference/standard-sql/data-definition-language#alter_materialized_view_set_options_statement) statement. * `ALTER_SCHEMA`: [`ALTER SCHEMA`](/bigquery/docs/reference/standard-sql/data-definition-language#aalter_schema_set_options_statement) statement. * `SCRIPT`: [`SCRIPT`](/bigquery/docs/reference/standard-sql/procedural-language). * `TRUNCATE_TABLE`: [`TRUNCATE TABLE`](/bigquery/docs/reference/standard-sql/dml-syntax#truncate_table_statement) statement. * `CREATE_EXTERNAL_TABLE`: [`CREATE EXTERNAL TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#create_external_table_statement) statement. * `EXPORT_DATA`: [`EXPORT DATA`](/bigquery/docs/reference/standard-sql/other-statements#export_data_statement) statement. * `EXPORT_MODEL`: [`EXPORT MODEL`](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-export-model) statement. * `LOAD_DATA`: [`LOAD DATA`](/bigquery/docs/reference/standard-sql/other-statements#load_data_statement) statement. * `CALL`: [`CALL`](/bigquery/docs/reference/standard-sql/procedural-language#call) statement.
  *   `loadQueryStatistics` (*type:* `GoogleApi.BigQuery.V2.Model.LoadQueryStatistics.t`, *default:* `nil`) - Output only. Statistics for a LOAD query.
  *   `schema` (*type:* `GoogleApi.BigQuery.V2.Model.TableSchema.t`, *default:* `nil`) - Output only. The schema of the results. Present only for successful dry run of non-legacy SQL queries.
  *   `ddlTargetRoutine` (*type:* `GoogleApi.BigQuery.V2.Model.RoutineReference.t`, *default:* `nil`) - Output only. [Beta] The DDL target routine. Present only for CREATE/DROP FUNCTION/PROCEDURE queries.
  *   `modelTrainingCurrentIteration` (*type:* `integer()`, *default:* `nil`) - Deprecated.
  *   `cacheHit` (*type:* `boolean()`, *default:* `nil`) - Output only. Whether the query result was fetched from the query cache.
  *   `undeclaredQueryParameters` (*type:* `list(GoogleApi.BigQuery.V2.Model.QueryParameter.t)`, *default:* `nil`) - Output only. GoogleSQL only: list of undeclared query parameters detected during a dry run validation.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :transferredBytes => String.t() | nil,
          :mlStatistics => GoogleApi.BigQuery.V2.Model.MlStatistics.t() | nil,
          :ddlTargetRowAccessPolicy =>
            GoogleApi.BigQuery.V2.Model.RowAccessPolicyReference.t() | nil,
          :ddlTargetDataset => GoogleApi.BigQuery.V2.Model.DatasetReference.t() | nil,
          :totalBytesProcessedAccuracy => String.t() | nil,
          :modelTraining => GoogleApi.BigQuery.V2.Model.BigQueryModelTraining.t() | nil,
          :reservationUsage =>
            list(GoogleApi.BigQuery.V2.Model.JobStatistics2ReservationUsage.t()) | nil,
          :biEngineStatistics => GoogleApi.BigQuery.V2.Model.BiEngineStatistics.t() | nil,
          :totalBytesBilled => String.t() | nil,
          :ddlTargetTable => GoogleApi.BigQuery.V2.Model.TableReference.t() | nil,
          :totalPartitionsProcessed => String.t() | nil,
          :totalBytesProcessed => String.t() | nil,
          :ddlAffectedRowAccessPolicyCount => String.t() | nil,
          :billingTier => integer() | nil,
          :referencedRoutines => list(GoogleApi.BigQuery.V2.Model.RoutineReference.t()) | nil,
          :metadataCacheStatistics =>
            GoogleApi.BigQuery.V2.Model.MetadataCacheStatistics.t() | nil,
          :sparkStatistics => GoogleApi.BigQuery.V2.Model.SparkStatistics.t() | nil,
          :performanceInsights => GoogleApi.BigQuery.V2.Model.PerformanceInsights.t() | nil,
          :queryInfo => GoogleApi.BigQuery.V2.Model.QueryInfo.t() | nil,
          :ddlOperationPerformed => String.t() | nil,
          :numDmlAffectedRows => String.t() | nil,
          :ddlDestinationTable => GoogleApi.BigQuery.V2.Model.TableReference.t() | nil,
          :searchStatistics => GoogleApi.BigQuery.V2.Model.SearchStatistics.t() | nil,
          :estimatedBytesProcessed => String.t() | nil,
          :exportDataStatistics => GoogleApi.BigQuery.V2.Model.ExportDataStatistics.t() | nil,
          :externalServiceCosts =>
            list(GoogleApi.BigQuery.V2.Model.ExternalServiceCost.t()) | nil,
          :queryPlan => list(GoogleApi.BigQuery.V2.Model.ExplainQueryStage.t()) | nil,
          :totalSlotMs => String.t() | nil,
          :dclTargetDataset => GoogleApi.BigQuery.V2.Model.DatasetReference.t() | nil,
          :dmlStats => GoogleApi.BigQuery.V2.Model.DmlStatistics.t() | nil,
          :timeline => list(GoogleApi.BigQuery.V2.Model.QueryTimelineSample.t()) | nil,
          :materializedViewStatistics =>
            GoogleApi.BigQuery.V2.Model.MaterializedViewStatistics.t() | nil,
          :referencedTables => list(GoogleApi.BigQuery.V2.Model.TableReference.t()) | nil,
          :vectorSearchStatistics => GoogleApi.BigQuery.V2.Model.VectorSearchStatistics.t() | nil,
          :modelTrainingExpectedTotalIteration => String.t() | nil,
          :dclTargetView => GoogleApi.BigQuery.V2.Model.TableReference.t() | nil,
          :dclTargetTable => GoogleApi.BigQuery.V2.Model.TableReference.t() | nil,
          :statementType => String.t() | nil,
          :loadQueryStatistics => GoogleApi.BigQuery.V2.Model.LoadQueryStatistics.t() | nil,
          :schema => GoogleApi.BigQuery.V2.Model.TableSchema.t() | nil,
          :ddlTargetRoutine => GoogleApi.BigQuery.V2.Model.RoutineReference.t() | nil,
          :modelTrainingCurrentIteration => integer() | nil,
          :cacheHit => boolean() | nil,
          :undeclaredQueryParameters => list(GoogleApi.BigQuery.V2.Model.QueryParameter.t()) | nil
        }

  field(:transferredBytes)
  field(:mlStatistics, as: GoogleApi.BigQuery.V2.Model.MlStatistics)
  field(:ddlTargetRowAccessPolicy, as: GoogleApi.BigQuery.V2.Model.RowAccessPolicyReference)
  field(:ddlTargetDataset, as: GoogleApi.BigQuery.V2.Model.DatasetReference)
  field(:totalBytesProcessedAccuracy)
  field(:modelTraining, as: GoogleApi.BigQuery.V2.Model.BigQueryModelTraining)

  field(:reservationUsage,
    as: GoogleApi.BigQuery.V2.Model.JobStatistics2ReservationUsage,
    type: :list
  )

  field(:biEngineStatistics, as: GoogleApi.BigQuery.V2.Model.BiEngineStatistics)
  field(:totalBytesBilled)
  field(:ddlTargetTable, as: GoogleApi.BigQuery.V2.Model.TableReference)
  field(:totalPartitionsProcessed)
  field(:totalBytesProcessed)
  field(:ddlAffectedRowAccessPolicyCount)
  field(:billingTier)
  field(:referencedRoutines, as: GoogleApi.BigQuery.V2.Model.RoutineReference, type: :list)
  field(:metadataCacheStatistics, as: GoogleApi.BigQuery.V2.Model.MetadataCacheStatistics)
  field(:sparkStatistics, as: GoogleApi.BigQuery.V2.Model.SparkStatistics)
  field(:performanceInsights, as: GoogleApi.BigQuery.V2.Model.PerformanceInsights)
  field(:queryInfo, as: GoogleApi.BigQuery.V2.Model.QueryInfo)
  field(:ddlOperationPerformed)
  field(:numDmlAffectedRows)
  field(:ddlDestinationTable, as: GoogleApi.BigQuery.V2.Model.TableReference)
  field(:searchStatistics, as: GoogleApi.BigQuery.V2.Model.SearchStatistics)
  field(:estimatedBytesProcessed)
  field(:exportDataStatistics, as: GoogleApi.BigQuery.V2.Model.ExportDataStatistics)
  field(:externalServiceCosts, as: GoogleApi.BigQuery.V2.Model.ExternalServiceCost, type: :list)
  field(:queryPlan, as: GoogleApi.BigQuery.V2.Model.ExplainQueryStage, type: :list)
  field(:totalSlotMs)
  field(:dclTargetDataset, as: GoogleApi.BigQuery.V2.Model.DatasetReference)
  field(:dmlStats, as: GoogleApi.BigQuery.V2.Model.DmlStatistics)
  field(:timeline, as: GoogleApi.BigQuery.V2.Model.QueryTimelineSample, type: :list)
  field(:materializedViewStatistics, as: GoogleApi.BigQuery.V2.Model.MaterializedViewStatistics)
  field(:referencedTables, as: GoogleApi.BigQuery.V2.Model.TableReference, type: :list)
  field(:vectorSearchStatistics, as: GoogleApi.BigQuery.V2.Model.VectorSearchStatistics)
  field(:modelTrainingExpectedTotalIteration)
  field(:dclTargetView, as: GoogleApi.BigQuery.V2.Model.TableReference)
  field(:dclTargetTable, as: GoogleApi.BigQuery.V2.Model.TableReference)
  field(:statementType)
  field(:loadQueryStatistics, as: GoogleApi.BigQuery.V2.Model.LoadQueryStatistics)
  field(:schema, as: GoogleApi.BigQuery.V2.Model.TableSchema)
  field(:ddlTargetRoutine, as: GoogleApi.BigQuery.V2.Model.RoutineReference)
  field(:modelTrainingCurrentIteration)
  field(:cacheHit)
  field(:undeclaredQueryParameters, as: GoogleApi.BigQuery.V2.Model.QueryParameter, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.JobStatistics2 do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.JobStatistics2.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.JobStatistics2 do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
