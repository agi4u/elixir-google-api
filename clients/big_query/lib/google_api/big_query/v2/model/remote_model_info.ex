# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.RemoteModelInfo do
  @moduledoc """
  Remote Model Info

  ## Attributes

  *   `connection` (*type:* `String.t`, *default:* `nil`) - Output only. Fully qualified name of the user-provided connection object of the remote model. Format: ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```
  *   `endpoint` (*type:* `String.t`, *default:* `nil`) - Output only. The endpoint for remote model.
  *   `maxBatchingRows` (*type:* `String.t`, *default:* `nil`) - Output only. Max number of rows in each batch sent to the remote service. If unset, the number of rows in each batch is set dynamically.
  *   `remoteModelVersion` (*type:* `String.t`, *default:* `nil`) - Output only. The model version for LLM.
  *   `remoteServiceType` (*type:* `String.t`, *default:* `nil`) - Output only. The remote service type for remote model.
  *   `speechRecognizer` (*type:* `String.t`, *default:* `nil`) - Output only. The name of the speech recognizer to use for speech recognition. The expected format is `projects/{project}/locations/{location}/recognizers/{recognizer}`. Customers can specify this field at model creation. If not specified, a default recognizer `projects/{model project}/locations/global/recognizers/_` will be used. See more details at [recognizers](https://cloud.google.com/speech-to-text/v2/docs/reference/rest/v2/projects.locations.recognizers)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connection => String.t() | nil,
          :endpoint => String.t() | nil,
          :maxBatchingRows => String.t() | nil,
          :remoteModelVersion => String.t() | nil,
          :remoteServiceType => String.t() | nil,
          :speechRecognizer => String.t() | nil
        }

  field(:connection)
  field(:endpoint)
  field(:maxBatchingRows)
  field(:remoteModelVersion)
  field(:remoteServiceType)
  field(:speechRecognizer)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.RemoteModelInfo do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.RemoteModelInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.RemoteModelInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
