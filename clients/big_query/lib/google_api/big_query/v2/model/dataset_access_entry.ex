# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.DatasetAccessEntry do
  @moduledoc """
  Grants all resources of particular types in a particular dataset read access to the current dataset. Similar to how individually authorized views work, updates to any resource granted through its dataset (including creation of new resources) requires read permission to referenced resources, plus write permission to the authorizing dataset.

  ## Attributes

  *   `dataset` (*type:* `GoogleApi.BigQuery.V2.Model.DatasetReference.t`, *default:* `nil`) - The dataset this entry applies to
  *   `targetTypes` (*type:* `list(String.t)`, *default:* `nil`) - Which resources in the dataset this entry applies to. Currently, only views are supported, but additional target types may be added in the future.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataset => GoogleApi.BigQuery.V2.Model.DatasetReference.t() | nil,
          :targetTypes => list(String.t()) | nil
        }

  field(:dataset, as: GoogleApi.BigQuery.V2.Model.DatasetReference)
  field(:targetTypes, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.DatasetAccessEntry do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.DatasetAccessEntry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.DatasetAccessEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
