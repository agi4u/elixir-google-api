# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataMigration.V1.Model.TriggerEntity do
  @moduledoc """
  Trigger is not used as an independent entity, it is retrieved as part of a Table entity.

  ## Attributes

  *   `customFeatures` (*type:* `map()`, *default:* `nil`) - Custom engine specific features.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the trigger.
  *   `sqlCode` (*type:* `String.t`, *default:* `nil`) - The SQL code which creates the trigger.
  *   `triggerType` (*type:* `String.t`, *default:* `nil`) - Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.
  *   `triggeringEvents` (*type:* `list(String.t)`, *default:* `nil`) - The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :customFeatures => map() | nil,
          :name => String.t() | nil,
          :sqlCode => String.t() | nil,
          :triggerType => String.t() | nil,
          :triggeringEvents => list(String.t()) | nil
        }

  field(:customFeatures, type: :map)
  field(:name)
  field(:sqlCode)
  field(:triggerType)
  field(:triggeringEvents, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.DataMigration.V1.Model.TriggerEntity do
  def decode(value, options) do
    GoogleApi.DataMigration.V1.Model.TriggerEntity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataMigration.V1.Model.TriggerEntity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
