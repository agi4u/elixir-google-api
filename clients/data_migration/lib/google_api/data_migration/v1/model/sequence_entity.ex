# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataMigration.V1.Model.SequenceEntity do
  @moduledoc """
  Sequence's parent is a schema.

  ## Attributes

  *   `cache` (*type:* `String.t`, *default:* `nil`) - Indicates number of entries to cache / precreate.
  *   `customFeatures` (*type:* `map()`, *default:* `nil`) - Custom engine specific features.
  *   `cycle` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the sequence value should cycle through.
  *   `increment` (*type:* `String.t`, *default:* `nil`) - Increment value for the sequence.
  *   `maxValue` (*type:* `String.t`, *default:* `nil`) - Maximum number for the sequence represented as bytes to accommodate large. numbers
  *   `minValue` (*type:* `String.t`, *default:* `nil`) - Minimum number for the sequence represented as bytes to accommodate large. numbers
  *   `startValue` (*type:* `String.t`, *default:* `nil`) - Start number for the sequence represented as bytes to accommodate large. numbers
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cache => String.t() | nil,
          :customFeatures => map() | nil,
          :cycle => boolean() | nil,
          :increment => String.t() | nil,
          :maxValue => String.t() | nil,
          :minValue => String.t() | nil,
          :startValue => String.t() | nil
        }

  field(:cache)
  field(:customFeatures, type: :map)
  field(:cycle)
  field(:increment)
  field(:maxValue)
  field(:minValue)
  field(:startValue)
end

defimpl Poison.Decoder, for: GoogleApi.DataMigration.V1.Model.SequenceEntity do
  def decode(value, options) do
    GoogleApi.DataMigration.V1.Model.SequenceEntity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataMigration.V1.Model.SequenceEntity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
