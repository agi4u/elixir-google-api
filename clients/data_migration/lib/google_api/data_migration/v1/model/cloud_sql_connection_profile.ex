# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataMigration.V1.Model.CloudSqlConnectionProfile do
  @moduledoc """
  Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.

  ## Attributes

  *   `additionalPublicIp` (*type:* `String.t`, *default:* `nil`) - Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
  *   `cloudSqlId` (*type:* `String.t`, *default:* `nil`) - Output only. The Cloud SQL instance ID that this connection profile is associated with.
  *   `privateIp` (*type:* `String.t`, *default:* `nil`) - Output only. The Cloud SQL database instance's private IP.
  *   `publicIp` (*type:* `String.t`, *default:* `nil`) - Output only. The Cloud SQL database instance's public IP.
  *   `settings` (*type:* `GoogleApi.DataMigration.V1.Model.CloudSqlSettings.t`, *default:* `nil`) - Immutable. Metadata used to create the destination Cloud SQL database.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalPublicIp => String.t() | nil,
          :cloudSqlId => String.t() | nil,
          :privateIp => String.t() | nil,
          :publicIp => String.t() | nil,
          :settings => GoogleApi.DataMigration.V1.Model.CloudSqlSettings.t() | nil
        }

  field(:additionalPublicIp)
  field(:cloudSqlId)
  field(:privateIp)
  field(:publicIp)
  field(:settings, as: GoogleApi.DataMigration.V1.Model.CloudSqlSettings)
end

defimpl Poison.Decoder, for: GoogleApi.DataMigration.V1.Model.CloudSqlConnectionProfile do
  def decode(value, options) do
    GoogleApi.DataMigration.V1.Model.CloudSqlConnectionProfile.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataMigration.V1.Model.CloudSqlConnectionProfile do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
