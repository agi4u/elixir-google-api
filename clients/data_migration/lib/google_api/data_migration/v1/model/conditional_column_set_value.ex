# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataMigration.V1.Model.ConditionalColumnSetValue do
  @moduledoc """
  Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.

  ## Attributes

  *   `customFeatures` (*type:* `map()`, *default:* `nil`) - Optional. Custom engine specific features.
  *   `sourceNumericFilter` (*type:* `GoogleApi.DataMigration.V1.Model.SourceNumericFilter.t`, *default:* `nil`) - Optional. Optional filter on source column precision and scale. Used for fixed point numbers such as NUMERIC/NUMBER data types.
  *   `sourceTextFilter` (*type:* `GoogleApi.DataMigration.V1.Model.SourceTextFilter.t`, *default:* `nil`) - Optional. Optional filter on source column length. Used for text based data types like varchar.
  *   `valueTransformation` (*type:* `GoogleApi.DataMigration.V1.Model.ValueTransformation.t`, *default:* `nil`) - Required. Description of data transformation during migration.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :customFeatures => map() | nil,
          :sourceNumericFilter => GoogleApi.DataMigration.V1.Model.SourceNumericFilter.t() | nil,
          :sourceTextFilter => GoogleApi.DataMigration.V1.Model.SourceTextFilter.t() | nil,
          :valueTransformation => GoogleApi.DataMigration.V1.Model.ValueTransformation.t() | nil
        }

  field(:customFeatures, type: :map)
  field(:sourceNumericFilter, as: GoogleApi.DataMigration.V1.Model.SourceNumericFilter)
  field(:sourceTextFilter, as: GoogleApi.DataMigration.V1.Model.SourceTextFilter)
  field(:valueTransformation, as: GoogleApi.DataMigration.V1.Model.ValueTransformation)
end

defimpl Poison.Decoder, for: GoogleApi.DataMigration.V1.Model.ConditionalColumnSetValue do
  def decode(value, options) do
    GoogleApi.DataMigration.V1.Model.ConditionalColumnSetValue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataMigration.V1.Model.ConditionalColumnSetValue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
