# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEvidence do
  @moduledoc """
  Evidence for a check.

  ## Attributes

  *   `dataSecurity` (*type:* `GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataSecurityEvidence.t`, *default:* `nil`) - Evidence concerning data security.
  *   `dataTypes` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataTypeEvidence.t)`, *default:* `nil`) - Evidence concerning data types found in your app.
  *   `endpointRestrictionViolations` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidence.t)`, *default:* `nil`) - Evidence collected from endpoint restriction violation analysis.
  *   `endpoints` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointEvidence.t)`, *default:* `nil`) - Evidence concerning endpoints that were contacted by your app.
  *   `permissionRestrictionViolations` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionRestrictionViolationEvidence.t)`, *default:* `nil`) - Evidence collected from permission restriction violation analysis.
  *   `permissions` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionEvidence.t)`, *default:* `nil`) - Evidence concerning permissions that were found in your app.
  *   `privacyPolicyTexts` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence.t)`, *default:* `nil`) - Evidence collected from your privacy policy(s).
  *   `sdkIssues` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkIssueEvidence.t)`, *default:* `nil`) - Evidence concerning SDK issues.
  *   `sdkRestrictionViolations` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkRestrictionViolationEvidence.t)`, *default:* `nil`) - Evidence collected from SDK restriction violation analysis.
  *   `sdks` (*type:* `list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkEvidence.t)`, *default:* `nil`) - Evidence concerning SDKs that were found in your app.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataSecurity =>
            GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataSecurityEvidence.t()
            | nil,
          :dataTypes =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataTypeEvidence.t()
            )
            | nil,
          :endpointRestrictionViolations =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidence.t()
            )
            | nil,
          :endpoints =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointEvidence.t()
            )
            | nil,
          :permissionRestrictionViolations =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionRestrictionViolationEvidence.t()
            )
            | nil,
          :permissions =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionEvidence.t()
            )
            | nil,
          :privacyPolicyTexts =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence.t()
            )
            | nil,
          :sdkIssues =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkIssueEvidence.t()
            )
            | nil,
          :sdkRestrictionViolations =>
            list(
              GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkRestrictionViolationEvidence.t()
            )
            | nil,
          :sdks =>
            list(GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkEvidence.t())
            | nil
        }

  field(:dataSecurity,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataSecurityEvidence
  )

  field(:dataTypes,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckDataTypeEvidence,
    type: :list
  )

  field(:endpointRestrictionViolations,
    as:
      GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidence,
    type: :list
  )

  field(:endpoints,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEndpointEvidence,
    type: :list
  )

  field(:permissionRestrictionViolations,
    as:
      GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionRestrictionViolationEvidence,
    type: :list
  )

  field(:permissions,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPermissionEvidence,
    type: :list
  )

  field(:privacyPolicyTexts,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence,
    type: :list
  )

  field(:sdkIssues,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkIssueEvidence,
    type: :list
  )

  field(:sdkRestrictionViolations,
    as:
      GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkRestrictionViolationEvidence,
    type: :list
  )

  field(:sdks,
    as: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckSdkEvidence,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEvidence do
  def decode(value, options) do
    GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEvidence.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaCheckEvidence do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
