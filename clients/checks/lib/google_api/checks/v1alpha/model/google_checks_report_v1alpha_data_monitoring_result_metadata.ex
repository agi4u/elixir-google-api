# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaDataMonitoringResultMetadata do
  @moduledoc """
  Information about a data monitoring result.

  ## Attributes

  *   `badges` (*type:* `list(String.t)`, *default:* `nil`) - Badges that apply to this result.
  *   `firstDetectedTime` (*type:* `DateTime.t`, *default:* `nil`) - The timestamp when this result was first detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.
  *   `lastDetectedAppVersion` (*type:* `String.t`, *default:* `nil`) - Your app's version name when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.
  *   `lastDetectedTime` (*type:* `DateTime.t`, *default:* `nil`) - The timestamp when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :badges => list(String.t()) | nil,
          :firstDetectedTime => DateTime.t() | nil,
          :lastDetectedAppVersion => String.t() | nil,
          :lastDetectedTime => DateTime.t() | nil
        }

  field(:badges, type: :list)
  field(:firstDetectedTime, as: DateTime)
  field(:lastDetectedAppVersion)
  field(:lastDetectedTime, as: DateTime)
end

defimpl Poison.Decoder,
  for: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaDataMonitoringResultMetadata do
  def decode(value, options) do
    GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaDataMonitoringResultMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Checks.V1alpha.Model.GoogleChecksReportV1alphaDataMonitoringResultMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
