# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata do
  @moduledoc """
  S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.

  ## Attributes

  *   `authMethod` (*type:* `String.t`, *default:* `nil`) - Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
  *   `listApi` (*type:* `String.t`, *default:* `nil`) - The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
  *   `protocol` (*type:* `String.t`, *default:* `nil`) - Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
  *   `requestModel` (*type:* `String.t`, *default:* `nil`) - Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authMethod => String.t() | nil,
          :listApi => String.t() | nil,
          :protocol => String.t() | nil,
          :requestModel => String.t() | nil
        }

  field(:authMethod)
  field(:listApi)
  field(:protocol)
  field(:requestModel)
end

defimpl Poison.Decoder, for: GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata do
  def decode(value, options) do
    GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
