# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StorageTransfer.V1.Model.AzureBlobStorageData do
  @moduledoc """
  An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).

  ## Attributes

  *   `azureCredentials` (*type:* `GoogleApi.StorageTransfer.V1.Model.AzureCredentials.t`, *default:* `nil`) - Required. Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
  *   `container` (*type:* `String.t`, *default:* `nil`) - Required. The container to transfer from the Azure Storage account.
  *   `credentialsSecret` (*type:* `String.t`, *default:* `nil`) - Optional. The Resource name of a secret in Secret Manager. The Azure SAS token must be stored in Secret Manager in JSON format: { "sas_token" : "SAS_TOKEN" } GoogleServiceAccount must be granted `roles/secretmanager.secretAccessor` for the resource. See [Configure access to a source: Microsoft Azure Blob Storage] (https://cloud.google.com/storage-transfer/docs/source-microsoft-azure#secret_manager) for more information. If `credentials_secret` is specified, do not specify azure_credentials. Format: `projects/{project_number}/secrets/{secret_name}`
  *   `path` (*type:* `String.t`, *default:* `nil`) - Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
  *   `storageAccount` (*type:* `String.t`, *default:* `nil`) - Required. The name of the Azure Storage account.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :azureCredentials => GoogleApi.StorageTransfer.V1.Model.AzureCredentials.t() | nil,
          :container => String.t() | nil,
          :credentialsSecret => String.t() | nil,
          :path => String.t() | nil,
          :storageAccount => String.t() | nil
        }

  field(:azureCredentials, as: GoogleApi.StorageTransfer.V1.Model.AzureCredentials)
  field(:container)
  field(:credentialsSecret)
  field(:path)
  field(:storageAccount)
end

defimpl Poison.Decoder, for: GoogleApi.StorageTransfer.V1.Model.AzureBlobStorageData do
  def decode(value, options) do
    GoogleApi.StorageTransfer.V1.Model.AzureBlobStorageData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StorageTransfer.V1.Model.AzureBlobStorageData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
