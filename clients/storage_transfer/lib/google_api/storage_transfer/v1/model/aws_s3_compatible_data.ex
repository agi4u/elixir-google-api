# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StorageTransfer.V1.Model.AwsS3CompatibleData do
  @moduledoc """
  An AwsS3CompatibleData resource.

  ## Attributes

  *   `bucketName` (*type:* `String.t`, *default:* `nil`) - Required. Specifies the name of the bucket.
  *   `endpoint` (*type:* `String.t`, *default:* `nil`) - Required. Specifies the endpoint of the storage service.
  *   `path` (*type:* `String.t`, *default:* `nil`) - Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
  *   `region` (*type:* `String.t`, *default:* `nil`) - Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
  *   `s3Metadata` (*type:* `GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata.t`, *default:* `nil`) - A S3 compatible metadata.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucketName => String.t() | nil,
          :endpoint => String.t() | nil,
          :path => String.t() | nil,
          :region => String.t() | nil,
          :s3Metadata => GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata.t() | nil
        }

  field(:bucketName)
  field(:endpoint)
  field(:path)
  field(:region)
  field(:s3Metadata, as: GoogleApi.StorageTransfer.V1.Model.S3CompatibleMetadata)
end

defimpl Poison.Decoder, for: GoogleApi.StorageTransfer.V1.Model.AwsS3CompatibleData do
  def decode(value, options) do
    GoogleApi.StorageTransfer.V1.Model.AwsS3CompatibleData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StorageTransfer.V1.Model.AwsS3CompatibleData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
