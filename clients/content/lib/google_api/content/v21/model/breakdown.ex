# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.Breakdown do
  @moduledoc """
  A detailed impact breakdown for a group of regions where the impact of the issue on different shopping destinations is the same.

  ## Attributes

  *   `details` (*type:* `list(String.t)`, *default:* `nil`) - Human readable, localized description of issue's effect on different targets. Should be rendered as a list. For example: * "Products not showing in ads" * "Products not showing organically"
  *   `regions` (*type:* `list(GoogleApi.Content.V21.Model.BreakdownRegion.t)`, *default:* `nil`) - Lists of regions. Should be rendered as a title for this group of details. The full list should be shown to merchant. If the list is too long, it is recommended to make it expandable.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :details => list(String.t()) | nil,
          :regions => list(GoogleApi.Content.V21.Model.BreakdownRegion.t()) | nil
        }

  field(:details, type: :list)
  field(:regions, as: GoogleApi.Content.V21.Model.BreakdownRegion, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.Breakdown do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.Breakdown.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.Breakdown do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
