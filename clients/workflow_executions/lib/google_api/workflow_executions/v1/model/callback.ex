# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WorkflowExecutions.V1.Model.Callback do
  @moduledoc """
  An instance of a Callback created by an execution.

  ## Attributes

  *   `availablePayloads` (*type:* `list(String.t)`, *default:* `nil`) - Output only. The payloads received by the callback that have not been processed by a waiting execution step.
  *   `method` (*type:* `String.t`, *default:* `nil`) - Output only. The method accepted by the callback. For example: GET, POST, PUT.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of the callback. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}/callback/{callback}
  *   `waiters` (*type:* `String.t`, *default:* `nil`) - Output only. Number of execution steps waiting on this callback.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :availablePayloads => list(String.t()) | nil,
          :method => String.t() | nil,
          :name => String.t() | nil,
          :waiters => String.t() | nil
        }

  field(:availablePayloads, type: :list)
  field(:method)
  field(:name)
  field(:waiters)
end

defimpl Poison.Decoder, for: GoogleApi.WorkflowExecutions.V1.Model.Callback do
  def decode(value, options) do
    GoogleApi.WorkflowExecutions.V1.Model.Callback.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WorkflowExecutions.V1.Model.Callback do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
