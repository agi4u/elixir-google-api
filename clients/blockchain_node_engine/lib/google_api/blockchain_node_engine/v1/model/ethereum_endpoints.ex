# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BlockchainNodeEngine.V1.Model.EthereumEndpoints do
  @moduledoc """
  Contains endpoint information specific to Ethereum nodes.

  ## Attributes

  *   `beaconApiEndpoint` (*type:* `String.t`, *default:* `nil`) - Output only. The assigned URL for the node's Beacon API endpoint.
  *   `beaconPrometheusMetricsApiEndpoint` (*type:* `String.t`, *default:* `nil`) - Output only. The assigned URL for the node's Beacon Prometheus metrics endpoint. See [Prometheus Metrics](https://lighthouse-book.sigmaprime.io/advanced_metrics.html) for more details.
  *   `executionClientPrometheusMetricsApiEndpoint` (*type:* `String.t`, *default:* `nil`) - Output only. The assigned URL for the node's execution client's Prometheus metrics endpoint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :beaconApiEndpoint => String.t() | nil,
          :beaconPrometheusMetricsApiEndpoint => String.t() | nil,
          :executionClientPrometheusMetricsApiEndpoint => String.t() | nil
        }

  field(:beaconApiEndpoint)
  field(:beaconPrometheusMetricsApiEndpoint)
  field(:executionClientPrometheusMetricsApiEndpoint)
end

defimpl Poison.Decoder, for: GoogleApi.BlockchainNodeEngine.V1.Model.EthereumEndpoints do
  def decode(value, options) do
    GoogleApi.BlockchainNodeEngine.V1.Model.EthereumEndpoints.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BlockchainNodeEngine.V1.Model.EthereumEndpoints do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
