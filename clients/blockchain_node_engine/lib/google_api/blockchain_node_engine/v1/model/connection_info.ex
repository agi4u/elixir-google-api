# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BlockchainNodeEngine.V1.Model.ConnectionInfo do
  @moduledoc """
  The connection information through which to interact with a blockchain node.

  ## Attributes

  *   `endpointInfo` (*type:* `GoogleApi.BlockchainNodeEngine.V1.Model.EndpointInfo.t`, *default:* `nil`) - Output only. The endpoint information through which to interact with a blockchain node.
  *   `serviceAttachment` (*type:* `String.t`, *default:* `nil`) - Output only. A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endpointInfo => GoogleApi.BlockchainNodeEngine.V1.Model.EndpointInfo.t() | nil,
          :serviceAttachment => String.t() | nil
        }

  field(:endpointInfo, as: GoogleApi.BlockchainNodeEngine.V1.Model.EndpointInfo)
  field(:serviceAttachment)
end

defimpl Poison.Decoder, for: GoogleApi.BlockchainNodeEngine.V1.Model.ConnectionInfo do
  def decode(value, options) do
    GoogleApi.BlockchainNodeEngine.V1.Model.ConnectionInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BlockchainNodeEngine.V1.Model.ConnectionInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
