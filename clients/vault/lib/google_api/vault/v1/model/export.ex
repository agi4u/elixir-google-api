# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Vault.V1.Model.Export do
  @moduledoc """
  An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.

  ## Attributes

  *   `cloudStorageSink` (*type:* `GoogleApi.Vault.V1.Model.CloudStorageSink.t`, *default:* `nil`) - Output only. The sink for export files in Cloud Storage.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time when the export was created.
  *   `exportOptions` (*type:* `GoogleApi.Vault.V1.Model.ExportOptions.t`, *default:* `nil`) - Additional export options.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. The generated export ID.
  *   `matterId` (*type:* `String.t`, *default:* `nil`) - Output only. The matter ID.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The export name. Don't use special characters (~!$'(),;@:/?) in the name, they can prevent you from downloading exports.
  *   `query` (*type:* `GoogleApi.Vault.V1.Model.Query.t`, *default:* `nil`) - The query parameters used to create the export.
  *   `requester` (*type:* `GoogleApi.Vault.V1.Model.UserInfo.t`, *default:* `nil`) - Output only. The requester of the export.
  *   `stats` (*type:* `GoogleApi.Vault.V1.Model.ExportStats.t`, *default:* `nil`) - Output only. Details about the export progress and size.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Output only. The status of the export.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudStorageSink => GoogleApi.Vault.V1.Model.CloudStorageSink.t() | nil,
          :createTime => DateTime.t() | nil,
          :exportOptions => GoogleApi.Vault.V1.Model.ExportOptions.t() | nil,
          :id => String.t() | nil,
          :matterId => String.t() | nil,
          :name => String.t() | nil,
          :query => GoogleApi.Vault.V1.Model.Query.t() | nil,
          :requester => GoogleApi.Vault.V1.Model.UserInfo.t() | nil,
          :stats => GoogleApi.Vault.V1.Model.ExportStats.t() | nil,
          :status => String.t() | nil
        }

  field(:cloudStorageSink, as: GoogleApi.Vault.V1.Model.CloudStorageSink)
  field(:createTime, as: DateTime)
  field(:exportOptions, as: GoogleApi.Vault.V1.Model.ExportOptions)
  field(:id)
  field(:matterId)
  field(:name)
  field(:query, as: GoogleApi.Vault.V1.Model.Query)
  field(:requester, as: GoogleApi.Vault.V1.Model.UserInfo)
  field(:stats, as: GoogleApi.Vault.V1.Model.ExportStats)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.Vault.V1.Model.Export do
  def decode(value, options) do
    GoogleApi.Vault.V1.Model.Export.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Vault.V1.Model.Export do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
