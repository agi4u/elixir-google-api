# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.FreeInstanceMetadata do
  @moduledoc """
  Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.

  ## Attributes

  *   `expireBehavior` (*type:* `String.t`, *default:* `nil`) - Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
  *   `expireTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp after which the instance will either be upgraded or scheduled for deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling the free instance for deletion. This timestamp is set during the creation of a free instance.
  *   `upgradeTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. If present, the timestamp at which the free instance was upgraded to a provisioned instance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expireBehavior => String.t() | nil,
          :expireTime => DateTime.t() | nil,
          :upgradeTime => DateTime.t() | nil
        }

  field(:expireBehavior)
  field(:expireTime, as: DateTime)
  field(:upgradeTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.FreeInstanceMetadata do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.FreeInstanceMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.FreeInstanceMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
