# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.ParameterMetadata do
  @moduledoc """
  Metadata for a specific parameter.

  ## Attributes

  *   `customMetadata` (*type:* `map()`, *default:* `nil`) - Optional. Additional metadata for describing this parameter.
  *   `defaultValue` (*type:* `String.t`, *default:* `nil`) - Optional. The default values will pre-populate the parameter with the given value from the proto. If default_value is left empty, the parameter will be populated with a default of the relevant type, e.g. false for a boolean.
  *   `enumOptions` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.ParameterMetadataEnumOption.t)`, *default:* `nil`) - Optional. The options shown when ENUM ParameterType is specified.
  *   `groupName` (*type:* `String.t`, *default:* `nil`) - Optional. Specifies a group name for this parameter to be rendered under. Group header text will be rendered exactly as specified in this field. Only considered when parent_name is NOT provided.
  *   `helpText` (*type:* `String.t`, *default:* `nil`) - Required. The help text to display for the parameter.
  *   `hiddenUi` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether the parameter should be hidden in the UI.
  *   `isOptional` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether the parameter is optional. Defaults to false.
  *   `label` (*type:* `String.t`, *default:* `nil`) - Required. The label to display for the parameter.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. The name of the parameter.
  *   `paramType` (*type:* `String.t`, *default:* `nil`) - Optional. The type of the parameter. Used for selecting input picker.
  *   `parentName` (*type:* `String.t`, *default:* `nil`) - Optional. Specifies the name of the parent parameter. Used in conjunction with 'parent_trigger_values' to make this parameter conditional (will only be rendered conditionally). Should be mappable to a ParameterMetadata.name field.
  *   `parentTriggerValues` (*type:* `list(String.t)`, *default:* `nil`) - Optional. The value(s) of the 'parent_name' parameter which will trigger this parameter to be shown. If left empty, ANY non-empty value in parent_name will trigger this parameter to be shown. Only considered when this parameter is conditional (when 'parent_name' has been provided).
  *   `regexes` (*type:* `list(String.t)`, *default:* `nil`) - Optional. Regexes that the parameter must match.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :customMetadata => map() | nil,
          :defaultValue => String.t() | nil,
          :enumOptions =>
            list(GoogleApi.Dataflow.V1b3.Model.ParameterMetadataEnumOption.t()) | nil,
          :groupName => String.t() | nil,
          :helpText => String.t() | nil,
          :hiddenUi => boolean() | nil,
          :isOptional => boolean() | nil,
          :label => String.t() | nil,
          :name => String.t() | nil,
          :paramType => String.t() | nil,
          :parentName => String.t() | nil,
          :parentTriggerValues => list(String.t()) | nil,
          :regexes => list(String.t()) | nil
        }

  field(:customMetadata, type: :map)
  field(:defaultValue)
  field(:enumOptions, as: GoogleApi.Dataflow.V1b3.Model.ParameterMetadataEnumOption, type: :list)
  field(:groupName)
  field(:helpText)
  field(:hiddenUi)
  field(:isOptional)
  field(:label)
  field(:name)
  field(:paramType)
  field(:parentName)
  field(:parentTriggerValues, type: :list)
  field(:regexes, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.ParameterMetadata do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.ParameterMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.ParameterMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
