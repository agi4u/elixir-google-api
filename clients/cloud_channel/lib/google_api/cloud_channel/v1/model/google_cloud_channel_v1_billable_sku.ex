# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1BillableSku do
  @moduledoc """
  Represents the Billable SKU information.

  ## Attributes

  *   `service` (*type:* `String.t`, *default:* `nil`) - Resource name of Service which contains Repricing SKU. Format: services/{service}. Example: "services/B7D9-FDCB-15D8".
  *   `serviceDisplayName` (*type:* `String.t`, *default:* `nil`) - Unique human readable name for the Service.
  *   `sku` (*type:* `String.t`, *default:* `nil`) - Resource name of Billable SKU. Format: billableSkus/{sku}. Example: billableSkus/6E1B-6634-470F".
  *   `skuDisplayName` (*type:* `String.t`, *default:* `nil`) - Unique human readable name for the SKU.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :service => String.t() | nil,
          :serviceDisplayName => String.t() | nil,
          :sku => String.t() | nil,
          :skuDisplayName => String.t() | nil
        }

  field(:service)
  field(:serviceDisplayName)
  field(:sku)
  field(:skuDisplayName)
end

defimpl Poison.Decoder, for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1BillableSku do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1BillableSku.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1BillableSku do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
