# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata do
  @moduledoc """
  The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.

  ## Attributes

  *   `dateRange` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange.t`, *default:* `nil`) - The date range of reported usage.
  *   `precedingDateRange` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange.t`, *default:* `nil`) - The usage dates immediately preceding `date_range` with the same duration. Use this to calculate trending usage and costs. This is only populated if you request trending data. For example, if `date_range` is July 1-15, `preceding_date_range` will be June 16-30.
  *   `report` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Report.t`, *default:* `nil`) - Details of the completed report.
  *   `rowCount` (*type:* `String.t`, *default:* `nil`) - The total number of rows of data in the final report.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dateRange => GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange.t() | nil,
          :precedingDateRange =>
            GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange.t() | nil,
          :report => GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Report.t() | nil,
          :rowCount => String.t() | nil
        }

  field(:dateRange, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange)
  field(:precedingDateRange, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1DateRange)
  field(:report, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Report)
  field(:rowCount)
end

defimpl Poison.Decoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
