# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ConditionalOverride do
  @moduledoc """
  Specifies the override to conditionally apply.

  ## Attributes

  *   `adjustment` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingAdjustment.t`, *default:* `nil`) - Required. Information about the applied override's adjustment.
  *   `rebillingBasis` (*type:* `String.t`, *default:* `nil`) - Required. The RebillingBasis to use for the applied override. Shows the relative cost based on your repricing costs.
  *   `repricingCondition` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingCondition.t`, *default:* `nil`) - Required. Specifies the condition which, if met, will apply the override.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adjustment =>
            GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingAdjustment.t() | nil,
          :rebillingBasis => String.t() | nil,
          :repricingCondition =>
            GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingCondition.t() | nil
        }

  field(:adjustment, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingAdjustment)
  field(:rebillingBasis)

  field(:repricingCondition,
    as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RepricingCondition
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ConditionalOverride do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ConditionalOverride.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ConditionalOverride do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
