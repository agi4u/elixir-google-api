# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RunReportJobResponse do
  @moduledoc """
  Response message for CloudChannelReportsService.RunReportJob.

  ## Attributes

  *   `reportJob` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportJob.t`, *default:* `nil`) - Pass `report_job.name` to FetchReportResultsRequest.report_job to retrieve the report's results.
  *   `reportMetadata` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata.t`, *default:* `nil`) - The metadata for the report's results (display name, columns, row count, and date range). If you view this before the operation finishes, you may see incomplete data.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :reportJob => GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportJob.t() | nil,
          :reportMetadata =>
            GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata.t() | nil
        }

  field(:reportJob, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportJob)

  field(:reportMetadata,
    as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1ReportResultsMetadata
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RunReportJobResponse do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RunReportJobResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1RunReportJobResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
