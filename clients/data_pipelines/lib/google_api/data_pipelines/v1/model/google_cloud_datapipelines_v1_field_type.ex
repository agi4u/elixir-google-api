# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType do
  @moduledoc """
  Type info about a field.

  ## Attributes

  *   `collectionElementType` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType.t`, *default:* `nil`) - If `type` is an array or iterable, this is the type contained in that array or iterable.
  *   `logicalType` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1LogicalType.t`, *default:* `nil`) - If `type` is a logical type, this is the info for the specific logical type.
  *   `mapType` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1MapType.t`, *default:* `nil`) - If `type` is a map, this is the key and value types for that map.
  *   `nullable` (*type:* `boolean()`, *default:* `nil`) - Whether or not this field is nullable.
  *   `rowSchema` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1Schema.t`, *default:* `nil`) - If `type` is a row, this is the schema of that row.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Specific type of the field. For non-atomic types, the corresponding type info for that non-atomic must be set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :collectionElementType =>
            GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType.t() | nil,
          :logicalType =>
            GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1LogicalType.t() | nil,
          :mapType =>
            GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1MapType.t() | nil,
          :nullable => boolean() | nil,
          :rowSchema =>
            GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1Schema.t() | nil,
          :type => String.t() | nil
        }

  field(:collectionElementType,
    as: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType
  )

  field(:logicalType, as: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1LogicalType)
  field(:mapType, as: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1MapType)
  field(:nullable)
  field(:rowSchema, as: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1Schema)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType do
  def decode(value, options) do
    GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1FieldType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
