# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1AtomicValue do
  @moduledoc """
  Represents a non-dividable value.

  ## Attributes

  *   `booleanValue` (*type:* `boolean()`, *default:* `nil`) - A boolean value.
  *   `byteValue` (*type:* `integer()`, *default:* `nil`) - An 8-bit signed value.
  *   `bytesValue` (*type:* `String.t`, *default:* `nil`) - An array of raw bytes.
  *   `datetimeValue` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleTypeDateTime.t`, *default:* `nil`) - A datetime value.
  *   `decimalValue` (*type:* `GoogleApi.DataPipelines.V1.Model.GoogleTypeDecimal.t`, *default:* `nil`) - A large decimal value, equivalent to Java BigDecimal.
  *   `doubleValue` (*type:* `float()`, *default:* `nil`) - A 64-bit floating point value.
  *   `floatValue` (*type:* `number()`, *default:* `nil`) - A 32-bit floating point value.
  *   `int16Value` (*type:* `integer()`, *default:* `nil`) - A 16-bit signed value.
  *   `int32Value` (*type:* `integer()`, *default:* `nil`) - A 32-bit signed value.
  *   `int64Value` (*type:* `String.t`, *default:* `nil`) - A 64-bit signed value.
  *   `stringValue` (*type:* `String.t`, *default:* `nil`) - A string value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :booleanValue => boolean() | nil,
          :byteValue => integer() | nil,
          :bytesValue => String.t() | nil,
          :datetimeValue => GoogleApi.DataPipelines.V1.Model.GoogleTypeDateTime.t() | nil,
          :decimalValue => GoogleApi.DataPipelines.V1.Model.GoogleTypeDecimal.t() | nil,
          :doubleValue => float() | nil,
          :floatValue => number() | nil,
          :int16Value => integer() | nil,
          :int32Value => integer() | nil,
          :int64Value => String.t() | nil,
          :stringValue => String.t() | nil
        }

  field(:booleanValue)
  field(:byteValue)
  field(:bytesValue)
  field(:datetimeValue, as: GoogleApi.DataPipelines.V1.Model.GoogleTypeDateTime)
  field(:decimalValue, as: GoogleApi.DataPipelines.V1.Model.GoogleTypeDecimal)
  field(:doubleValue)
  field(:floatValue)
  field(:int16Value)
  field(:int32Value)
  field(:int64Value)
  field(:stringValue)
end

defimpl Poison.Decoder,
  for: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1AtomicValue do
  def decode(value, options) do
    GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1AtomicValue.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DataPipelines.V1.Model.GoogleCloudDatapipelinesV1AtomicValue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
