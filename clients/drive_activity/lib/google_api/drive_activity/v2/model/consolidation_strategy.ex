# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DriveActivity.V2.Model.ConsolidationStrategy do
  @moduledoc """
  How the individual activities are consolidated. If a set of activities is related they can be consolidated into one combined activity, such as one actor performing the same action on multiple targets, or multiple actors performing the same action on a single target. The strategy defines the rules for which activities are related.

  ## Attributes

  *   `legacy` (*type:* `GoogleApi.DriveActivity.V2.Model.Legacy.t`, *default:* `nil`) - The individual activities are consolidated using the legacy strategy.
  *   `none` (*type:* `GoogleApi.DriveActivity.V2.Model.NoConsolidation.t`, *default:* `nil`) - The individual activities are not consolidated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :legacy => GoogleApi.DriveActivity.V2.Model.Legacy.t() | nil,
          :none => GoogleApi.DriveActivity.V2.Model.NoConsolidation.t() | nil
        }

  field(:legacy, as: GoogleApi.DriveActivity.V2.Model.Legacy)
  field(:none, as: GoogleApi.DriveActivity.V2.Model.NoConsolidation)
end

defimpl Poison.Decoder, for: GoogleApi.DriveActivity.V2.Model.ConsolidationStrategy do
  def decode(value, options) do
    GoogleApi.DriveActivity.V2.Model.ConsolidationStrategy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DriveActivity.V2.Model.ConsolidationStrategy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
