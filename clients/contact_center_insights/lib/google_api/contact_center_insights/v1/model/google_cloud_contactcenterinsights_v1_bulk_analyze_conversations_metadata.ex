# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata do
  @moduledoc """
  The metadata for a bulk analyze conversations operation.

  ## Attributes

  *   `completedAnalysesCount` (*type:* `integer()`, *default:* `nil`) - The number of requested analyses that have completed successfully so far.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - The time the operation was created.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - The time the operation finished running.
  *   `failedAnalysesCount` (*type:* `integer()`, *default:* `nil`) - The number of requested analyses that have failed so far.
  *   `partialErrors` (*type:* `list(GoogleApi.ContactCenterInsights.V1.Model.GoogleRpcStatus.t)`, *default:* `nil`) - Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.
  *   `request` (*type:* `GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest.t`, *default:* `nil`) - The original request for bulk analyze.
  *   `totalRequestedAnalysesCount` (*type:* `integer()`, *default:* `nil`) - Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :completedAnalysesCount => integer() | nil,
          :createTime => DateTime.t() | nil,
          :endTime => DateTime.t() | nil,
          :failedAnalysesCount => integer() | nil,
          :partialErrors =>
            list(GoogleApi.ContactCenterInsights.V1.Model.GoogleRpcStatus.t()) | nil,
          :request =>
            GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest.t()
            | nil,
          :totalRequestedAnalysesCount => integer() | nil
        }

  field(:completedAnalysesCount)
  field(:createTime, as: DateTime)
  field(:endTime, as: DateTime)
  field(:failedAnalysesCount)
  field(:partialErrors, as: GoogleApi.ContactCenterInsights.V1.Model.GoogleRpcStatus, type: :list)

  field(:request,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
  )

  field(:totalRequestedAnalysesCount)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
