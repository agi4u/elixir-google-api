# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction do
  @moduledoc """
  Agent Coaching instructions that customer can configure.

  ## Attributes

  *   `agentAction` (*type:* `String.t`, *default:* `nil`) - Optional. The action that human agent should take. For example, "apologize for the slow shipping". If the users only want to use agent coaching for intent detection, agent_action can be empty
  *   `condition` (*type:* `String.t`, *default:* `nil`) - Optional. The condition of the instruction. For example, "the customer wants to cancel an order". If the users want the instruction to be triggered unconditionally, the condition can be empty.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. The detailed description of this instruction.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. Display name for the instruction.
  *   `metadata` (*type:* `map()`, *default:* `nil`) - Optional. Additional information attached to this instruction.
  *   `systemAction` (*type:* `String.t`, *default:* `nil`) - Optional. The action that system should take. For example, "call GetOrderTime with order_number={order number provided by the customer}". If the users don't have plugins or don't want to trigger plugins, the system_action can be empty
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :agentAction => String.t() | nil,
          :condition => String.t() | nil,
          :description => String.t() | nil,
          :displayName => String.t() | nil,
          :metadata => map() | nil,
          :systemAction => String.t() | nil
        }

  field(:agentAction)
  field(:condition)
  field(:description)
  field(:displayName)
  field(:metadata, type: :map)
  field(:systemAction)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
