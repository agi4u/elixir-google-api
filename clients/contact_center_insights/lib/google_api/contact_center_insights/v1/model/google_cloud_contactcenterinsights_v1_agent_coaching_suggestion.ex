# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion do
  @moduledoc """
  Suggestion for coaching agents.

  ## Attributes

  *   `agentActionSuggestions` (*type:* `list(GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion.t)`, *default:* `nil`) - Optional. Suggested actions for the agent to take.
  *   `applicableInstructions` (*type:* `list(GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction.t)`, *default:* `nil`) - Optional. Instructions applicable based on the current context.
  *   `sampleResponses` (*type:* `list(GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse.t)`, *default:* `nil`) - Optional. Sample response for the Agent.
  *   `suggestionEval` (*type:* `GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval.t`, *default:* `nil`) - Self evaluation of the suggestion.
  *   `suggestionReasoning` (*type:* `GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning.t`, *default:* `nil`) - Reasoning for the suggestion.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :agentActionSuggestions =>
            list(
              GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion.t()
            )
            | nil,
          :applicableInstructions =>
            list(
              GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction.t()
            )
            | nil,
          :sampleResponses =>
            list(
              GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse.t()
            )
            | nil,
          :suggestionEval =>
            GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval.t()
            | nil,
          :suggestionReasoning =>
            GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning.t()
            | nil
        }

  field(:agentActionSuggestions,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion,
    type: :list
  )

  field(:applicableInstructions,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingInstruction,
    type: :list
  )

  field(:sampleResponses,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse,
    type: :list
  )

  field(:suggestionEval,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval
  )

  field(:suggestionReasoning,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
