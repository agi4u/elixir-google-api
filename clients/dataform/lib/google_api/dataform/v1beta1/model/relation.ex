# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataform.V1beta1.Model.Relation do
  @moduledoc """
  Represents a database relation.

  ## Attributes

  *   `additionalOptions` (*type:* `map()`, *default:* `nil`) - Additional options that will be provided as key/value pairs into the options clause of a create table/view statement. See https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language for more information on which options are supported.
  *   `clusterExpressions` (*type:* `list(String.t)`, *default:* `nil`) - A list of columns or SQL expressions used to cluster the table.
  *   `dependencyTargets` (*type:* `list(GoogleApi.Dataform.V1beta1.Model.Target.t)`, *default:* `nil`) - A list of actions that this action depends on.
  *   `disabled` (*type:* `boolean()`, *default:* `nil`) - Whether this action is disabled (i.e. should not be run).
  *   `incrementalTableConfig` (*type:* `GoogleApi.Dataform.V1beta1.Model.IncrementalTableConfig.t`, *default:* `nil`) - Configures `INCREMENTAL_TABLE` settings for this relation. Only set if `relation_type` is `INCREMENTAL_TABLE`.
  *   `partitionExpirationDays` (*type:* `integer()`, *default:* `nil`) - Sets the partition expiration in days.
  *   `partitionExpression` (*type:* `String.t`, *default:* `nil`) - The SQL expression used to partition the relation.
  *   `postOperations` (*type:* `list(String.t)`, *default:* `nil`) - SQL statements to be executed after creating the relation.
  *   `preOperations` (*type:* `list(String.t)`, *default:* `nil`) - SQL statements to be executed before creating the relation.
  *   `relationDescriptor` (*type:* `GoogleApi.Dataform.V1beta1.Model.RelationDescriptor.t`, *default:* `nil`) - Descriptor for the relation and its columns.
  *   `relationType` (*type:* `String.t`, *default:* `nil`) - The type of this relation.
  *   `requirePartitionFilter` (*type:* `boolean()`, *default:* `nil`) - Specifies whether queries on this table must include a predicate filter that filters on the partitioning column.
  *   `selectQuery` (*type:* `String.t`, *default:* `nil`) - The SELECT query which returns rows which this relation should contain.
  *   `tags` (*type:* `list(String.t)`, *default:* `nil`) - Arbitrary, user-defined tags on this action.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalOptions => map() | nil,
          :clusterExpressions => list(String.t()) | nil,
          :dependencyTargets => list(GoogleApi.Dataform.V1beta1.Model.Target.t()) | nil,
          :disabled => boolean() | nil,
          :incrementalTableConfig =>
            GoogleApi.Dataform.V1beta1.Model.IncrementalTableConfig.t() | nil,
          :partitionExpirationDays => integer() | nil,
          :partitionExpression => String.t() | nil,
          :postOperations => list(String.t()) | nil,
          :preOperations => list(String.t()) | nil,
          :relationDescriptor => GoogleApi.Dataform.V1beta1.Model.RelationDescriptor.t() | nil,
          :relationType => String.t() | nil,
          :requirePartitionFilter => boolean() | nil,
          :selectQuery => String.t() | nil,
          :tags => list(String.t()) | nil
        }

  field(:additionalOptions, type: :map)
  field(:clusterExpressions, type: :list)
  field(:dependencyTargets, as: GoogleApi.Dataform.V1beta1.Model.Target, type: :list)
  field(:disabled)
  field(:incrementalTableConfig, as: GoogleApi.Dataform.V1beta1.Model.IncrementalTableConfig)
  field(:partitionExpirationDays)
  field(:partitionExpression)
  field(:postOperations, type: :list)
  field(:preOperations, type: :list)
  field(:relationDescriptor, as: GoogleApi.Dataform.V1beta1.Model.RelationDescriptor)
  field(:relationType)
  field(:requirePartitionFilter)
  field(:selectQuery)
  field(:tags, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Dataform.V1beta1.Model.Relation do
  def decode(value, options) do
    GoogleApi.Dataform.V1beta1.Model.Relation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataform.V1beta1.Model.Relation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
