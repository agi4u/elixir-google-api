# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataform.V1beta1.Model.Repository do
  @moduledoc """
  Represents a Dataform Git repository.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The timestamp of when the repository was created.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. The repository's user-friendly name.
  *   `gitRemoteSettings` (*type:* `GoogleApi.Dataform.V1beta1.Model.GitRemoteSettings.t`, *default:* `nil`) - Optional. If set, configures this repository to be linked to a Git remote.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Repository user labels.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The repository's name.
  *   `npmrcEnvironmentVariablesSecretVersion` (*type:* `String.t`, *default:* `nil`) - Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for package installation operations. Must be in the format `projects/*/secrets/*/versions/*`. The file itself must be in a JSON format.
  *   `serviceAccount` (*type:* `String.t`, *default:* `nil`) - Optional. The service account to run workflow invocations under.
  *   `setAuthenticatedUserAdmin` (*type:* `boolean()`, *default:* `nil`) - Optional. Input only. If set to true, the authenticated user will be granted the roles/dataform.admin role on the created repository. To modify access to the created repository later apply setIamPolicy from https://cloud.google.com/dataform/reference/rest#rest-resource:-v1beta1.projects.locations.repositories
  *   `workspaceCompilationOverrides` (*type:* `GoogleApi.Dataform.V1beta1.Model.WorkspaceCompilationOverrides.t`, *default:* `nil`) - Optional. If set, fields of `workspace_compilation_overrides` override the default compilation settings that are specified in dataform.json when creating workspace-scoped compilation results. See documentation for `WorkspaceCompilationOverrides` for more information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :displayName => String.t() | nil,
          :gitRemoteSettings => GoogleApi.Dataform.V1beta1.Model.GitRemoteSettings.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :npmrcEnvironmentVariablesSecretVersion => String.t() | nil,
          :serviceAccount => String.t() | nil,
          :setAuthenticatedUserAdmin => boolean() | nil,
          :workspaceCompilationOverrides =>
            GoogleApi.Dataform.V1beta1.Model.WorkspaceCompilationOverrides.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:displayName)
  field(:gitRemoteSettings, as: GoogleApi.Dataform.V1beta1.Model.GitRemoteSettings)
  field(:labels, type: :map)
  field(:name)
  field(:npmrcEnvironmentVariablesSecretVersion)
  field(:serviceAccount)
  field(:setAuthenticatedUserAdmin)

  field(:workspaceCompilationOverrides,
    as: GoogleApi.Dataform.V1beta1.Model.WorkspaceCompilationOverrides
  )
end

defimpl Poison.Decoder, for: GoogleApi.Dataform.V1beta1.Model.Repository do
  def decode(value, options) do
    GoogleApi.Dataform.V1beta1.Model.Repository.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataform.V1beta1.Model.Repository do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
