# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettings do
  @moduledoc """
  Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.

  ## Attributes

  *   `audioExportGcsDestination` (*type:* `GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3GcsDestination.t`, *default:* `nil`) - If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
  *   `dtmfSettings` (*type:* `GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.t`, *default:* `nil`) - Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
  *   `loggingSettings` (*type:* `GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.t`, *default:* `nil`) - Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
  *   `speechSettings` (*type:* `GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings.t`, *default:* `nil`) - Settings for speech to text detection. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :audioExportGcsDestination =>
            GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3GcsDestination.t() | nil,
          :dtmfSettings =>
            GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.t()
            | nil,
          :loggingSettings =>
            GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.t()
            | nil,
          :speechSettings =>
            GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings.t()
            | nil
        }

  field(:audioExportGcsDestination,
    as: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3GcsDestination
  )

  field(:dtmfSettings,
    as: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings
  )

  field(:loggingSettings,
    as: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings
  )

  field(:speechSettings,
    as: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettings do
  def decode(value, options) do
    GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettings.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AdvancedSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
