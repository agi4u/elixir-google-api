# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings do
  @moduledoc """
  Settings of integration with GitHub.

  ## Attributes

  *   `accessToken` (*type:* `String.t`, *default:* `nil`) - The access token used to authenticate the access to the GitHub repository.
  *   `branches` (*type:* `list(String.t)`, *default:* `nil`) - A list of branches configured to be used from Dialogflow.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The unique repository display name for the GitHub repository.
  *   `repositoryUri` (*type:* `String.t`, *default:* `nil`) - The GitHub repository URI related to the agent.
  *   `trackingBranch` (*type:* `String.t`, *default:* `nil`) - The branch of the GitHub repository tracked for this agent.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessToken => String.t() | nil,
          :branches => list(String.t()) | nil,
          :displayName => String.t() | nil,
          :repositoryUri => String.t() | nil,
          :trackingBranch => String.t() | nil
        }

  field(:accessToken)
  field(:branches, type: :list)
  field(:displayName)
  field(:repositoryUri)
  field(:trackingBranch)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings do
  def decode(value, options) do
    GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
