# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest do
  @moduledoc """
  The request to set the feedback for a bot answer.

  ## Attributes

  *   `answerFeedback` (*type:* `GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AnswerFeedback.t`, *default:* `nil`) - Required. Feedback provided for a bot answer.
  *   `responseId` (*type:* `String.t`, *default:* `nil`) - Required. ID of the response to update its feedback. This is the same as DetectIntentResponse.response_id.
  *   `updateMask` (*type:* `String.t`, *default:* `nil`) - Optional. The mask to control which fields to update. If the mask is not present, all fields will be updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :answerFeedback =>
            GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AnswerFeedback.t() | nil,
          :responseId => String.t() | nil,
          :updateMask => String.t() | nil
        }

  field(:answerFeedback, as: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3AnswerFeedback)

  field(:responseId)
  field(:updateMask)
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest do
  def decode(value, options) do
    GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V3.Model.GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
