# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Composer.V1.Model.FetchDatabasePropertiesResponse do
  @moduledoc """
  Response for FetchDatabasePropertiesRequest.

  ## Attributes

  *   `isFailoverReplicaAvailable` (*type:* `boolean()`, *default:* `nil`) - The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.
  *   `primaryGceZone` (*type:* `String.t`, *default:* `nil`) - The Compute Engine zone that the instance is currently serving from.
  *   `secondaryGceZone` (*type:* `String.t`, *default:* `nil`) - The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isFailoverReplicaAvailable => boolean() | nil,
          :primaryGceZone => String.t() | nil,
          :secondaryGceZone => String.t() | nil
        }

  field(:isFailoverReplicaAvailable)
  field(:primaryGceZone)
  field(:secondaryGceZone)
end

defimpl Poison.Decoder, for: GoogleApi.Composer.V1.Model.FetchDatabasePropertiesResponse do
  def decode(value, options) do
    GoogleApi.Composer.V1.Model.FetchDatabasePropertiesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Composer.V1.Model.FetchDatabasePropertiesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
