# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Run.V1.Model.Status do
  @moduledoc """
  Status is a return value for calls that don't return other objects.

  ## Attributes

  *   `code` (*type:* `integer()`, *default:* `nil`) - Suggested HTTP return code for this status, 0 if not set.
  *   `details` (*type:* `GoogleApi.Run.V1.Model.StatusDetails.t`, *default:* `nil`) - Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
  *   `message` (*type:* `String.t`, *default:* `nil`) - A human-readable description of the status of this operation.
  *   `metadata` (*type:* `GoogleApi.Run.V1.Model.ListMeta.t`, *default:* `nil`) - Standard list metadata.
  *   `reason` (*type:* `String.t`, *default:* `nil`) - A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Status of the operation. One of: "Success" or "Failure".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :code => integer() | nil,
          :details => GoogleApi.Run.V1.Model.StatusDetails.t() | nil,
          :message => String.t() | nil,
          :metadata => GoogleApi.Run.V1.Model.ListMeta.t() | nil,
          :reason => String.t() | nil,
          :status => String.t() | nil
        }

  field(:code)
  field(:details, as: GoogleApi.Run.V1.Model.StatusDetails)
  field(:message)
  field(:metadata, as: GoogleApi.Run.V1.Model.ListMeta)
  field(:reason)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.Run.V1.Model.Status do
  def decode(value, options) do
    GoogleApi.Run.V1.Model.Status.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Run.V1.Model.Status do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
