# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Run.V1.Model.StatusCause do
  @moduledoc """
  StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.

  ## Attributes

  *   `field` (*type:* `String.t`, *default:* `nil`) - The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Examples: "name" - the field "name" on the current resource "items[0].name" - the field "name" on the first array entry in "items"
  *   `message` (*type:* `String.t`, *default:* `nil`) - A human-readable description of the cause of the error. This field may be presented as-is to a reader.
  *   `reason` (*type:* `String.t`, *default:* `nil`) - A machine-readable description of the cause of the error. If this value is empty there is no information available.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :field => String.t() | nil,
          :message => String.t() | nil,
          :reason => String.t() | nil
        }

  field(:field)
  field(:message)
  field(:reason)
end

defimpl Poison.Decoder, for: GoogleApi.Run.V1.Model.StatusCause do
  def decode(value, options) do
    GoogleApi.Run.V1.Model.StatusCause.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Run.V1.Model.StatusCause do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
