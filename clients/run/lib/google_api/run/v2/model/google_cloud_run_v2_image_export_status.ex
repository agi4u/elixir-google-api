# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Run.V2.Model.GoogleCloudRunV2ImageExportStatus do
  @moduledoc """
  The status of an image export job.

  ## Attributes

  *   `exportJobState` (*type:* `String.t`, *default:* `nil`) - Output only. Has the image export job finished (regardless of successful or failure).
  *   `exportedImageDigest` (*type:* `String.t`, *default:* `nil`) - The exported image ID as it will appear in Artifact Registry.
  *   `status` (*type:* `GoogleApi.Run.V2.Model.UtilStatusProto.t`, *default:* `nil`) - The status of the export task if done.
  *   `tag` (*type:* `String.t`, *default:* `nil`) - The image tag as it will appear in Artifact Registry.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :exportJobState => String.t() | nil,
          :exportedImageDigest => String.t() | nil,
          :status => GoogleApi.Run.V2.Model.UtilStatusProto.t() | nil,
          :tag => String.t() | nil
        }

  field(:exportJobState)
  field(:exportedImageDigest)
  field(:status, as: GoogleApi.Run.V2.Model.UtilStatusProto)
  field(:tag)
end

defimpl Poison.Decoder, for: GoogleApi.Run.V2.Model.GoogleCloudRunV2ImageExportStatus do
  def decode(value, options) do
    GoogleApi.Run.V2.Model.GoogleCloudRunV2ImageExportStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Run.V2.Model.GoogleCloudRunV2ImageExportStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
