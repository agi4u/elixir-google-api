# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudTasks.V2beta2.Model.UriOverride do
  @moduledoc """
  Uri Override. When specified, all the HTTP tasks inside the queue will be partially or fully overridden depending on the configured values.

  ## Attributes

  *   `host` (*type:* `String.t`, *default:* `nil`) - Host override. When specified, the host part of url will be overridden. For example, if the original Uri is "https://www.google.com", and host is set to "example.net", the overridden Uri will be "https://example.net".
  *   `path` (*type:* `String.t`, *default:* `nil`) - Uri path. Will be used as the path for the current Uri (replaces any existing path of the task url).
  *   `port` (*type:* `String.t`, *default:* `nil`) - Port override. When specified, the port part of Uri will be replaced by the provided value. For instance, for a Uri http://www.google.com/foo and port=123 the overridden Uri becomes http://www.google.com:123/foo.
  *   `query` (*type:* `String.t`, *default:* `nil`) - Uri Query. Will replace the query part of the task uri.
  *   `scheme` (*type:* `String.t`, *default:* `nil`) - Scheme override. When specified, the Uri scheme is replaced by the provided value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => String.t() | nil,
          :path => String.t() | nil,
          :port => String.t() | nil,
          :query => String.t() | nil,
          :scheme => String.t() | nil
        }

  field(:host)
  field(:path)
  field(:port)
  field(:query)
  field(:scheme)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTasks.V2beta2.Model.UriOverride do
  def decode(value, options) do
    GoogleApi.CloudTasks.V2beta2.Model.UriOverride.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTasks.V2beta2.Model.UriOverride do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
