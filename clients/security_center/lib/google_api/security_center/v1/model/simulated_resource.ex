# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecurityCenter.V1.Model.SimulatedResource do
  @moduledoc """
  Manually constructed resource name. If the custom module evaluates against only the resource data, you can omit the `iam_policy_data` field. If it evaluates only the `iam_policy_data` field, you can omit the resource data.

  ## Attributes

  *   `iamPolicyData` (*type:* `GoogleApi.SecurityCenter.V1.Model.Policy.t`, *default:* `nil`) - Optional. A representation of the IAM policy.
  *   `resourceData` (*type:* `map()`, *default:* `nil`) - Optional. A representation of the Google Cloud resource. Should match the Google Cloud resource JSON format.
  *   `resourceType` (*type:* `String.t`, *default:* `nil`) - Required. The type of the resource, for example, `compute.googleapis.com/Disk`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :iamPolicyData => GoogleApi.SecurityCenter.V1.Model.Policy.t() | nil,
          :resourceData => map() | nil,
          :resourceType => String.t() | nil
        }

  field(:iamPolicyData, as: GoogleApi.SecurityCenter.V1.Model.Policy)
  field(:resourceData, type: :map)
  field(:resourceType)
end

defimpl Poison.Decoder, for: GoogleApi.SecurityCenter.V1.Model.SimulatedResource do
  def decode(value, options) do
    GoogleApi.SecurityCenter.V1.Model.SimulatedResource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecurityCenter.V1.Model.SimulatedResource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
