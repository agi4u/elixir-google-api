# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecurityCenter.V1.Model.CloudLoggingEntry do
  @moduledoc """
  Metadata taken from a [Cloud Logging LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)

  ## Attributes

  *   `insertId` (*type:* `String.t`, *default:* `nil`) - A unique identifier for the log entry.
  *   `logId` (*type:* `String.t`, *default:* `nil`) - The type of the log (part of `log_name`. `log_name` is the resource name of the log to which this log entry belongs). For example: `cloudresourcemanager.googleapis.com/activity`. Note that this field is not URL-encoded, unlike the `LOG_ID` field in `LogEntry`.
  *   `resourceContainer` (*type:* `String.t`, *default:* `nil`) - The organization, folder, or project of the monitored resource that produced this log entry.
  *   `timestamp` (*type:* `DateTime.t`, *default:* `nil`) - The time the event described by the log entry occurred.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :insertId => String.t() | nil,
          :logId => String.t() | nil,
          :resourceContainer => String.t() | nil,
          :timestamp => DateTime.t() | nil
        }

  field(:insertId)
  field(:logId)
  field(:resourceContainer)
  field(:timestamp, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.SecurityCenter.V1.Model.CloudLoggingEntry do
  def decode(value, options) do
    GoogleApi.SecurityCenter.V1.Model.CloudLoggingEntry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecurityCenter.V1.Model.CloudLoggingEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
