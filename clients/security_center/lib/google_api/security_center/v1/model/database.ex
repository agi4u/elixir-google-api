# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecurityCenter.V1.Model.Database do
  @moduledoc """
  Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of CloudSQL instances or Cloud Spanner instances), or the database instance itself. Some database resources may not have the full resource name populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. CloudSQL databases). In these cases only the display name will be provided.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The human readable name of the database the user connected to.
  *   `grantees` (*type:* `list(String.t)`, *default:* `nil`) - The target usernames/roles/groups of a SQL privilege grant (not an IAM policy change).
  *   `name` (*type:* `String.t`, *default:* `nil`) - The full resource name of the database the user connected to, if it is supported by CAI. (https://google.aip.dev/122#full-resource-names)
  *   `query` (*type:* `String.t`, *default:* `nil`) - The SQL statement associated with the relevant access.
  *   `userName` (*type:* `String.t`, *default:* `nil`) - The username used to connect to the DB. This may not necessarily be an IAM principal, and has no required format.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t() | nil,
          :grantees => list(String.t()) | nil,
          :name => String.t() | nil,
          :query => String.t() | nil,
          :userName => String.t() | nil
        }

  field(:displayName)
  field(:grantees, type: :list)
  field(:name)
  field(:query)
  field(:userName)
end

defimpl Poison.Decoder, for: GoogleApi.SecurityCenter.V1.Model.Database do
  def decode(value, options) do
    GoogleApi.SecurityCenter.V1.Model.Database.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecurityCenter.V1.Model.Database do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
