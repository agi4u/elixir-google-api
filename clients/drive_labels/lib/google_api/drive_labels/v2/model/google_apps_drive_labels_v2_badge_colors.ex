# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BadgeColors do
  @moduledoc """
  The color derived from BadgeConfig and changed to the closest recommended supported color.

  ## Attributes

  *   `backgroundColor` (*type:* `GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t`, *default:* `nil`) - Output only. Badge background that pairs with the foreground.
  *   `foregroundColor` (*type:* `GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t`, *default:* `nil`) - Output only. Badge foreground that pairs with the background.
  *   `soloColor` (*type:* `GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t`, *default:* `nil`) - Output only. Color that can be used for text without a background.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :backgroundColor => GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t() | nil,
          :foregroundColor => GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t() | nil,
          :soloColor => GoogleApi.DriveLabels.V2.Model.GoogleTypeColor.t() | nil
        }

  field(:backgroundColor, as: GoogleApi.DriveLabels.V2.Model.GoogleTypeColor)
  field(:foregroundColor, as: GoogleApi.DriveLabels.V2.Model.GoogleTypeColor)
  field(:soloColor, as: GoogleApi.DriveLabels.V2.Model.GoogleTypeColor)
end

defimpl Poison.Decoder, for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BadgeColors do
  def decode(value, options) do
    GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BadgeColors.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BadgeColors do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
