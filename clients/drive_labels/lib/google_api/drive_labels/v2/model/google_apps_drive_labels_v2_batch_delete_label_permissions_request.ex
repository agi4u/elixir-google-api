# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest do
  @moduledoc """
  Deletes one of more Label Permissions.

  ## Attributes

  *   `requests` (*type:* `list(GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest.t)`, *default:* `nil`) - Required. The request message specifying the resources to update.
  *   `useAdminAccess` (*type:* `boolean()`, *default:* `nil`) - Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the DeleteLabelPermissionRequest messages must either be empty or match this field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :requests =>
            list(
              GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest.t()
            )
            | nil,
          :useAdminAccess => boolean() | nil
        }

  field(:requests,
    as: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest,
    type: :list
  )

  field(:useAdminAccess)
end

defimpl Poison.Decoder,
  for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest do
  def decode(value, options) do
    GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
