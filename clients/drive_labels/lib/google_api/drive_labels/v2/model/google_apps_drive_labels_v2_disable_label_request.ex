# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DisableLabelRequest do
  @moduledoc """
  Request to deprecate a published Label.

  ## Attributes

  *   `disabledPolicy` (*type:* `GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2LifecycleDisabledPolicy.t`, *default:* `nil`) - Disabled policy to use.
  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
  *   `updateMask` (*type:* `String.t`, *default:* `nil`) - The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
  *   `useAdminAccess` (*type:* `boolean()`, *default:* `nil`) - Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
  *   `writeControl` (*type:* `GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2WriteControl.t`, *default:* `nil`) - Provides control over how write requests are executed. Defaults to unset, which means last write wins.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :disabledPolicy =>
            GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2LifecycleDisabledPolicy.t()
            | nil,
          :languageCode => String.t() | nil,
          :updateMask => String.t() | nil,
          :useAdminAccess => boolean() | nil,
          :writeControl =>
            GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2WriteControl.t() | nil
        }

  field(:disabledPolicy,
    as: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2LifecycleDisabledPolicy
  )

  field(:languageCode)
  field(:updateMask)
  field(:useAdminAccess)
  field(:writeControl, as: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2WriteControl)
end

defimpl Poison.Decoder,
  for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DisableLabelRequest do
  def decode(value, options) do
    GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DisableLabelRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DriveLabels.V2.Model.GoogleAppsDriveLabelsV2DisableLabelRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
