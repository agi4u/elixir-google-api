# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastore.V1.Model.PropertyMask do
  @moduledoc """
  The set of arbitrarily nested property paths used to restrict an operation to only a subset of properties in an entity.

  ## Attributes

  *   `paths` (*type:* `list(String.t)`, *default:* `nil`) - The paths to the properties covered by this mask. A path is a list of property names separated by dots (`.`), for example `foo.bar` means the property `bar` inside the entity property `foo` inside the entity associated with this path. If a property name contains a dot `.` or a backslash `\\`, then that name must be escaped. A path must not be empty, and may not reference a value inside an array value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :paths => list(String.t()) | nil
        }

  field(:paths, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.PropertyMask do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.PropertyMask.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.PropertyMask do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
