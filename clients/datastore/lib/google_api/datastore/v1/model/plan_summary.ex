# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastore.V1.Model.PlanSummary do
  @moduledoc """
  Planning phase information for the query.

  ## Attributes

  *   `indexesUsed` (*type:* `list(map())`, *default:* `nil`) - The indexes selected for the query. For example: [ {"query_scope": "Collection", "properties": "(foo ASC, __name__ ASC)"}, {"query_scope": "Collection", "properties": "(bar ASC, __name__ ASC)"} ]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :indexesUsed => list(map()) | nil
        }

  field(:indexesUsed, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.PlanSummary do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.PlanSummary.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.PlanSummary do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
