# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastore.V1.Model.AggregationResult do
  @moduledoc """
  The result of a single bucket from a Datastore aggregation query. The keys of `aggregate_properties` are the same for all results in an aggregation query, unlike entity queries which can have different fields present for each result.

  ## Attributes

  *   `aggregateProperties` (*type:* `%{optional(String.t) => GoogleApi.Datastore.V1.Model.Value.t}`, *default:* `nil`) - The result of the aggregation functions, ex: `COUNT(*) AS total_entities`. The key is the alias assigned to the aggregation function on input and the size of this map equals the number of aggregation functions in the query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregateProperties =>
            %{optional(String.t()) => GoogleApi.Datastore.V1.Model.Value.t()} | nil
        }

  field(:aggregateProperties, as: GoogleApi.Datastore.V1.Model.Value, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.AggregationResult do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.AggregationResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.AggregationResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
