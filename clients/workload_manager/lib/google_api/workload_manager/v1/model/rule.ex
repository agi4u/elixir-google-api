# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WorkloadManager.V1.Model.Rule do
  @moduledoc """
  Message represent a rule

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - descrite rule in plain language
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - the name display in UI
  *   `errorMessage` (*type:* `String.t`, *default:* `nil`) - the message template for rule
  *   `name` (*type:* `String.t`, *default:* `nil`) - rule name
  *   `primaryCategory` (*type:* `String.t`, *default:* `nil`) - the primary category
  *   `remediation` (*type:* `String.t`, *default:* `nil`) - the remediation for the rule
  *   `revisionId` (*type:* `String.t`, *default:* `nil`) - Output only. the version of the rule
  *   `secondaryCategory` (*type:* `String.t`, *default:* `nil`) - the secondary category
  *   `severity` (*type:* `String.t`, *default:* `nil`) - the severity of the rule
  *   `tags` (*type:* `list(String.t)`, *default:* `nil`) - List of user-defined tags
  *   `uri` (*type:* `String.t`, *default:* `nil`) - the docuement url for the rule
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :displayName => String.t() | nil,
          :errorMessage => String.t() | nil,
          :name => String.t() | nil,
          :primaryCategory => String.t() | nil,
          :remediation => String.t() | nil,
          :revisionId => String.t() | nil,
          :secondaryCategory => String.t() | nil,
          :severity => String.t() | nil,
          :tags => list(String.t()) | nil,
          :uri => String.t() | nil
        }

  field(:description)
  field(:displayName)
  field(:errorMessage)
  field(:name)
  field(:primaryCategory)
  field(:remediation)
  field(:revisionId)
  field(:secondaryCategory)
  field(:severity)
  field(:tags, type: :list)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.WorkloadManager.V1.Model.Rule do
  def decode(value, options) do
    GoogleApi.WorkloadManager.V1.Model.Rule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WorkloadManager.V1.Model.Rule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
