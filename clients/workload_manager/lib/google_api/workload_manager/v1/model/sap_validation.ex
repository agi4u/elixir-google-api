# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WorkloadManager.V1.Model.SapValidation do
  @moduledoc """
  A presentation of SAP workload insight. The schema of SAP workloads validation related data.

  ## Attributes

  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Required. The project_id of the cloud project that the Insight data comes from.
  *   `validationDetails` (*type:* `list(GoogleApi.WorkloadManager.V1.Model.SapValidationValidationDetail.t)`, *default:* `nil`) - Optional. A list of SAP validation metrics data.
  *   `zone` (*type:* `String.t`, *default:* `nil`) - Optional. The zone of the instance that the Insight data comes from.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :projectId => String.t() | nil,
          :validationDetails =>
            list(GoogleApi.WorkloadManager.V1.Model.SapValidationValidationDetail.t()) | nil,
          :zone => String.t() | nil
        }

  field(:projectId)

  field(:validationDetails,
    as: GoogleApi.WorkloadManager.V1.Model.SapValidationValidationDetail,
    type: :list
  )

  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.WorkloadManager.V1.Model.SapValidation do
  def decode(value, options) do
    GoogleApi.WorkloadManager.V1.Model.SapValidation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WorkloadManager.V1.Model.SapValidation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
