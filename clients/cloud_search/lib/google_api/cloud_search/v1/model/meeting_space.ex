# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.MeetingSpace do
  @moduledoc """
   A meeting space is a persistent object that is the context for one or more calls. The meeting space is what makes users find each other when they want to meet and to find shared resources. With two exceptions, all the fields in the meeting space resource are visible publicly to any client, even anonymous users. The exceptions are that * The call_info field is only visible to clients that have a device (as indicated by the meeting token) in the JOINED or HIDDEN state. * The meeting_alias field will only be set for users who are in the same domain as the meeting space. The meeting space resource (outside call_info) should only contain information necessary to join a call in the meeting space, and not any other metadata about the meeting space, such as what organization it belongs to or things related to ongoing calls.

  ## Attributes

  *   `acceptedNumberClass` (*type:* `list(String.t)`, *default:* `nil`) - Which number classes are accepted by this meeting at the moment? When there is no ongoing conference, this field may change independent of the version number of the MeetingSpace. When a conference starts, this field will be locked to the value at that time, and then will be unlocked again at the end of the conference.
  *   `broadcastAccess` (*type:* `GoogleApi.CloudSearch.V1.Model.BroadcastAccess.t`, *default:* `nil`) - Broadcast access information for this meeting space.
  *   `callInfo` (*type:* `GoogleApi.CloudSearch.V1.Model.CallInfo.t`, *default:* `nil`) - Information relevant to an ongoing conference. This field will be set in responses if the client requesting the meeting space has a device in one of the JOINED, HIDDEN, or MISSING_PREREQUISITES states. The field will also be set without a created device if the client requesting the meeting space is eligible to directly create a device in the JOINED state without knocking, eg a same-domain joiner. Can also only be updated by clients with a device in the JOINED state.
  *   `gatewayAccess` (*type:* `GoogleApi.CloudSearch.V1.Model.GatewayAccess.t`, *default:* `nil`) - The interop gateway access information for the meeting space. A gateway access can be used when joining conferences from non-Google equipment through an interop gateway.
  *   `gatewaySipAccess` (*type:* `list(GoogleApi.CloudSearch.V1.Model.GatewaySipAccess.t)`, *default:* `nil`) - The SIP based access methods that can be used to join the conference.
  *   `meetingAlias` (*type:* `String.t`, *default:* `nil`) - An optional alias for the meeting space. The alias can in some cases be resolved to the meeting space, similar to the meeting code. The limitation is that the user needs to be in the same meeting domain as the meeting space. See go/thor-backend/meeting-alias for more details.
  *   `meetingCode` (*type:* `String.t`, *default:* `nil`) - A meeting code is a globally unique code which points to a meeting space. Note: Meeting codes may be regenerated, which will cause old meeting codes to become invalid.
  *   `meetingSpaceId` (*type:* `String.t`, *default:* `nil`) - A unique server-generated ID for the meeting space. This is the resource name of the meeting space resource and has the form `spaces/`, where is a sequence of characters in the [base64url set](https://tools.ietf.org/html/rfc4648#section-5), without any `=` characters.
  *   `meetingUrl` (*type:* `String.t`, *default:* `nil`) - A URL to identify and access the meeting space. Output only.
  *   `moreJoinUrl` (*type:* `String.t`, *default:* `nil`) - Output only. A URL that clients (e.g. Calendar) can use to show the web page with all join methods available for this meeting space. This link is also used in iOS universal links and Android intents, used for opening the "More ways to join" view in the Thor mobile apps. Example: https://tel.meet/mee-ting-cod?pin=1234567891011 Here, "pin" is the universal phone PIN. We include it explicitly to better support the offline case on the mobile. This is set when the meeting space has either a universal PIN or an interop PIN and clients who can show a "more ways to join" button should show it whenever this field is set.
  *   `phoneAccess` (*type:* `list(GoogleApi.CloudSearch.V1.Model.PhoneAccess.t)`, *default:* `nil`) - All regional phone access methods for this meeting space. Can be empty.
  *   `settings` (*type:* `GoogleApi.CloudSearch.V1.Model.Settings.t`, *default:* `nil`) - Settings of the meeting space.
  *   `universalPhoneAccess` (*type:* `GoogleApi.CloudSearch.V1.Model.UniversalPhoneAccess.t`, *default:* `nil`) - A universal phone access method for this meeting space. Can be unset.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acceptedNumberClass => list(String.t()) | nil,
          :broadcastAccess => GoogleApi.CloudSearch.V1.Model.BroadcastAccess.t() | nil,
          :callInfo => GoogleApi.CloudSearch.V1.Model.CallInfo.t() | nil,
          :gatewayAccess => GoogleApi.CloudSearch.V1.Model.GatewayAccess.t() | nil,
          :gatewaySipAccess => list(GoogleApi.CloudSearch.V1.Model.GatewaySipAccess.t()) | nil,
          :meetingAlias => String.t() | nil,
          :meetingCode => String.t() | nil,
          :meetingSpaceId => String.t() | nil,
          :meetingUrl => String.t() | nil,
          :moreJoinUrl => String.t() | nil,
          :phoneAccess => list(GoogleApi.CloudSearch.V1.Model.PhoneAccess.t()) | nil,
          :settings => GoogleApi.CloudSearch.V1.Model.Settings.t() | nil,
          :universalPhoneAccess => GoogleApi.CloudSearch.V1.Model.UniversalPhoneAccess.t() | nil
        }

  field(:acceptedNumberClass, type: :list)
  field(:broadcastAccess, as: GoogleApi.CloudSearch.V1.Model.BroadcastAccess)
  field(:callInfo, as: GoogleApi.CloudSearch.V1.Model.CallInfo)
  field(:gatewayAccess, as: GoogleApi.CloudSearch.V1.Model.GatewayAccess)
  field(:gatewaySipAccess, as: GoogleApi.CloudSearch.V1.Model.GatewaySipAccess, type: :list)
  field(:meetingAlias)
  field(:meetingCode)
  field(:meetingSpaceId)
  field(:meetingUrl)
  field(:moreJoinUrl)
  field(:phoneAccess, as: GoogleApi.CloudSearch.V1.Model.PhoneAccess, type: :list)
  field(:settings, as: GoogleApi.CloudSearch.V1.Model.Settings)
  field(:universalPhoneAccess, as: GoogleApi.CloudSearch.V1.Model.UniversalPhoneAccess)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.MeetingSpace do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.MeetingSpace.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.MeetingSpace do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
