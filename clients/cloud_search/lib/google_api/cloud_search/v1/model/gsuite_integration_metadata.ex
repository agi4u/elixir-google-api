# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata do
  @moduledoc """
  Annotation metadata for an GsuiteIntegration artifact.

  ## Attributes

  *   `activityFeedData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedActivityFeedAnnotationData.t`, *default:* `nil`) - 
  *   `assistantData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedAssistantAnnotationData.t`, *default:* `nil`) - 
  *   `calendarEventData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCalendarEventAnnotationData.t`, *default:* `nil`) - 
  *   `callData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCallAnnotationData.t`, *default:* `nil`) - Data used to render call artifacts.
  *   `clientType` (*type:* `String.t`, *default:* `nil`) - 
  *   `indexableTexts` (*type:* `list(String.t)`, *default:* `nil`) - A list of all strings that are to be indexed for this 1P chip. Each string in this list would be the contents of a single string field in the 1P chip. Eg. For Tasks[title = “hello world”, description = “good bye”]. If we want to index only the title, this would be set to [“hello world”]. If both title and description, then this would be [“hello world”, “good bye”]. Please make sure that the contents of this field is a subset of strings that are rendered as part of the 1P Chip.
  *   `tasksData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedTasksAnnotationData.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activityFeedData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedActivityFeedAnnotationData.t() | nil,
          :assistantData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedAssistantAnnotationData.t() | nil,
          :calendarEventData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCalendarEventAnnotationData.t() | nil,
          :callData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCallAnnotationData.t() | nil,
          :clientType => String.t() | nil,
          :indexableTexts => list(String.t()) | nil,
          :tasksData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedTasksAnnotationData.t() | nil
        }

  field(:activityFeedData,
    as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedActivityFeedAnnotationData
  )

  field(:assistantData,
    as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedAssistantAnnotationData
  )

  field(:calendarEventData,
    as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCalendarEventAnnotationData
  )

  field(:callData, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCallAnnotationData)
  field(:clientType)
  field(:indexableTexts, type: :list)
  field(:tasksData, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedTasksAnnotationData)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
