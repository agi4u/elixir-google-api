# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action do
  @moduledoc """
  Interactive objects inside a message. Documentation: - https://api.slack.com/docs/message-buttons

  ## Attributes

  *   `confirm` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1ActionConfirm.t`, *default:* `nil`) - Confirmation dialog config.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Unique identifier for this action.
  *   `style` (*type:* `String.t`, *default:* `nil`) - Button style ("default", "primary", or "danger").
  *   `text` (*type:* `String.t`, *default:* `nil`) - User-facing label for the action.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Action type - currently only "button".
  *   `value` (*type:* `String.t`, *default:* `nil`) - Payload for this action. Will be sent to the action handler along with name.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confirm =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1ActionConfirm.t() | nil,
          :name => String.t() | nil,
          :style => String.t() | nil,
          :text => String.t() | nil,
          :type => String.t() | nil,
          :value => String.t() | nil
        }

  field(:confirm, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1ActionConfirm)
  field(:name)
  field(:style)
  field(:text)
  field(:type)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
