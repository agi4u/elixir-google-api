# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AppsDynamiteAttachment do
  @moduledoc """
  Attachments that follow the message text.

  ## Attributes

  *   `addOnData` (*type:* `GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup.t`, *default:* `nil`) - Revised version of Gmail AddOn attachment approved by API design review.
  *   `appId` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteUserId.t`, *default:* `nil`) - The userId for the bot/app that created this data, to be used for attribution of attachments when the attachment was not created by the message sender.
  *   `attachmentId` (*type:* `String.t`, *default:* `nil`) - To identify an attachment within repeated in a message
  *   `cardAddOnData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCard.t`, *default:* `nil`) - Card AddOn attachment with the possibility for specifying editable widgets.
  *   `deprecatedAddOnData` (*type:* `GoogleApi.CloudSearch.V1.Model.ContextualAddOnMarkup.t`, *default:* `nil`) - Deprecated version of Gmail AddOn attachment.
  *   `slackData` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment.t`, *default:* `nil`) - Slack attachment.
  *   `slackDataImageUrlHeight` (*type:* `integer()`, *default:* `nil`) - The height of image url as fetched by fife. This field is asynchronously filled.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :addOnData =>
            GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup.t() | nil,
          :appId => GoogleApi.CloudSearch.V1.Model.AppsDynamiteUserId.t() | nil,
          :attachmentId => String.t() | nil,
          :cardAddOnData => GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCard.t() | nil,
          :deprecatedAddOnData => GoogleApi.CloudSearch.V1.Model.ContextualAddOnMarkup.t() | nil,
          :slackData =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment.t() | nil,
          :slackDataImageUrlHeight => integer() | nil
        }

  field(:addOnData, as: GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup)
  field(:appId, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteUserId)
  field(:attachmentId)
  field(:cardAddOnData, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedCard)
  field(:deprecatedAddOnData, as: GoogleApi.CloudSearch.V1.Model.ContextualAddOnMarkup)
  field(:slackData, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment)
  field(:slackDataImageUrlHeight)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteAttachment do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AppsDynamiteAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
