# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.OpenCreatedDraftActionMarkup do
  @moduledoc """


  ## Attributes

  *   `draftId` (*type:* `String.t`, *default:* `nil`) - The ID of the newly created draft in the form "r123".
  *   `draftStorageId` (*type:* `String.t`, *default:* `nil`) - The server storage ID in hex format, for example,"15e9fa622ce1029d".
  *   `draftThreadId` (*type:* `String.t`, *default:* `nil`) - The ID of the thread containing the newly created draft, for example, "15e9fa622ce1029d".
  *   `draftThreadServerPermId` (*type:* `String.t`, *default:* `nil`) - The server permanent ID for the draft's thread. This field isn't set anywhere, and it's ignored when processing OpenCreatedDraftActionMarkup. Supply and use draftThreadStorageId instead.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :draftId => String.t() | nil,
          :draftStorageId => String.t() | nil,
          :draftThreadId => String.t() | nil,
          :draftThreadServerPermId => String.t() | nil
        }

  field(:draftId)
  field(:draftStorageId)
  field(:draftThreadId)
  field(:draftThreadServerPermId)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.OpenCreatedDraftActionMarkup do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.OpenCreatedDraftActionMarkup.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.OpenCreatedDraftActionMarkup do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
