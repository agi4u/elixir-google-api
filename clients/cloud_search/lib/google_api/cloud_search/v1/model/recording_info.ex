# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.RecordingInfo do
  @moduledoc """
  This message is deprecated, please use RecordingSessionInfo instead. Information about recording in the current conference.

  ## Attributes

  *   `latestRecordingEvent` (*type:* `GoogleApi.CloudSearch.V1.Model.RecordingEvent.t`, *default:* `nil`) - The latest recording event. This can be used by clients to help explain what is going on, why recording stopped, etc. This will always be set if there is or was an active recording, which means there can be latest event when recording is INACTIVE.
  *   `ownerDisplayName` (*type:* `String.t`, *default:* `nil`) - The display name of the owner of the recording output. Email notifications about uploaded recordings will also be sent to this owner.
  *   `producerDeviceId` (*type:* `String.t`, *default:* `nil`) - The device resource name of the producer device for the currently active recording. Note that, after the producer drops/leaves the conference, this field will be cleaned up by the server after a delay.
  *   `recordingApplicationType` (*type:* `String.t`, *default:* `nil`) - The application type of the current active recording. `RECORDING_APPLICATION_TYPE_UNSPECIFIED` if `recording_status` is inactive.
  *   `recordingId` (*type:* `String.t`, *default:* `nil`) - An identifier for the current recording, if any. This is returned whenever recording_status is either `RECORDING_STARTING` or `RECORDING_STARTED`.
  *   `recordingStatus` (*type:* `String.t`, *default:* `nil`) - The current status of the recording. This can be used by clients to show a recording dot or similar to indicated to the user that a recording is taking place.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :latestRecordingEvent => GoogleApi.CloudSearch.V1.Model.RecordingEvent.t() | nil,
          :ownerDisplayName => String.t() | nil,
          :producerDeviceId => String.t() | nil,
          :recordingApplicationType => String.t() | nil,
          :recordingId => String.t() | nil,
          :recordingStatus => String.t() | nil
        }

  field(:latestRecordingEvent, as: GoogleApi.CloudSearch.V1.Model.RecordingEvent)
  field(:ownerDisplayName)
  field(:producerDeviceId)
  field(:recordingApplicationType)
  field(:recordingId)
  field(:recordingStatus)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.RecordingInfo do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.RecordingInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.RecordingInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
