# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AclFixRequest do
  @moduledoc """
  The request set by clients to instruct Backend how the user intend to fix the ACL. Technically it's not a request to ACL Fixer, because Backend uses /DriveService.Share to modify Drive ACLs.

  ## Attributes

  *   `recipientEmails` (*type:* `list(String.t)`, *default:* `nil`) - For Spaces messages: This field is ignored. For DMs messages: The list of email addresses that should be added to the Drive item's ACL. In general, the list should not be empty when the boolean "should_fix" field is set; otherwise, the list should be empty. During transition - when clients do not specify this field but the "should_fix" is true, we follow the legacy behavior: share to all users in the DM regardless of emails. This behavior is being phased out.
  *   `role` (*type:* `String.t`, *default:* `nil`) - 
  *   `shouldFix` (*type:* `boolean()`, *default:* `nil`) - Whether to attempt to fix the ACL by adding the room or DM members to the Drive file's ACL.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :recipientEmails => list(String.t()) | nil,
          :role => String.t() | nil,
          :shouldFix => boolean() | nil
        }

  field(:recipientEmails, type: :list)
  field(:role)
  field(:shouldFix)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.AclFixRequest do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AclFixRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.AclFixRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
