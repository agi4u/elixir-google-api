# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.BroadcastAccess do
  @moduledoc """
  Broadcast access information of a meeting space.

  ## Attributes

  *   `accessPolicy` (*type:* `String.t`, *default:* `nil`) - The policy that controls the broadcast's viewer access.
  *   `viewUrl` (*type:* `String.t`, *default:* `nil`) - A URL that can be used to access the broadcast of the meeting. This field will be empty if broadcast is not enabled. It will be populated by the backend. Clients cannot modify the value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessPolicy => String.t() | nil,
          :viewUrl => String.t() | nil
        }

  field(:accessPolicy)
  field(:viewUrl)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.BroadcastAccess do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.BroadcastAccess.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.BroadcastAccess do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
