# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment do
  @moduledoc """
  Richly formatted attachments. Documentation: - https://api.slack.com/docs/message-attachments

  ## Attributes

  *   `actions` (*type:* `list(GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action.t)`, *default:* `nil`) - Array of actions (currently only buttons).
  *   `attachment_type` (*type:* `String.t`, *default:* `nil`) - Undocumented - used in interactive button examples. The only valid value appears to be "default".
  *   `author_icon` (*type:* `String.t`, *default:* `nil`) - Avatar URL for the user.
  *   `author_link` (*type:* `String.t`, *default:* `nil`) - URL that the user name should link to.
  *   `author_name` (*type:* `String.t`, *default:* `nil`) - User name to display as the author of the message.
  *   `callback_id` (*type:* `String.t`, *default:* `nil`) - Unique identifier for the collection of buttons within this attachment. Will be sent back to the action handler URL when a button is clicked.
  *   `color` (*type:* `String.t`, *default:* `nil`) - A color "bar" to display to the left of the attachment.
  *   `fallback` (*type:* `String.t`, *default:* `nil`) - Fallback plain-text string for clients that don't support attachments.
  *   `fields` (*type:* `list(GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Field.t)`, *default:* `nil`) - Columns of text inside the attachment body.
  *   `footer` (*type:* `String.t`, *default:* `nil`) - A string displayed at the bottom of the attachment.
  *   `footer_icon` (*type:* `String.t`, *default:* `nil`) - Avatar URL displayed to the left of the footer.
  *   `image_url` (*type:* `String.t`, *default:* `nil`) - URL of an image to display in an image chip.
  *   `mrkdwn_in` (*type:* `list(String.t)`, *default:* `nil`) - List of fields to apply formatting to.
  *   `pretext` (*type:* `String.t`, *default:* `nil`) - A string to show above the attachment.
  *   `text` (*type:* `String.t`, *default:* `nil`) - Main text.
  *   `thumb_url` (*type:* `String.t`, *default:* `nil`) - URL of a thumbnail image to display to the right of the attachment body.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Title string of this attachment.
  *   `title_link` (*type:* `String.t`, *default:* `nil`) - URL that the title string should link to.
  *   `ts` (*type:* `integer()`, *default:* `nil`) - UNIX timestamp of the attachment.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actions =>
            list(GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action.t()) | nil,
          :attachment_type => String.t() | nil,
          :author_icon => String.t() | nil,
          :author_link => String.t() | nil,
          :author_name => String.t() | nil,
          :callback_id => String.t() | nil,
          :color => String.t() | nil,
          :fallback => String.t() | nil,
          :fields =>
            list(GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Field.t()) | nil,
          :footer => String.t() | nil,
          :footer_icon => String.t() | nil,
          :image_url => String.t() | nil,
          :mrkdwn_in => list(String.t()) | nil,
          :pretext => String.t() | nil,
          :text => String.t() | nil,
          :thumb_url => String.t() | nil,
          :title => String.t() | nil,
          :title_link => String.t() | nil,
          :ts => integer() | nil
        }

  field(:actions, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Action, type: :list)
  field(:attachment_type)
  field(:author_icon)
  field(:author_link)
  field(:author_name)
  field(:callback_id)
  field(:color)
  field(:fallback)
  field(:fields, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Field, type: :list)
  field(:footer)
  field(:footer_icon)
  field(:image_url)
  field(:mrkdwn_in, type: :list)
  field(:pretext)
  field(:text)
  field(:thumb_url)
  field(:title)
  field(:title_link)
  field(:ts)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteV1ApiCompatV1Attachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
