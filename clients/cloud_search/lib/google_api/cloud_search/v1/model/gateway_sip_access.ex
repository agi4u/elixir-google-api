# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.GatewaySipAccess do
  @moduledoc """
  Details how to join the conference via a SIP gateway.

  ## Attributes

  *   `sipAccessCode` (*type:* `String.t`, *default:* `nil`) - Permanent numeric code for manual entry on specially configured devices, currently the same as the PSTN "Universal pin".
  *   `uri` (*type:* `String.t`, *default:* `nil`) - The SIP URI the conference can be reached through. The string is on one of the formats: "sip:@" "sips:@" where currently is the 13-digit universal pin (with the future option to support using a Meet meeting code as well), and is a valid address to be resolved using a DNS SRV lookup, or a dotted quad.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :sipAccessCode => String.t() | nil,
          :uri => String.t() | nil
        }

  field(:sipAccessCode)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.GatewaySipAccess do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.GatewaySipAccess.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.GatewaySipAccess do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
