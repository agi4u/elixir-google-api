# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedBackendUploadMetadata do
  @moduledoc """
  Metadata used only in Dynamite backend for uploaded attachments.

  ## Attributes

  *   `blobPath` (*type:* `String.t`, *default:* `nil`) - Blobstore path for the uploaded attachment
  *   `contentName` (*type:* `String.t`, *default:* `nil`) - The original file name for the content, not the full path.
  *   `contentSize` (*type:* `String.t`, *default:* `nil`) - Scotty reported content size by default. http://google3/uploader/agent/scotty_agent.proto?l=101&rcl=140889785
  *   `contentType` (*type:* `String.t`, *default:* `nil`) - Type is from Scotty's best_guess by default: http://google3/uploader/agent/scotty_agent.proto?l=51&rcl=140889785
  *   `dlpScanOutcome` (*type:* `String.t`, *default:* `nil`) - The results of the Data Loss Prevention (DLP) scan of the attachment. DEPRECATED: use dlp_scan_summary instead.
  *   `dlpScanSummary` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteBackendDlpScanSummary.t`, *default:* `nil`) - Summary of a Data Loss Prevention (DLP) scan of the attachment. Attachments are evaluated in the backend when they are uploaded.
  *   `groupId` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteGroupId.t`, *default:* `nil`) - GroupId to which this attachment is uploaded.
  *   `originalDimension` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedDimension.t`, *default:* `nil`) - Original dimension of the content. Only set for image attachments.
  *   `quoteReplyMessageId` (*type:* `GoogleApi.CloudSearch.V1.Model.AppsDynamiteMessageId.t`, *default:* `nil`) - The message id of a quote reply referencing this attachment. When present, this attachment has been quoted in a reply message. Normally, the attachment is fetched through the message id in the blob_path, but in the case of a quote reply, the blob_path would contain the quoted message id. Thus this message id field is needed to fetch the quote reply message instead. This field is conditionally populated at read time for quotes and never persisted in storage. See go/message-quoting-attachments for more context.
  *   `sha256` (*type:* `String.t`, *default:* `nil`) - The SHA256 hash of the attachment bytes.
  *   `uploadIp` (*type:* `String.t`, *default:* `nil`) - User IP address at upload time. Ex. "123.1.2.3". Used by Ares abuse scanning.
  *   `uploadTimestampUsec` (*type:* `String.t`, *default:* `nil`) - Timestamp of when user finished uploading the content.
  *   `videoId` (*type:* `String.t`, *default:* `nil`) - VideoID of the video attachments. This ID shall meets the Youtube ID format of 16 hex characters. For example, '4c14b8825af6059b' is a valid ID.
  *   `videoThumbnailBlobId` (*type:* `String.t`, *default:* `nil`) - Full Blobstore ID for the video thumbnail.
  *   `virusScanResult` (*type:* `String.t`, *default:* `nil`) - Result for a virus scan.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blobPath => String.t() | nil,
          :contentName => String.t() | nil,
          :contentSize => String.t() | nil,
          :contentType => String.t() | nil,
          :dlpScanOutcome => String.t() | nil,
          :dlpScanSummary =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteBackendDlpScanSummary.t() | nil,
          :groupId => GoogleApi.CloudSearch.V1.Model.AppsDynamiteGroupId.t() | nil,
          :originalDimension =>
            GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedDimension.t() | nil,
          :quoteReplyMessageId => GoogleApi.CloudSearch.V1.Model.AppsDynamiteMessageId.t() | nil,
          :sha256 => String.t() | nil,
          :uploadIp => String.t() | nil,
          :uploadTimestampUsec => String.t() | nil,
          :videoId => String.t() | nil,
          :videoThumbnailBlobId => String.t() | nil,
          :virusScanResult => String.t() | nil
        }

  field(:blobPath)
  field(:contentName)
  field(:contentSize)
  field(:contentType)
  field(:dlpScanOutcome)
  field(:dlpScanSummary, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteBackendDlpScanSummary)
  field(:groupId, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteGroupId)
  field(:originalDimension, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedDimension)
  field(:quoteReplyMessageId, as: GoogleApi.CloudSearch.V1.Model.AppsDynamiteMessageId)
  field(:sha256)
  field(:uploadIp)
  field(:uploadTimestampUsec)
  field(:videoId)
  field(:videoThumbnailBlobId)
  field(:virusScanResult)
end

defimpl Poison.Decoder,
  for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedBackendUploadMetadata do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedBackendUploadMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.CloudSearch.V1.Model.AppsDynamiteSharedBackendUploadMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
