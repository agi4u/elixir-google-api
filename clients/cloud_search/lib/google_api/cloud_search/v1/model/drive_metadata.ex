# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.DriveMetadata do
  @moduledoc """
  Annotation metadata for Drive artifacts.

  ## Attributes

  *   `aclFixRequest` (*type:* `GoogleApi.CloudSearch.V1.Model.AclFixRequest.t`, *default:* `nil`) - 
  *   `aclFixStatus` (*type:* `GoogleApi.CloudSearch.V1.Model.AclFixStatus.t`, *default:* `nil`) - 
  *   `canEdit` (*type:* `boolean()`, *default:* `nil`) - Can the current user edit this resource
  *   `canShare` (*type:* `boolean()`, *default:* `nil`) - Can the current user share this resource
  *   `canView` (*type:* `boolean()`, *default:* `nil`) - Can the current user view this resource
  *   `driveAction` (*type:* `String.t`, *default:* `nil`) - DriveAction for organizing this file in Drive. If the user does not have access to the Drive file, the value will be DriveAction.DRIVE_ACTION_UNSPECIFIED. This field is only set when part of a FileResult in a ListFilesResponse.
  *   `driveState` (*type:* `String.t`, *default:* `nil`) - 
  *   `embedUrl` (*type:* `GoogleApi.CloudSearch.V1.Model.TrustedResourceUrlProto.t`, *default:* `nil`) - Output only. Trusted Resource URL for drive file embedding.
  *   `encryptedDocId` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the Drive link contains an encrypted doc ID. If true, Dynamite should not attempt to query the doc ID in Drive Service. See go/docid-encryption for details.
  *   `encryptedResourceKey` (*type:* `String.t`, *default:* `nil`) - This is deprecated and unneeded. TODO (b/182479059): Remove this.
  *   `externalMimetype` (*type:* `String.t`, *default:* `nil`) - External mimetype of the Drive Resource (Useful for creating Drive URL) See: http://b/35219462
  *   `id` (*type:* `String.t`, *default:* `nil`) - Drive resource ID of the artifact.
  *   `isDownloadRestricted` (*type:* `boolean()`, *default:* `nil`) - Deprecated. Whether the setting to restrict downloads is enabled for this file. This was previously used to determine whether to hide the download and print buttons in the UI, but is no longer used by clients, because Projector now independently queries Drive to ensure that we have the most up-to-date value.
  *   `isOwner` (*type:* `boolean()`, *default:* `nil`) - If the current user is the Drive file's owner. The field is currently only set for Annotations for the ListFiles action (as opposed to fetching Topics/Messages with Drive annotations).
  *   `legacyUploadMetadata` (*type:* `GoogleApi.CloudSearch.V1.Model.LegacyUploadMetadata.t`, *default:* `nil`) - Only present if this DriveMetadata is converted from an UploadMetadata.
  *   `mimetype` (*type:* `String.t`, *default:* `nil`) - Mimetype of the Drive Resource
  *   `organizationDisplayName` (*type:* `String.t`, *default:* `nil`) - The display name of the organization owning the Drive item.
  *   `shortcutAuthorizedItemId` (*type:* `GoogleApi.CloudSearch.V1.Model.AuthorizedItemId.t`, *default:* `nil`) - Shortcut ID of this drive file in the shared drive, which is associated with a named room this file was shared in. Shortcuts will not be created for DMs or unnamed rooms. This is populated after the DriveMetadata is migrated to shared drive. go/chat-shared-drive-uploads.
  *   `shouldNotRender` (*type:* `boolean()`, *default:* `nil`) - If this field is set to true, server should still contact external backends to get metadata for search but clients should not render this chip.
  *   `thumbnailHeight` (*type:* `integer()`, *default:* `nil`) - Thumbnail image of the Drive Resource
  *   `thumbnailUrl` (*type:* `String.t`, *default:* `nil`) - Thumbnail image of the Drive Resource
  *   `thumbnailWidth` (*type:* `integer()`, *default:* `nil`) - Thumbnail image of the Drive Resource
  *   `title` (*type:* `String.t`, *default:* `nil`) - Title of the Drive Resource
  *   `urlFragment` (*type:* `String.t`, *default:* `nil`) - Url string fragment that generally indicates the specific location in the linked file. Example: #header=h.123abc456. If the fragment is not present this will not be present and therefore default to an empty string. The "#" will not be included.
  *   `wrappedResourceKey` (*type:* `GoogleApi.CloudSearch.V1.Model.WrappedResourceKey.t`, *default:* `nil`) - This is considered SPII and should not be logged.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aclFixRequest => GoogleApi.CloudSearch.V1.Model.AclFixRequest.t() | nil,
          :aclFixStatus => GoogleApi.CloudSearch.V1.Model.AclFixStatus.t() | nil,
          :canEdit => boolean() | nil,
          :canShare => boolean() | nil,
          :canView => boolean() | nil,
          :driveAction => String.t() | nil,
          :driveState => String.t() | nil,
          :embedUrl => GoogleApi.CloudSearch.V1.Model.TrustedResourceUrlProto.t() | nil,
          :encryptedDocId => boolean() | nil,
          :encryptedResourceKey => String.t() | nil,
          :externalMimetype => String.t() | nil,
          :id => String.t() | nil,
          :isDownloadRestricted => boolean() | nil,
          :isOwner => boolean() | nil,
          :legacyUploadMetadata => GoogleApi.CloudSearch.V1.Model.LegacyUploadMetadata.t() | nil,
          :mimetype => String.t() | nil,
          :organizationDisplayName => String.t() | nil,
          :shortcutAuthorizedItemId => GoogleApi.CloudSearch.V1.Model.AuthorizedItemId.t() | nil,
          :shouldNotRender => boolean() | nil,
          :thumbnailHeight => integer() | nil,
          :thumbnailUrl => String.t() | nil,
          :thumbnailWidth => integer() | nil,
          :title => String.t() | nil,
          :urlFragment => String.t() | nil,
          :wrappedResourceKey => GoogleApi.CloudSearch.V1.Model.WrappedResourceKey.t() | nil
        }

  field(:aclFixRequest, as: GoogleApi.CloudSearch.V1.Model.AclFixRequest)
  field(:aclFixStatus, as: GoogleApi.CloudSearch.V1.Model.AclFixStatus)
  field(:canEdit)
  field(:canShare)
  field(:canView)
  field(:driveAction)
  field(:driveState)
  field(:embedUrl, as: GoogleApi.CloudSearch.V1.Model.TrustedResourceUrlProto)
  field(:encryptedDocId)
  field(:encryptedResourceKey)
  field(:externalMimetype)
  field(:id)
  field(:isDownloadRestricted)
  field(:isOwner)
  field(:legacyUploadMetadata, as: GoogleApi.CloudSearch.V1.Model.LegacyUploadMetadata)
  field(:mimetype)
  field(:organizationDisplayName)
  field(:shortcutAuthorizedItemId, as: GoogleApi.CloudSearch.V1.Model.AuthorizedItemId)
  field(:shouldNotRender)
  field(:thumbnailHeight)
  field(:thumbnailUrl)
  field(:thumbnailWidth)
  field(:title)
  field(:urlFragment)
  field(:wrappedResourceKey, as: GoogleApi.CloudSearch.V1.Model.WrappedResourceKey)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.DriveMetadata do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.DriveMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.DriveMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
