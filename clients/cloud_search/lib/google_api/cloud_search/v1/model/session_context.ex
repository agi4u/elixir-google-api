# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.SessionContext do
  @moduledoc """


  ## Attributes

  *   `authTime` (*type:* `String.t`, *default:* `nil`) - Time at which this activity's session was authenticated, in seconds since the epoch.
  *   `delegateUserId` (*type:* `String.t`, *default:* `nil`) - Gaia ID of the authenticated user when delegate access is active. In such sessions the main gaia ID is that of the delegator, i.e. the account being accessed.
  *   `dusi` (*type:* `String.t`, *default:* `nil`) - Device User Session ID, see go/dusi.
  *   `imapSessionContext` (*type:* `GoogleApi.CloudSearch.V1.Model.ImapSessionContext.t`, *default:* `nil`) - Imap session context for Bond/Gmail integration
  *   `oauthLoginId` (*type:* `integer()`, *default:* `nil`) - OAuth login ID.
  *   `oauthProjectId` (*type:* `String.t`, *default:* `nil`) - The devconsole project ID of the developer who authenticated with OAuth.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authTime => String.t() | nil,
          :delegateUserId => String.t() | nil,
          :dusi => String.t() | nil,
          :imapSessionContext => GoogleApi.CloudSearch.V1.Model.ImapSessionContext.t() | nil,
          :oauthLoginId => integer() | nil,
          :oauthProjectId => String.t() | nil
        }

  field(:authTime)
  field(:delegateUserId)
  field(:dusi)
  field(:imapSessionContext, as: GoogleApi.CloudSearch.V1.Model.ImapSessionContext)
  field(:oauthLoginId)
  field(:oauthProjectId)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.SessionContext do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.SessionContext.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.SessionContext do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
