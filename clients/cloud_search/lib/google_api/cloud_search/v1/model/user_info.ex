# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.UserInfo do
  @moduledoc """
  Contains info regarding the updater of an Activity Feed item. Next Id: 8

  ## Attributes

  *   `driveNotificationAvatarUrl` (*type:* `String.t`, *default:* `nil`) - Avatar url of the user who triggered the Drive Notification email. This field will be populated if we can extract such information from the Drive Notification email. This should only be used to fetch user avatars when updater_to_show_email is not populated. This field is not set for non-Drive Notification items.
  *   `updaterCountDisplayType` (*type:* `String.t`, *default:* `nil`) - Describes how updater_count_to_show should be used.
  *   `updaterCountToShow` (*type:* `integer()`, *default:* `nil`) - The number of updaters for clients to show depending on UpdaterCountDisplayType.
  *   `updaterToShowEmail` (*type:* `String.t`, *default:* `nil`) - The email of the updater for clients to show used for Gmail items. For Drive Notifications, this is the email of the user who triggered the Drive Notification email. This field will be populated if we can extract such information from the Drive Notification email. This is not the actual sender of the email, as the sender is always comments-noreply@docs.google.com.
  *   `updaterToShowGaiaId` (*type:* `String.t`, *default:* `nil`) - The gaia id of the updater for clients to show used for Gmail items. If the updater is an external user, the email field below should be populated.
  *   `updaterToShowName` (*type:* `String.t`, *default:* `nil`) - The display name of the updater for clients to show used for Gmail items. For non-Drive Notification items, this field will always be populated. If the display name cannot be found for the user, the fallback string will be the email address. For Drive Notification items, this is the name of the user who triggered the Drive notification email. This field will be populated if we can extract such information from the Drive Notification email. If the name cannot be extracted, then the email will be the fallback string, which is used as the display name text in the UI when needed. This is not the actual sender of the email, as the sender is always comments-noreply@docs.google.com.
  *   `updaterToShowUserId` (*type:* `GoogleApi.CloudSearch.V1.Model.UserId.t`, *default:* `nil`) - The updater for clients to show used for Dynamite Chat items.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :driveNotificationAvatarUrl => String.t() | nil,
          :updaterCountDisplayType => String.t() | nil,
          :updaterCountToShow => integer() | nil,
          :updaterToShowEmail => String.t() | nil,
          :updaterToShowGaiaId => String.t() | nil,
          :updaterToShowName => String.t() | nil,
          :updaterToShowUserId => GoogleApi.CloudSearch.V1.Model.UserId.t() | nil
        }

  field(:driveNotificationAvatarUrl)
  field(:updaterCountDisplayType)
  field(:updaterCountToShow)
  field(:updaterToShowEmail)
  field(:updaterToShowGaiaId)
  field(:updaterToShowName)
  field(:updaterToShowUserId, as: GoogleApi.CloudSearch.V1.Model.UserId)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.UserInfo do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.UserInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.UserInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
