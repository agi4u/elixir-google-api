# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.PrivateMessageInfo do
  @moduledoc """
  Private message information specific to a given user.

  ## Attributes

  *   `annotations` (*type:* `list(GoogleApi.CloudSearch.V1.Model.Annotation.t)`, *default:* `nil`) - Annotations private to {@code userId}.
  *   `attachments` (*type:* `list(GoogleApi.CloudSearch.V1.Model.Attachment.t)`, *default:* `nil`) - Attachments private to {@code userId}.
  *   `contextualAddOnMarkup` (*type:* `list(GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup.t)`, *default:* `nil`) - 
  *   `gsuiteIntegrationMetadata` (*type:* `list(GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata.t)`, *default:* `nil`) - 
  *   `text` (*type:* `String.t`, *default:* `nil`) - Text private to {@code user_id}. Initial restriction: Only one of public text or private text is rendered on the client. So if public text is set, private text is ignored.
  *   `userId` (*type:* `GoogleApi.CloudSearch.V1.Model.UserId.t`, *default:* `nil`) - Required. The elements in this struct are visible to this user.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotations => list(GoogleApi.CloudSearch.V1.Model.Annotation.t()) | nil,
          :attachments => list(GoogleApi.CloudSearch.V1.Model.Attachment.t()) | nil,
          :contextualAddOnMarkup =>
            list(GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup.t()) | nil,
          :gsuiteIntegrationMetadata =>
            list(GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata.t()) | nil,
          :text => String.t() | nil,
          :userId => GoogleApi.CloudSearch.V1.Model.UserId.t() | nil
        }

  field(:annotations, as: GoogleApi.CloudSearch.V1.Model.Annotation, type: :list)
  field(:attachments, as: GoogleApi.CloudSearch.V1.Model.Attachment, type: :list)

  field(:contextualAddOnMarkup,
    as: GoogleApi.CloudSearch.V1.Model.GoogleChatV1ContextualAddOnMarkup,
    type: :list
  )

  field(:gsuiteIntegrationMetadata,
    as: GoogleApi.CloudSearch.V1.Model.GsuiteIntegrationMetadata,
    type: :list
  )

  field(:text)
  field(:userId, as: GoogleApi.CloudSearch.V1.Model.UserId)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.PrivateMessageInfo do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.PrivateMessageInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.PrivateMessageInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
