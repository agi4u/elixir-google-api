# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.VoicePhoneNumber do
  @moduledoc """
  Represents both long and short phone number that can be called or texted. Short telephone numbers are used to reach local services. Short numbers and their purpose differ from country to country. These numbers in US are in the form of N11 which is a three-digit abbreviated dialing telephone number.

  ## Attributes

  *   `e164` (*type:* `String.t`, *default:* `nil`) - E.164 formatted full phone number with leading +. This field also represents encoded form of short telephone numbers in E.164 format. e.g. "911" is encoded as "+1911".
  *   `i18nData` (*type:* `GoogleApi.CloudSearch.V1.Model.VoicePhoneNumberI18nData.t`, *default:* `nil`) - Additional data that could be added using the libphonenumber API.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :e164 => String.t() | nil,
          :i18nData => GoogleApi.CloudSearch.V1.Model.VoicePhoneNumberI18nData.t() | nil
        }

  field(:e164)
  field(:i18nData, as: GoogleApi.CloudSearch.V1.Model.VoicePhoneNumberI18nData)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.VoicePhoneNumber do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.VoicePhoneNumber.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.VoicePhoneNumber do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
