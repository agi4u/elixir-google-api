# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.PreState do
  @moduledoc """
  State of the thread previous to the update. This really just describes the label state of all messages before the update.

  ## Attributes

  *   `labelIds` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `messageKey` (*type:* `GoogleApi.CloudSearch.V1.Model.MultiKey.t`, *default:* `nil`) - 
  *   `syncIds` (*type:* `list(integer())`, *default:* `nil`) - Note that there can be fewer sync ids than label ids.
  *   `threadKey` (*type:* `GoogleApi.CloudSearch.V1.Model.MultiKey.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :labelIds => list(String.t()) | nil,
          :messageKey => GoogleApi.CloudSearch.V1.Model.MultiKey.t() | nil,
          :syncIds => list(integer()) | nil,
          :threadKey => GoogleApi.CloudSearch.V1.Model.MultiKey.t() | nil
        }

  field(:labelIds, type: :list)
  field(:messageKey, as: GoogleApi.CloudSearch.V1.Model.MultiKey)
  field(:syncIds, type: :list)
  field(:threadKey, as: GoogleApi.CloudSearch.V1.Model.MultiKey)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.PreState do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.PreState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.PreState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
