# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.Section do
  @moduledoc """
  Sections are separated by a line divider. They contain a collection of widgets that are rendered (vertically) in the order that they are specified. Across all platforms, AddOns have a narrow fixed width, so there is currently no need for layout properties (e.g. float).

  ## Attributes

  *   `collapsable` (*type:* `boolean()`, *default:* `nil`) - Indicating whether this section is collapsable. If a section is collapsable, the description must be given.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The header of the section, text formatted supported.
  *   `numUncollapsableWidgets` (*type:* `integer()`, *default:* `nil`) - The number of uncollapsable widgets. For example, when a section contains 5 widgets and the num_uncollapsable_widget are set to be 2, The first 2 widgets will always shown and the last 3 is collapsed as default. Only when collapsable is set to be true, the num_uncollapsable_widget will be taken into account.
  *   `widgets` (*type:* `list(GoogleApi.CloudSearch.V1.Model.WidgetMarkup.t)`, *default:* `nil`) - A section must contain at least 1 widget.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :collapsable => boolean() | nil,
          :description => String.t() | nil,
          :numUncollapsableWidgets => integer() | nil,
          :widgets => list(GoogleApi.CloudSearch.V1.Model.WidgetMarkup.t()) | nil
        }

  field(:collapsable)
  field(:description)
  field(:numUncollapsableWidgets)
  field(:widgets, as: GoogleApi.CloudSearch.V1.Model.WidgetMarkup, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.Section do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.Section.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.Section do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
