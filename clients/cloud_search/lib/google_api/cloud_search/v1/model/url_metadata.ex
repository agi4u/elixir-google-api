# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.UrlMetadata do
  @moduledoc """
  Annotation metadata for a Weblink. In case of pasted link it can qualify to be other types in addition to being a URL - like DRIVE_DOC/DRIVE_SHEET and so on. The URL metadata will also be present and it's up to the client to decide which metadata to render it with. These fields are filled in using page render service.

  ## Attributes

  *   `domain` (*type:* `String.t`, *default:* `nil`) - Domain for this url. If it's an IP address the address is returned.
  *   `gwsUrl` (*type:* `GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t`, *default:* `nil`) - The signed GWS URL.
  *   `gwsUrlExpirationTimestamp` (*type:* `String.t`, *default:* `nil`) - The expiration timestamp for GWS URL, only set when gws_url is set.
  *   `imageHeight` (*type:* `String.t`, *default:* `nil`) - Dimensions of the image: height. This field is string to match with page render service response. Deprecated. Use int_image_height instead.
  *   `imageUrl` (*type:* `String.t`, *default:* `nil`) - Representative image of the website.
  *   `imageWidth` (*type:* `String.t`, *default:* `nil`) - Dimensions of the image: width. This field is string to match with page render service response. Deprecated. Use int_image_height instead.
  *   `intImageHeight` (*type:* `integer()`, *default:* `nil`) - Dimensions of the image: height.
  *   `intImageWidth` (*type:* `integer()`, *default:* `nil`) - Dimensions of the image: width.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Mime type of the content (Currently mapped from Page Render Service ItemType) Note that this is not necessarily the mime type of the http resource. For example a text/html from youtube or vimeo may actually be classified as a video type. Then we shall mark it as video/* since we don't know exactly what type of video it is. NEXT TAG : 16
  *   `redirectUrl` (*type:* `GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t`, *default:* `nil`) - The stable redirect URL pointing to frontend server.
  *   `shouldNotRender` (*type:* `boolean()`, *default:* `nil`) - If the UrlMetadata is missing data for rendering a chip. Deprecated. Use Annotation.ChipRenderType instead.
  *   `snippet` (*type:* `String.t`, *default:* `nil`) - Snippet/small description of the weblink.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Title of the Weblink.
  *   `url` (*type:* `GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t`, *default:* `nil`) - The original URL.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :domain => String.t() | nil,
          :gwsUrl => GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t() | nil,
          :gwsUrlExpirationTimestamp => String.t() | nil,
          :imageHeight => String.t() | nil,
          :imageUrl => String.t() | nil,
          :imageWidth => String.t() | nil,
          :intImageHeight => integer() | nil,
          :intImageWidth => integer() | nil,
          :mimeType => String.t() | nil,
          :redirectUrl => GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t() | nil,
          :shouldNotRender => boolean() | nil,
          :snippet => String.t() | nil,
          :title => String.t() | nil,
          :url => GoogleApi.CloudSearch.V1.Model.SafeUrlProto.t() | nil
        }

  field(:domain)
  field(:gwsUrl, as: GoogleApi.CloudSearch.V1.Model.SafeUrlProto)
  field(:gwsUrlExpirationTimestamp)
  field(:imageHeight)
  field(:imageUrl)
  field(:imageWidth)
  field(:intImageHeight)
  field(:intImageWidth)
  field(:mimeType)
  field(:redirectUrl, as: GoogleApi.CloudSearch.V1.Model.SafeUrlProto)
  field(:shouldNotRender)
  field(:snippet)
  field(:title)
  field(:url, as: GoogleApi.CloudSearch.V1.Model.SafeUrlProto)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.UrlMetadata do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.UrlMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.UrlMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
