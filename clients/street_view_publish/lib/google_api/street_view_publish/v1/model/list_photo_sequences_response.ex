# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StreetViewPublish.V1.Model.ListPhotoSequencesResponse do
  @moduledoc """
  Response to list all photo sequences that belong to a user.

  ## Attributes

  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - Token to retrieve the next page of results, or empty if there are no more results in the list.
  *   `photoSequences` (*type:* `list(GoogleApi.StreetViewPublish.V1.Model.Operation.t)`, *default:* `nil`) - List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nextPageToken => String.t() | nil,
          :photoSequences => list(GoogleApi.StreetViewPublish.V1.Model.Operation.t()) | nil
        }

  field(:nextPageToken)
  field(:photoSequences, as: GoogleApi.StreetViewPublish.V1.Model.Operation, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.StreetViewPublish.V1.Model.ListPhotoSequencesResponse do
  def decode(value, options) do
    GoogleApi.StreetViewPublish.V1.Model.ListPhotoSequencesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StreetViewPublish.V1.Model.ListPhotoSequencesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
