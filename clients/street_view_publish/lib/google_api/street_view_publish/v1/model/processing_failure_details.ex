# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StreetViewPublish.V1.Model.ProcessingFailureDetails do
  @moduledoc """
  Additional details to accompany the ProcessingFailureReason enum. This message is always expected to be used in conjunction with ProcessingFailureReason, and the oneof value set in this message should match the FailureReason.

  ## Attributes

  *   `gpsDataGapDetails` (*type:* `GoogleApi.StreetViewPublish.V1.Model.GpsDataGapFailureDetails.t`, *default:* `nil`) - See GpsDataGapFailureDetails.
  *   `imuDataGapDetails` (*type:* `GoogleApi.StreetViewPublish.V1.Model.ImuDataGapFailureDetails.t`, *default:* `nil`) - See ImuDataGapFailureDetails.
  *   `insufficientGpsDetails` (*type:* `GoogleApi.StreetViewPublish.V1.Model.InsufficientGpsFailureDetails.t`, *default:* `nil`) - See InsufficientGpsFailureDetails.
  *   `notOutdoorsDetails` (*type:* `GoogleApi.StreetViewPublish.V1.Model.NotOutdoorsFailureDetails.t`, *default:* `nil`) - See NotOutdoorsFailureDetails.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gpsDataGapDetails =>
            GoogleApi.StreetViewPublish.V1.Model.GpsDataGapFailureDetails.t() | nil,
          :imuDataGapDetails =>
            GoogleApi.StreetViewPublish.V1.Model.ImuDataGapFailureDetails.t() | nil,
          :insufficientGpsDetails =>
            GoogleApi.StreetViewPublish.V1.Model.InsufficientGpsFailureDetails.t() | nil,
          :notOutdoorsDetails =>
            GoogleApi.StreetViewPublish.V1.Model.NotOutdoorsFailureDetails.t() | nil
        }

  field(:gpsDataGapDetails, as: GoogleApi.StreetViewPublish.V1.Model.GpsDataGapFailureDetails)
  field(:imuDataGapDetails, as: GoogleApi.StreetViewPublish.V1.Model.ImuDataGapFailureDetails)

  field(:insufficientGpsDetails,
    as: GoogleApi.StreetViewPublish.V1.Model.InsufficientGpsFailureDetails
  )

  field(:notOutdoorsDetails, as: GoogleApi.StreetViewPublish.V1.Model.NotOutdoorsFailureDetails)
end

defimpl Poison.Decoder, for: GoogleApi.StreetViewPublish.V1.Model.ProcessingFailureDetails do
  def decode(value, options) do
    GoogleApi.StreetViewPublish.V1.Model.ProcessingFailureDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StreetViewPublish.V1.Model.ProcessingFailureDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
