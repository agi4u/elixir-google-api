# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Logging.V2.Model.LoggingQuery do
  @moduledoc """
  Describes a Cloud Logging query that can be run in Logs Explorer UI or via the logging API.In addition to the query itself, additional information may be stored to capture the display configuration and other UI state used in association with analysis of query results.

  ## Attributes

  *   `filter` (*type:* `String.t`, *default:* `nil`) - Required. An advanced query using the Logging Query Language (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the filter is 20000 characters.
  *   `summaryFieldEnd` (*type:* `integer()`, *default:* `nil`) - Characters will be counted from the end of the string.
  *   `summaryFieldStart` (*type:* `integer()`, *default:* `nil`) - Characters will be counted from the start of the string.
  *   `summaryFields` (*type:* `list(GoogleApi.Logging.V2.Model.SummaryField.t)`, *default:* `nil`) - Optional. The set of summary fields to display for this saved query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filter => String.t() | nil,
          :summaryFieldEnd => integer() | nil,
          :summaryFieldStart => integer() | nil,
          :summaryFields => list(GoogleApi.Logging.V2.Model.SummaryField.t()) | nil
        }

  field(:filter)
  field(:summaryFieldEnd)
  field(:summaryFieldStart)
  field(:summaryFields, as: GoogleApi.Logging.V2.Model.SummaryField, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.LoggingQuery do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.LoggingQuery.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.LoggingQuery do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
