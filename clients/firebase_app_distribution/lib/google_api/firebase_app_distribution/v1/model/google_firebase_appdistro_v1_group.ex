# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1Group do
  @moduledoc """
  A group which can contain testers. A group can be invited to test apps in a Firebase project.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Required. The display name of the group.
  *   `inviteLinkCount` (*type:* `integer()`, *default:* `nil`) - Output only. The number of invite links for this group.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`
  *   `releaseCount` (*type:* `integer()`, *default:* `nil`) - Output only. The number of releases this group is permitted to access.
  *   `testerCount` (*type:* `integer()`, *default:* `nil`) - Output only. The number of testers who are members of this group.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t() | nil,
          :inviteLinkCount => integer() | nil,
          :name => String.t() | nil,
          :releaseCount => integer() | nil,
          :testerCount => integer() | nil
        }

  field(:displayName)
  field(:inviteLinkCount)
  field(:name)
  field(:releaseCount)
  field(:testerCount)
end

defimpl Poison.Decoder,
  for: GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1Group do
  def decode(value, options) do
    GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1Group.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1Group do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
