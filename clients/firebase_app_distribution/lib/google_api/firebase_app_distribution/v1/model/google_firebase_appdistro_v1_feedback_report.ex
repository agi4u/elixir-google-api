# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1FeedbackReport do
  @moduledoc """
  A feedback report submitted by a tester for a release.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time when the feedback report was created.
  *   `firebaseConsoleUri` (*type:* `String.t`, *default:* `nil`) - Output only. A link to the Firebase console displaying the feedback report.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the feedback report resource. Format: `projects/{project_number}/apps/{app}/releases/{release}/feedbackReports/{feedback_report}`
  *   `screenshotUri` (*type:* `String.t`, *default:* `nil`) - Output only. A signed link (which expires in one hour) that lets you directly download the screenshot.
  *   `tester` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of the tester who submitted the feedback report.
  *   `text` (*type:* `String.t`, *default:* `nil`) - Output only. The text of the feedback report.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :firebaseConsoleUri => String.t() | nil,
          :name => String.t() | nil,
          :screenshotUri => String.t() | nil,
          :tester => String.t() | nil,
          :text => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:firebaseConsoleUri)
  field(:name)
  field(:screenshotUri)
  field(:tester)
  field(:text)
end

defimpl Poison.Decoder,
  for: GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1FeedbackReport do
  def decode(value, options) do
    GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1FeedbackReport.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.FirebaseAppDistribution.V1.Model.GoogleFirebaseAppdistroV1FeedbackReport do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
