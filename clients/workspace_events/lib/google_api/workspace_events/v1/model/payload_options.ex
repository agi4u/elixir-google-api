# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WorkspaceEvents.V1.Model.PayloadOptions do
  @moduledoc """
  Options about what data to include in the event payload. Only supported for Google Chat events.

  ## Attributes

  *   `fieldMask` (*type:* `String.t`, *default:* `nil`) - Optional. If `include_resource` is set to `true`, the list of fields to include in the event payload. Separate fields with a comma. For example, to include a Google Chat message's sender and create time, enter `message.sender,message.createTime`. If omitted, the payload includes all fields for the resource. If you specify a field that doesn't exist for the resource, the system ignores the field.
  *   `includeResource` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether the event payload includes data about the resource that changed. For example, for an event where a Google Chat message was created, whether the payload contains data about the [`Message`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages) resource. If false, the event payload only includes the name of the changed resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fieldMask => String.t() | nil,
          :includeResource => boolean() | nil
        }

  field(:fieldMask)
  field(:includeResource)
end

defimpl Poison.Decoder, for: GoogleApi.WorkspaceEvents.V1.Model.PayloadOptions do
  def decode(value, options) do
    GoogleApi.WorkspaceEvents.V1.Model.PayloadOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WorkspaceEvents.V1.Model.PayloadOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
