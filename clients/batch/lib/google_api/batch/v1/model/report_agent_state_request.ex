# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Batch.V1.Model.ReportAgentStateRequest do
  @moduledoc """
  Request to report agent's state. The Request itself implies the agent is healthy.

  ## Attributes

  *   `agentInfo` (*type:* `GoogleApi.Batch.V1.Model.AgentInfo.t`, *default:* `nil`) - Agent info.
  *   `agentTimingInfo` (*type:* `GoogleApi.Batch.V1.Model.AgentTimingInfo.t`, *default:* `nil`) - Agent timing info.
  *   `metadata` (*type:* `GoogleApi.Batch.V1.Model.AgentMetadata.t`, *default:* `nil`) - Agent metadata.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :agentInfo => GoogleApi.Batch.V1.Model.AgentInfo.t() | nil,
          :agentTimingInfo => GoogleApi.Batch.V1.Model.AgentTimingInfo.t() | nil,
          :metadata => GoogleApi.Batch.V1.Model.AgentMetadata.t() | nil
        }

  field(:agentInfo, as: GoogleApi.Batch.V1.Model.AgentInfo)
  field(:agentTimingInfo, as: GoogleApi.Batch.V1.Model.AgentTimingInfo)
  field(:metadata, as: GoogleApi.Batch.V1.Model.AgentMetadata)
end

defimpl Poison.Decoder, for: GoogleApi.Batch.V1.Model.ReportAgentStateRequest do
  def decode(value, options) do
    GoogleApi.Batch.V1.Model.ReportAgentStateRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Batch.V1.Model.ReportAgentStateRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
