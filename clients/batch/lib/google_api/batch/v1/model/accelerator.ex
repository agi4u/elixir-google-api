# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Batch.V1.Model.Accelerator do
  @moduledoc """
  Accelerator describes Compute Engine accelerators to be attached to the VM.

  ## Attributes

  *   `count` (*type:* `String.t`, *default:* `nil`) - The number of accelerators of this type.
  *   `driverVersion` (*type:* `String.t`, *default:* `nil`) - Optional. The NVIDIA GPU driver version that should be installed for this type. You can define the specific driver version such as "470.103.01", following the driver version requirements in https://cloud.google.com/compute/docs/gpus/install-drivers-gpu#minimum-driver. Batch will install the specific accelerator driver if qualified.
  *   `installGpuDrivers` (*type:* `boolean()`, *default:* `nil`) - Deprecated: please use instances[0].install_gpu_drivers instead.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The accelerator type. For example, "nvidia-tesla-t4". See `gcloud compute accelerator-types list`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :count => String.t() | nil,
          :driverVersion => String.t() | nil,
          :installGpuDrivers => boolean() | nil,
          :type => String.t() | nil
        }

  field(:count)
  field(:driverVersion)
  field(:installGpuDrivers)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Batch.V1.Model.Accelerator do
  def decode(value, options) do
    GoogleApi.Batch.V1.Model.Accelerator.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Batch.V1.Model.Accelerator do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
