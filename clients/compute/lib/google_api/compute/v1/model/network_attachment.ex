# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.NetworkAttachment do
  @moduledoc """
  NetworkAttachments A network attachment resource ...

  ## Attributes

  *   `connectionEndpoints` (*type:* `list(GoogleApi.Compute.V1.Model.NetworkAttachmentConnectedEndpoint.t)`, *default:* `nil`) - [Output Only] An array of connections for all the producers connected to this network attachment.
  *   `connectionPreference` (*type:* `String.t`, *default:* `nil`) - 
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource type. The server generates this identifier.
  *   `kind` (*type:* `String.t`, *default:* `compute#networkAttachment`) - [Output Only] Type of the resource.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `network` (*type:* `String.t`, *default:* `nil`) - [Output Only] The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
  *   `producerAcceptLists` (*type:* `list(String.t)`, *default:* `nil`) - Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
  *   `producerRejectLists` (*type:* `list(String.t)`, *default:* `nil`) - Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
  *   `region` (*type:* `String.t`, *default:* `nil`) - [Output Only] URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `selfLinkWithId` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for this resource's resource id.
  *   `subnetworks` (*type:* `list(String.t)`, *default:* `nil`) - An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectionEndpoints =>
            list(GoogleApi.Compute.V1.Model.NetworkAttachmentConnectedEndpoint.t()) | nil,
          :connectionPreference => String.t() | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :fingerprint => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :name => String.t() | nil,
          :network => String.t() | nil,
          :producerAcceptLists => list(String.t()) | nil,
          :producerRejectLists => list(String.t()) | nil,
          :region => String.t() | nil,
          :selfLink => String.t() | nil,
          :selfLinkWithId => String.t() | nil,
          :subnetworks => list(String.t()) | nil
        }

  field(:connectionEndpoints,
    as: GoogleApi.Compute.V1.Model.NetworkAttachmentConnectedEndpoint,
    type: :list
  )

  field(:connectionPreference)
  field(:creationTimestamp)
  field(:description)
  field(:fingerprint)
  field(:id)
  field(:kind)
  field(:name)
  field(:network)
  field(:producerAcceptLists, type: :list)
  field(:producerRejectLists, type: :list)
  field(:region)
  field(:selfLink)
  field(:selfLinkWithId)
  field(:subnetworks, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.NetworkAttachment do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.NetworkAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.NetworkAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
