# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings do
  @moduledoc """
  Contains information of NAT Mappings provided by a NAT Rule.

  ## Attributes

  *   `drainNatIpPortRanges` (*type:* `list(String.t)`, *default:* `nil`) - List of all drain IP:port-range mappings assigned to this interface by this rule. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  *   `natIpPortRanges` (*type:* `list(String.t)`, *default:* `nil`) - A list of all IP:port-range mappings assigned to this interface by this rule. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  *   `numTotalDrainNatPorts` (*type:* `integer()`, *default:* `nil`) - Total number of drain ports across all NAT IPs allocated to this interface by this rule. It equals the aggregated port number in the field drain_nat_ip_port_ranges.
  *   `numTotalNatPorts` (*type:* `integer()`, *default:* `nil`) - Total number of ports across all NAT IPs allocated to this interface by this rule. It equals the aggregated port number in the field nat_ip_port_ranges.
  *   `ruleNumber` (*type:* `integer()`, *default:* `nil`) - Rule number of the NAT Rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :drainNatIpPortRanges => list(String.t()) | nil,
          :natIpPortRanges => list(String.t()) | nil,
          :numTotalDrainNatPorts => integer() | nil,
          :numTotalNatPorts => integer() | nil,
          :ruleNumber => integer() | nil
        }

  field(:drainNatIpPortRanges, type: :list)
  field(:natIpPortRanges, type: :list)
  field(:numTotalDrainNatPorts)
  field(:numTotalNatPorts)
  field(:ruleNumber)
end

defimpl Poison.Decoder,
  for: GoogleApi.Compute.V1.Model.VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Compute.V1.Model.VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
