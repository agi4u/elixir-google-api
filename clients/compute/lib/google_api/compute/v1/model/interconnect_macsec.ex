# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.InterconnectMacsec do
  @moduledoc """
  Configuration information for enabling Media Access Control security (MACsec) on this Cloud Interconnect connection between Google and your on-premises router.

  ## Attributes

  *   `failOpen` (*type:* `boolean()`, *default:* `nil`) - If set to true, the Interconnect connection is configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect connection is configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.
  *   `preSharedKeys` (*type:* `list(GoogleApi.Compute.V1.Model.InterconnectMacsecPreSharedKey.t)`, *default:* `nil`) - Required. A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK is generated for each key in the key chain. Google router automatically picks the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failOpen => boolean() | nil,
          :preSharedKeys =>
            list(GoogleApi.Compute.V1.Model.InterconnectMacsecPreSharedKey.t()) | nil
        }

  field(:failOpen)

  field(:preSharedKeys, as: GoogleApi.Compute.V1.Model.InterconnectMacsecPreSharedKey, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.InterconnectMacsec do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.InterconnectMacsec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.InterconnectMacsec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
