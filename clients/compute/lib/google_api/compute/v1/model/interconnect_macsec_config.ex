# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.InterconnectMacsecConfig do
  @moduledoc """
  MACsec configuration information for the Interconnect connection. Contains the generated Connectivity Association Key Name (CKN) and the key (CAK) for this Interconnect connection.

  ## Attributes

  *   `preSharedKeys` (*type:* `list(GoogleApi.Compute.V1.Model.InterconnectMacsecConfigPreSharedKey.t)`, *default:* `nil`) - A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK is generated for each key in the key chain. Google router automatically picks the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :preSharedKeys =>
            list(GoogleApi.Compute.V1.Model.InterconnectMacsecConfigPreSharedKey.t()) | nil
        }

  field(:preSharedKeys,
    as: GoogleApi.Compute.V1.Model.InterconnectMacsecConfigPreSharedKey,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.InterconnectMacsecConfig do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.InterconnectMacsecConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.InterconnectMacsecConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
