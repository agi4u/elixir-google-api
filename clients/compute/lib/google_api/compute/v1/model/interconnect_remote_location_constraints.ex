# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraints do
  @moduledoc """


  ## Attributes

  *   `portPairRemoteLocation` (*type:* `String.t`, *default:* `nil`) - [Output Only] Port pair remote location constraints, which can take one of the following values: PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION, PORT_PAIR_MATCHING_REMOTE_LOCATION. Google Cloud API refers only to individual ports, but the UI uses this field when ordering a pair of ports, to prevent users from accidentally ordering something that is incompatible with their cloud provider. Specifically, when ordering a redundant pair of Cross-Cloud Interconnect ports, and one of them uses a remote location with portPairMatchingRemoteLocation set to matching, the UI requires that both ports use the same remote location.
  *   `portPairVlan` (*type:* `String.t`, *default:* `nil`) - [Output Only] Port pair VLAN constraints, which can take one of the following values: PORT_PAIR_UNCONSTRAINED_VLAN, PORT_PAIR_MATCHING_VLAN
  *   `subnetLengthRange` (*type:* `GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraintsSubnetLengthRange.t`, *default:* `nil`) - [Output Only] [min-length, max-length] The minimum and maximum value (inclusive) for the IPv4 subnet length. For example, an interconnectRemoteLocation for Azure has {min: 30, max: 30} because Azure requires /30 subnets. This range specifies the values supported by both cloud providers. Interconnect currently supports /29 and /30 IPv4 subnet lengths. If a remote cloud has no constraint on IPv4 subnet length, the range would thus be {min: 29, max: 30}. 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :portPairRemoteLocation => String.t() | nil,
          :portPairVlan => String.t() | nil,
          :subnetLengthRange =>
            GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraintsSubnetLengthRange.t()
            | nil
        }

  field(:portPairRemoteLocation)
  field(:portPairVlan)

  field(:subnetLengthRange,
    as: GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraintsSubnetLengthRange
  )
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraints do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraints.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.InterconnectRemoteLocationConstraints do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
