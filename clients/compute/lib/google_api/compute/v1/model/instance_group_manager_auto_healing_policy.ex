# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.InstanceGroupManagerAutoHealingPolicy do
  @moduledoc """


  ## Attributes

  *   `healthCheck` (*type:* `String.t`, *default:* `nil`) - The URL for the health check that signals autohealing.
  *   `initialDelaySec` (*type:* `integer()`, *default:* `nil`) - The initial delay is the number of seconds that a new VM takes to initialize and run its startup script. During a VM's initial delay period, the MIG ignores unsuccessful health checks because the VM might be in the startup process. This prevents the MIG from prematurely recreating a VM. If the health check receives a healthy response during the initial delay, it indicates that the startup process is complete and the VM is ready. The value of initial delay must be between 0 and 3600 seconds. The default value is 0.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :healthCheck => String.t() | nil,
          :initialDelaySec => integer() | nil
        }

  field(:healthCheck)
  field(:initialDelaySec)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.InstanceGroupManagerAutoHealingPolicy do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.InstanceGroupManagerAutoHealingPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.InstanceGroupManagerAutoHealingPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
