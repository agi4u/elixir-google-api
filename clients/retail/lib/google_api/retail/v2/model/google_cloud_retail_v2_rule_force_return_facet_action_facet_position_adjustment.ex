# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment do
  @moduledoc """
  Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.

  ## Attributes

  *   `attributeName` (*type:* `String.t`, *default:* `nil`) - The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
  *   `position` (*type:* `integer()`, *default:* `nil`) - This is the position in the request as explained above. It should be strictly positive be at most 100.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributeName => String.t() | nil,
          :position => integer() | nil
        }

  field(:attributeName)
  field(:position)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
