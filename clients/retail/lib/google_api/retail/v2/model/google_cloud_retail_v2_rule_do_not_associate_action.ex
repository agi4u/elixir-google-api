# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleDoNotAssociateAction do
  @moduledoc """
  Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".

  ## Attributes

  *   `doNotAssociateTerms` (*type:* `list(String.t)`, *default:* `nil`) - Cannot contain duplicates or the query term. Can specify up to 100 terms.
  *   `queryTerms` (*type:* `list(String.t)`, *default:* `nil`) - Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
  *   `terms` (*type:* `list(String.t)`, *default:* `nil`) - Will be [deprecated = true] post migration;
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :doNotAssociateTerms => list(String.t()) | nil,
          :queryTerms => list(String.t()) | nil,
          :terms => list(String.t()) | nil
        }

  field(:doNotAssociateTerms, type: :list)
  field(:queryTerms, type: :list)
  field(:terms, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleDoNotAssociateAction do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleDoNotAssociateAction.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2RuleDoNotAssociateAction do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
