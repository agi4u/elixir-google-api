# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2AttributesConfig do
  @moduledoc """
  Catalog level attribute config.

  ## Attributes

  *   `attributeConfigLevel` (*type:* `String.t`, *default:* `nil`) - Output only. The AttributeConfigLevel used for this catalog.
  *   `catalogAttributes` (*type:* `%{optional(String.t) => GoogleApi.Retail.V2.Model.GoogleCloudRetailV2CatalogAttribute.t}`, *default:* `nil`) - Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or searchable for each attribute. The key is catalog attribute's name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of catalog attributes allowed in a request is 1000.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. The fully qualified resource name of the attribute config. Format: `projects/*/locations/*/catalogs/*/attributesConfig`
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributeConfigLevel => String.t() | nil,
          :catalogAttributes =>
            %{
              optional(String.t()) =>
                GoogleApi.Retail.V2.Model.GoogleCloudRetailV2CatalogAttribute.t()
            }
            | nil,
          :name => String.t() | nil
        }

  field(:attributeConfigLevel)

  field(:catalogAttributes,
    as: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2CatalogAttribute,
    type: :map
  )

  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2AttributesConfig do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2AttributesConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2AttributesConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
