# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Connectors.V1.Model.SshPublicKey do
  @moduledoc """
  Parameters to support Ssh public key Authentication.

  ## Attributes

  *   `certType` (*type:* `String.t`, *default:* `nil`) - Format of SSH Client cert.
  *   `password` (*type:* `GoogleApi.Connectors.V1.Model.Secret.t`, *default:* `nil`) - This is an optional field used in case client has enabled multi-factor authentication
  *   `sshClientCert` (*type:* `GoogleApi.Connectors.V1.Model.Secret.t`, *default:* `nil`) - SSH Client Cert. It should contain both public and private key.
  *   `sshClientCertPass` (*type:* `GoogleApi.Connectors.V1.Model.Secret.t`, *default:* `nil`) - Password (passphrase) for ssh client certificate if it has one.
  *   `username` (*type:* `String.t`, *default:* `nil`) - The user account used to authenticate.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certType => String.t() | nil,
          :password => GoogleApi.Connectors.V1.Model.Secret.t() | nil,
          :sshClientCert => GoogleApi.Connectors.V1.Model.Secret.t() | nil,
          :sshClientCertPass => GoogleApi.Connectors.V1.Model.Secret.t() | nil,
          :username => String.t() | nil
        }

  field(:certType)
  field(:password, as: GoogleApi.Connectors.V1.Model.Secret)
  field(:sshClientCert, as: GoogleApi.Connectors.V1.Model.Secret)
  field(:sshClientCertPass, as: GoogleApi.Connectors.V1.Model.Secret)
  field(:username)
end

defimpl Poison.Decoder, for: GoogleApi.Connectors.V1.Model.SshPublicKey do
  def decode(value, options) do
    GoogleApi.Connectors.V1.Model.SshPublicKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Connectors.V1.Model.SshPublicKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
