# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidPublisher.V3.Model.ModuleMetadata do
  @moduledoc """
  Metadata of a module.

  ## Attributes

  *   `deliveryType` (*type:* `String.t`, *default:* `nil`) - Indicates the delivery type (e.g. on-demand) of the module.
  *   `dependencies` (*type:* `list(String.t)`, *default:* `nil`) - Names of the modules that this module directly depends on. Each module implicitly depends on the base module.
  *   `moduleType` (*type:* `String.t`, *default:* `nil`) - Indicates the type of this feature module.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Module name.
  *   `targeting` (*type:* `GoogleApi.AndroidPublisher.V3.Model.ModuleTargeting.t`, *default:* `nil`) - The targeting that makes a conditional module installed. Relevant only for Split APKs.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deliveryType => String.t() | nil,
          :dependencies => list(String.t()) | nil,
          :moduleType => String.t() | nil,
          :name => String.t() | nil,
          :targeting => GoogleApi.AndroidPublisher.V3.Model.ModuleTargeting.t() | nil
        }

  field(:deliveryType)
  field(:dependencies, type: :list)
  field(:moduleType)
  field(:name)
  field(:targeting, as: GoogleApi.AndroidPublisher.V3.Model.ModuleTargeting)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidPublisher.V3.Model.ModuleMetadata do
  def decode(value, options) do
    GoogleApi.AndroidPublisher.V3.Model.ModuleMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidPublisher.V3.Model.ModuleMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
