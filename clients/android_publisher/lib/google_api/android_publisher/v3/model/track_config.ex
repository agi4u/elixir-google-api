# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidPublisher.V3.Model.TrackConfig do
  @moduledoc """
  Configurations of the new track.

  ## Attributes

  *   `formFactor` (*type:* `String.t`, *default:* `nil`) - Required. Form factor of the new track. Defaults to the default track.
  *   `track` (*type:* `String.t`, *default:* `nil`) - Required. Identifier of the new track. For default tracks, this field consists of the track alias only. Form factor tracks have a special prefix as an identifier, for example `wear:production`, `automotive:production`. This prefix must match the value of the `form_factor` field, if it is not a default track. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. Type of the new track. Currently, the only supported value is closedTesting.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :formFactor => String.t() | nil,
          :track => String.t() | nil,
          :type => String.t() | nil
        }

  field(:formFactor)
  field(:track)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidPublisher.V3.Model.TrackConfig do
  def decode(value, options) do
    GoogleApi.AndroidPublisher.V3.Model.TrackConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidPublisher.V3.Model.TrackConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
