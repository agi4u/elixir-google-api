# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.TrafficDirector.V3.Model.RoutesConfigDump do
  @moduledoc """
  Envoy's RDS implementation fills this message with all currently loaded routes, as described by their RouteConfiguration objects. Static routes that are either defined in the bootstrap configuration or defined inline while configuring listeners are separated from those configured dynamically via RDS. Route configuration information can be used to recreate an Envoy configuration by populating all routes as static routes or by returning them in RDS responses.

  ## Attributes

  *   `dynamicRouteConfigs` (*type:* `list(GoogleApi.TrafficDirector.V3.Model.DynamicRouteConfig.t)`, *default:* `nil`) - The dynamically loaded route configs.
  *   `staticRouteConfigs` (*type:* `list(GoogleApi.TrafficDirector.V3.Model.StaticRouteConfig.t)`, *default:* `nil`) - The statically loaded route configs.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dynamicRouteConfigs =>
            list(GoogleApi.TrafficDirector.V3.Model.DynamicRouteConfig.t()) | nil,
          :staticRouteConfigs =>
            list(GoogleApi.TrafficDirector.V3.Model.StaticRouteConfig.t()) | nil
        }

  field(:dynamicRouteConfigs,
    as: GoogleApi.TrafficDirector.V3.Model.DynamicRouteConfig,
    type: :list
  )

  field(:staticRouteConfigs, as: GoogleApi.TrafficDirector.V3.Model.StaticRouteConfig, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.TrafficDirector.V3.Model.RoutesConfigDump do
  def decode(value, options) do
    GoogleApi.TrafficDirector.V3.Model.RoutesConfigDump.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TrafficDirector.V3.Model.RoutesConfigDump do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
