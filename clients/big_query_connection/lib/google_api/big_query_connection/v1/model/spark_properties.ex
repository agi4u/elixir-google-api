# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQueryConnection.V1.Model.SparkProperties do
  @moduledoc """
  Container for connection properties to execute stored procedures for Apache Spark.

  ## Attributes

  *   `metastoreServiceConfig` (*type:* `GoogleApi.BigQueryConnection.V1.Model.MetastoreServiceConfig.t`, *default:* `nil`) - Optional. Dataproc Metastore Service configuration for the connection.
  *   `serviceAccountId` (*type:* `String.t`, *default:* `nil`) - Output only. The account ID of the service created for the purpose of this connection. The service account does not have any permissions associated with it when it is created. After creation, customers delegate permissions to the service account. When the connection is used in the context of a stored procedure for Apache Spark in BigQuery, the service account is used to connect to the desired resources in Google Cloud. The account ID is in the form of: bqcx--@gcp-sa-bigquery-consp.iam.gserviceaccount.com
  *   `sparkHistoryServerConfig` (*type:* `GoogleApi.BigQueryConnection.V1.Model.SparkHistoryServerConfig.t`, *default:* `nil`) - Optional. Spark History Server configuration for the connection.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :metastoreServiceConfig =>
            GoogleApi.BigQueryConnection.V1.Model.MetastoreServiceConfig.t() | nil,
          :serviceAccountId => String.t() | nil,
          :sparkHistoryServerConfig =>
            GoogleApi.BigQueryConnection.V1.Model.SparkHistoryServerConfig.t() | nil
        }

  field(:metastoreServiceConfig, as: GoogleApi.BigQueryConnection.V1.Model.MetastoreServiceConfig)
  field(:serviceAccountId)

  field(:sparkHistoryServerConfig,
    as: GoogleApi.BigQueryConnection.V1.Model.SparkHistoryServerConfig
  )
end

defimpl Poison.Decoder, for: GoogleApi.BigQueryConnection.V1.Model.SparkProperties do
  def decode(value, options) do
    GoogleApi.BigQueryConnection.V1.Model.SparkProperties.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQueryConnection.V1.Model.SparkProperties do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
