# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQueryConnection.V1.Model.AzureProperties do
  @moduledoc """
  Container for connection properties specific to Azure.

  ## Attributes

  *   `application` (*type:* `String.t`, *default:* `nil`) - Output only. The name of the Azure Active Directory Application.
  *   `clientId` (*type:* `String.t`, *default:* `nil`) - Output only. The client id of the Azure Active Directory Application.
  *   `customerTenantId` (*type:* `String.t`, *default:* `nil`) - The id of customer's directory that host the data.
  *   `federatedApplicationClientId` (*type:* `String.t`, *default:* `nil`) - The client ID of the user's Azure Active Directory Application used for a federated connection.
  *   `identity` (*type:* `String.t`, *default:* `nil`) - Output only. A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's Azure Active Directory Application.
  *   `objectId` (*type:* `String.t`, *default:* `nil`) - Output only. The object id of the Azure Active Directory Application.
  *   `redirectUri` (*type:* `String.t`, *default:* `nil`) - The URL user will be redirected to after granting consent during connection setup.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :application => String.t() | nil,
          :clientId => String.t() | nil,
          :customerTenantId => String.t() | nil,
          :federatedApplicationClientId => String.t() | nil,
          :identity => String.t() | nil,
          :objectId => String.t() | nil,
          :redirectUri => String.t() | nil
        }

  field(:application)
  field(:clientId)
  field(:customerTenantId)
  field(:federatedApplicationClientId)
  field(:identity)
  field(:objectId)
  field(:redirectUri)
end

defimpl Poison.Decoder, for: GoogleApi.BigQueryConnection.V1.Model.AzureProperties do
  def decode(value, options) do
    GoogleApi.BigQueryConnection.V1.Model.AzureProperties.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQueryConnection.V1.Model.AzureProperties do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
