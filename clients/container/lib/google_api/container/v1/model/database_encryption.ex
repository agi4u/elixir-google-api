# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.DatabaseEncryption do
  @moduledoc """
  Configuration of etcd encryption.

  ## Attributes

  *   `currentState` (*type:* `String.t`, *default:* `nil`) - Output only. The current state of etcd encryption.
  *   `decryptionKeys` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Keys in use by the cluster for decrypting existing objects, in addition to the key in `key_name`. Each item is a CloudKMS key resource.
  *   `keyName` (*type:* `String.t`, *default:* `nil`) - Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
  *   `lastOperationErrors` (*type:* `list(GoogleApi.Container.V1.Model.OperationError.t)`, *default:* `nil`) - Output only. Records errors seen during DatabaseEncryption update operations.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The desired state of etcd encryption.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :currentState => String.t() | nil,
          :decryptionKeys => list(String.t()) | nil,
          :keyName => String.t() | nil,
          :lastOperationErrors => list(GoogleApi.Container.V1.Model.OperationError.t()) | nil,
          :state => String.t() | nil
        }

  field(:currentState)
  field(:decryptionKeys, type: :list)
  field(:keyName)
  field(:lastOperationErrors, as: GoogleApi.Container.V1.Model.OperationError, type: :list)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.DatabaseEncryption do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.DatabaseEncryption.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.DatabaseEncryption do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
