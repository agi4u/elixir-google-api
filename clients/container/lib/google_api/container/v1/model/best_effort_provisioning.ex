# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.BestEffortProvisioning do
  @moduledoc """
  Best effort provisioning.

  ## Attributes

  *   `enabled` (*type:* `boolean()`, *default:* `nil`) - When this is enabled, cluster/node pool creations will ignore non-fatal errors like stockout to best provision as many nodes as possible right now and eventually bring up all target number of nodes
  *   `minProvisionNodes` (*type:* `integer()`, *default:* `nil`) - Minimum number of nodes to be provisioned to be considered as succeeded, and the rest of nodes will be provisioned gradually and eventually when stockout issue has been resolved.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :enabled => boolean() | nil,
          :minProvisionNodes => integer() | nil
        }

  field(:enabled)
  field(:minProvisionNodes)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.BestEffortProvisioning do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.BestEffortProvisioning.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.BestEffortProvisioning do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
