# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseHosting.V1beta1.Model.CloudRunRewrite do
  @moduledoc """
  A configured rewrite that directs requests to a Cloud Run service. If the Cloud Run service does not exist when setting or updating your Firebase Hosting configuration, then the request fails. Any errors from the Cloud Run service are passed to the end user (for example, if you delete a service, any requests directed to that service receive a `404` error).

  ## Attributes

  *   `region` (*type:* `String.t`, *default:* `nil`) - Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
  *   `serviceId` (*type:* `String.t`, *default:* `nil`) - Required. User-defined ID of the Cloud Run service.
  *   `tag` (*type:* `String.t`, *default:* `nil`) - Optional. User-provided TrafficConfig tag to send traffic to. When omitted, traffic is sent to the service-wide URI
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :region => String.t() | nil,
          :serviceId => String.t() | nil,
          :tag => String.t() | nil
        }

  field(:region)
  field(:serviceId)
  field(:tag)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.CloudRunRewrite do
  def decode(value, options) do
    GoogleApi.FirebaseHosting.V1beta1.Model.CloudRunRewrite.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.CloudRunRewrite do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
