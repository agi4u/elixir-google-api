# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2TransformationLocation do
  @moduledoc """
  Specifies the location of a transformation.

  ## Attributes

  *   `containerType` (*type:* `String.t`, *default:* `nil`) - Information about the functionality of the container where this finding occurred, if available.
  *   `findingId` (*type:* `String.t`, *default:* `nil`) - For infotype transformations, link to the corresponding findings ID so that location information does not need to be duplicated. Each findings ID correlates to an entry in the findings output table, this table only gets created when users specify to save findings (add the save findings action to the request).
  *   `recordTransformation` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RecordTransformation.t`, *default:* `nil`) - For record transformations, provide a field and container information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :containerType => String.t() | nil,
          :findingId => String.t() | nil,
          :recordTransformation =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RecordTransformation.t() | nil
        }

  field(:containerType)
  field(:findingId)
  field(:recordTransformation, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RecordTransformation)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2TransformationLocation do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2TransformationLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2TransformationLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
