# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeByHotword do
  @moduledoc """
  The rule to exclude findings based on a hotword. For record inspection of tables, column names are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery column that matches a specific pattern.

  ## Attributes

  *   `hotwordRegex` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Regex.t`, *default:* `nil`) - Regular expression pattern defining what qualifies as a hotword.
  *   `proximity` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Proximity.t`, *default:* `nil`) - Range of characters within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. The windowBefore property in proximity should be set to 1 if the hotword needs to be included in a column header.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hotwordRegex => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Regex.t() | nil,
          :proximity => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Proximity.t() | nil
        }

  field(:hotwordRegex, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Regex)
  field(:proximity, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Proximity)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeByHotword do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeByHotword.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeByHotword do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
