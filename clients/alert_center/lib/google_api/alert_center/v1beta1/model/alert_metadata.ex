# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AlertCenter.V1beta1.Model.AlertMetadata do
  @moduledoc """
  An alert metadata.

  ## Attributes

  *   `alertId` (*type:* `String.t`, *default:* `nil`) - Output only. The alert identifier.
  *   `assignee` (*type:* `String.t`, *default:* `nil`) - The email address of the user assigned to the alert.
  *   `customerId` (*type:* `String.t`, *default:* `nil`) - Output only. The unique identifier of the Google Workspace account of the customer.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metadata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly.
  *   `severity` (*type:* `String.t`, *default:* `nil`) - The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW
  *   `status` (*type:* `String.t`, *default:* `nil`) - The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this metadata was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alertId => String.t() | nil,
          :assignee => String.t() | nil,
          :customerId => String.t() | nil,
          :etag => String.t() | nil,
          :severity => String.t() | nil,
          :status => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:alertId)
  field(:assignee)
  field(:customerId)
  field(:etag)
  field(:severity)
  field(:status)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.AlertCenter.V1beta1.Model.AlertMetadata do
  def decode(value, options) do
    GoogleApi.AlertCenter.V1beta1.Model.AlertMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AlertCenter.V1beta1.Model.AlertMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
