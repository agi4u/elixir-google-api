# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AlertCenter.V1beta1.Model.TransferError do
  @moduledoc """
  Details for an invalid transfer or forward.

  ## Attributes

  *   `email` (*type:* `String.t`, *default:* `nil`) - User's email address. This may be unavailable if the entity was deleted.
  *   `entityType` (*type:* `String.t`, *default:* `nil`) - Type of entity being transferred to. For ring group members, this should always be USER.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Ring group or auto attendant ID. Not set for users.
  *   `invalidReason` (*type:* `String.t`, *default:* `nil`) - Reason for the error.
  *   `name` (*type:* `String.t`, *default:* `nil`) - User's full name, or the ring group / auto attendant name. This may be unavailable if the entity was deleted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :email => String.t() | nil,
          :entityType => String.t() | nil,
          :id => String.t() | nil,
          :invalidReason => String.t() | nil,
          :name => String.t() | nil
        }

  field(:email)
  field(:entityType)
  field(:id)
  field(:invalidReason)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.AlertCenter.V1beta1.Model.TransferError do
  def decode(value, options) do
    GoogleApi.AlertCenter.V1beta1.Model.TransferError.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AlertCenter.V1beta1.Model.TransferError do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
