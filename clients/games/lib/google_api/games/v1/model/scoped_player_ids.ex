# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Games.V1.Model.ScopedPlayerIds do
  @moduledoc """
  Scoped player identifiers.

  ## Attributes

  *   `developerPlayerKey` (*type:* `String.t`, *default:* `nil`) - Identifier of the player across all games of the given developer. Every player has the same developer_player_key in all games of one developer. Developer player key changes for the game if the game is transferred to another developer. Note that game_player_id will stay unchanged.
  *   `gamePlayerId` (*type:* `String.t`, *default:* `nil`) - Game-scoped player identifier. This is the same id that is returned in GetPlayer game_player_id field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :developerPlayerKey => String.t() | nil,
          :gamePlayerId => String.t() | nil
        }

  field(:developerPlayerKey)
  field(:gamePlayerId)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.ScopedPlayerIds do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.ScopedPlayerIds.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.ScopedPlayerIds do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
