# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Transcoder.V1.Model.AudioMapping do
  @moduledoc """
  The mapping for the JobConfig.edit_list atoms with audio EditAtom.inputs.

  ## Attributes

  *   `atomKey` (*type:* `String.t`, *default:* `nil`) - Required. The EditAtom.key that references the atom with audio inputs in the JobConfig.edit_list.
  *   `gainDb` (*type:* `float()`, *default:* `nil`) - Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.
  *   `inputChannel` (*type:* `integer()`, *default:* `nil`) - Required. The zero-based index of the channel in the input audio stream.
  *   `inputKey` (*type:* `String.t`, *default:* `nil`) - Required. The Input.key that identifies the input file.
  *   `inputTrack` (*type:* `integer()`, *default:* `nil`) - Required. The zero-based index of the track in the input file.
  *   `outputChannel` (*type:* `integer()`, *default:* `nil`) - Required. The zero-based index of the channel in the output audio stream.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :atomKey => String.t() | nil,
          :gainDb => float() | nil,
          :inputChannel => integer() | nil,
          :inputKey => String.t() | nil,
          :inputTrack => integer() | nil,
          :outputChannel => integer() | nil
        }

  field(:atomKey)
  field(:gainDb)
  field(:inputChannel)
  field(:inputKey)
  field(:inputTrack)
  field(:outputChannel)
end

defimpl Poison.Decoder, for: GoogleApi.Transcoder.V1.Model.AudioMapping do
  def decode(value, options) do
    GoogleApi.Transcoder.V1.Model.AudioMapping.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Transcoder.V1.Model.AudioMapping do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
